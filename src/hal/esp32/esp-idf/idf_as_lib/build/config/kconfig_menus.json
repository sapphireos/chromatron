[
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_CMAKE",
        "name": "IDF_CMAKE",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_ENV_FPGA",
        "name": "IDF_ENV_FPGA",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ARCH_RISCV",
        "name": "IDF_TARGET_ARCH_RISCV",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ARCH_XTENSA",
        "name": "IDF_TARGET_ARCH_XTENSA",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET",
        "name": "IDF_TARGET",
        "range": null,
        "title": null,
        "type": "string"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32",
        "name": "IDF_TARGET_ESP32",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32S2",
        "name": "IDF_TARGET_ESP32S2",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32S3",
        "name": "IDF_TARGET_ESP32S3",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32C3",
        "name": "IDF_TARGET_ESP32C3",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32H2",
        "name": "IDF_TARGET_ESP32H2",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_LINUX",
        "name": "IDF_TARGET_LINUX",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_FIRMWARE_CHIP_ID",
        "name": "IDF_FIRMWARE_CHIP_ID",
        "range": null,
        "title": null,
        "type": "hex"
    },
    {
        "children": [
            {
                "children": [],
                "depends_on": null,
                "help": "The prefix/path that is used to call the toolchain. The default setting assumes\na crosstool-ng gcc setup that is in your PATH.",
                "id": "SDK_TOOLPREFIX",
                "name": "SDK_TOOLPREFIX",
                "range": null,
                "title": "Compiler toolchain path/prefix",
                "type": "string"
            },
            {
                "children": [],
                "depends_on": "!IDF_CMAKE",
                "help": "The executable name/path that is used to run python.\n\n(Note: This option is used with the legacy GNU Make build system only.)",
                "id": "SDK_PYTHON",
                "name": "SDK_PYTHON",
                "range": null,
                "title": "Python interpreter",
                "type": "string"
            },
            {
                "children": [],
                "depends_on": "!IDF_CMAKE",
                "help": "Adds --warn-undefined-variables to MAKEFLAGS. This causes make to\nprint a warning any time an undefined variable is referenced.\n\nThis option helps find places where a variable reference is misspelled\nor otherwise missing, but it can be unwanted if you have Makefiles which\ndepend on undefined variables expanding to an empty string.\n\n(Note: this option is used with the legacy GNU Make build system only.)",
                "id": "SDK_MAKE_WARN_UNDEFINED_VARIABLES",
                "name": "SDK_MAKE_WARN_UNDEFINED_VARIABLES",
                "range": null,
                "title": "'make' warns on undefined variables",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Enable this option in case you have a custom toolchain which supports time_t wide 64-bits.\nThis option checks time_t is 64-bits and disables ROM time functions\nto use the time functions from the toolchain instead.\nThis option allows resolving the Y2K38 problem.\nSee \"Setup Linux Toolchain from Scratch\" to build\na custom toolchain which supports 64-bits time_t.\n\nNote: ESP-IDF does not currently come with any pre-compiled toolchain\nthat supports 64-bit wide time_t.\nThis will change in a future major release,\nbut currently 64-bit time_t requires a custom built toolchain.",
                "id": "SDK_TOOLCHAIN_SUPPORTS_TIME_WIDE_64_BITS",
                "name": "SDK_TOOLCHAIN_SUPPORTS_TIME_WIDE_64_BITS",
                "range": null,
                "title": "Toolchain supports time_t wide 64-bits",
                "type": "bool"
            }
        ],
        "depends_on": null,
        "id": "sdk-tool-configuration",
        "title": "SDK tool configuration",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice APP_BUILD_TYPE>",
                        "help": null,
                        "id": "APP_BUILD_TYPE_APP_2NDBOOT",
                        "name": "APP_BUILD_TYPE_APP_2NDBOOT",
                        "range": null,
                        "title": "Default (binary application + 2nd stage bootloader)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice APP_BUILD_TYPE>",
                        "help": null,
                        "id": "APP_BUILD_TYPE_ELF_RAM",
                        "name": "APP_BUILD_TYPE_ELF_RAM",
                        "range": null,
                        "title": "ELF file, loadable into RAM (EXPERIMENTAL))",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Select the way the application is built.\n\nBy default, the application is built as a binary file in a format compatible with\nthe ESP-IDF bootloader. In addition to this application, 2nd stage bootloader is\nalso built. Application and bootloader binaries can be written into flash and\nloaded/executed from there.\n\nAnother option, useful for only very small and limited applications, is to only link\nthe .elf file of the application, such that it can be loaded directly into RAM over\nJTAG. Note that since IRAM and DRAM sizes are very limited, it is not possible to\nbuild any complex application this way. However for kinds of testing and debugging,\nthis option may provide faster iterations, since the application does not need to be\nwritten into flash.\nNote that at the moment, ESP-IDF does not contain all the startup code required to\ninitialize the CPUs and ROM memory (data/bss). Therefore it is necessary to execute\na bit of ROM code prior to executing the application. A gdbinit file may look as follows (for ESP32):\n\n    # Connect to a running instance of OpenOCD\n    target remote :3333\n    # Reset and halt the target\n    mon reset halt\n    # Run to a specific point in ROM code,\n    #  where most of initialization is complete.\n    thb *0x40007d54\n    c\n    # Load the application into RAM\n    load\n    # Run till app_main\n    tb app_main\n    c\n\nExecute this gdbinit file as follows:\n\n    xtensa-esp32-elf-gdb build/app-name.elf -x gdbinit\n\nExample gdbinit files for other targets can be found in tools/test_apps/system/gdb_loadable_elf/\n\nRecommended sdkconfig.defaults for building loadable ELF files is as follows.\nCONFIG_APP_BUILD_TYPE_ELF_RAM is required, other options help reduce application\nmemory footprint.\n\n    CONFIG_APP_BUILD_TYPE_ELF_RAM=y\n    CONFIG_VFS_SUPPORT_TERMIOS=\n    CONFIG_NEWLIB_NANO_FORMAT=y\n    CONFIG_ESP_SYSTEM_PANIC_PRINT_HALT=y\n    CONFIG_ESP_DEBUG_STUBS_ENABLE=\n    CONFIG_ESP_ERR_TO_NAME_LOOKUP=",
                "id": "build-type-application-build-type",
                "name": "APP_BUILD_TYPE",
                "title": "Application build type",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "APP_BUILD_GENERATE_BINARIES",
                "name": "APP_BUILD_GENERATE_BINARIES",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "APP_BUILD_BOOTLOADER",
                "name": "APP_BUILD_BOOTLOADER",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "APP_BUILD_USE_FLASH_SECTIONS",
                "name": "APP_BUILD_USE_FLASH_SECTIONS",
                "range": null,
                "title": null,
                "type": "bool"
            }
        ],
        "depends_on": null,
        "id": "build-type",
        "title": "Build type",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [],
                "depends_on": null,
                "help": "If set, then the app will be built with the current time/date stamp. It is stored in the app description\nstructure. If not set, time/date stamp will be excluded from app image. This can be useful for getting the\nsame binary image files made from the same source, but at different times.",
                "id": "APP_COMPILE_TIME_DATE",
                "name": "APP_COMPILE_TIME_DATE",
                "range": null,
                "title": "Use time/date stamp for app",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "The PROJECT_VER variable from the build system will not affect the firmware image.\nThis value will not be contained in the esp_app_desc structure.",
                "id": "APP_EXCLUDE_PROJECT_VER_VAR",
                "name": "APP_EXCLUDE_PROJECT_VER_VAR",
                "range": null,
                "title": "Exclude PROJECT_VER from firmware image",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "The PROJECT_NAME variable from the build system will not affect the firmware image.\nThis value will not be contained in the esp_app_desc structure.",
                "id": "APP_EXCLUDE_PROJECT_NAME_VAR",
                "name": "APP_EXCLUDE_PROJECT_NAME_VAR",
                "range": null,
                "title": "Exclude PROJECT_NAME from firmware image",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "APP_PROJECT_VER_FROM_CONFIG",
                        "help": "Project version",
                        "id": "APP_PROJECT_VER",
                        "name": "APP_PROJECT_VER",
                        "range": null,
                        "title": "Project version",
                        "type": "string"
                    }
                ],
                "depends_on": null,
                "help": "If this is enabled, then config item APP_PROJECT_VER will be used for the variable PROJECT_VER.\nOther ways to set PROJECT_VER will be ignored.",
                "id": "APP_PROJECT_VER_FROM_CONFIG",
                "name": "APP_PROJECT_VER_FROM_CONFIG",
                "range": null,
                "title": "Get the project version from Kconfig",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "At startup, the app will read this many hex characters from the embedded APP ELF SHA-256 hash value\nand store it in static RAM. This ensures the app ELF SHA-256 value is always available\nif it needs to be printed by the panic handler code.\nChanging this value will change the size of a static buffer, in bytes.",
                "id": "APP_RETRIEVE_LEN_ELF_SHA",
                "name": "APP_RETRIEVE_LEN_ELF_SHA",
                "range": [
                    8,
                    64
                ],
                "title": "The length of APP ELF SHA is stored in RAM(chars)",
                "type": "int"
            }
        ],
        "depends_on": null,
        "id": "application-manager",
        "title": "Application manager",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [],
                "depends_on": null,
                "help": "Offset address that 2nd bootloader will be flashed to.\nThe value is determined by the ROM bootloader.\nIt's not configurable in ESP-IDF.",
                "id": "BOOTLOADER_OFFSET_IN_FLASH",
                "name": "BOOTLOADER_OFFSET_IN_FLASH",
                "range": null,
                "title": null,
                "type": "hex"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "BOOTLOADER_COMPILER_OPTIMIZATION_SIZE",
                        "name": "BOOTLOADER_COMPILER_OPTIMIZATION_SIZE",
                        "range": null,
                        "title": "Size (-Os)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "BOOTLOADER_COMPILER_OPTIMIZATION_DEBUG",
                        "name": "BOOTLOADER_COMPILER_OPTIMIZATION_DEBUG",
                        "range": null,
                        "title": "Debug (-Og)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "BOOTLOADER_COMPILER_OPTIMIZATION_PERF",
                        "name": "BOOTLOADER_COMPILER_OPTIMIZATION_PERF",
                        "range": null,
                        "title": "Optimize for performance (-O2)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "BOOTLOADER_COMPILER_OPTIMIZATION_NONE",
                        "name": "BOOTLOADER_COMPILER_OPTIMIZATION_NONE",
                        "range": null,
                        "title": "Debug without optimization (-O0)",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "This option sets compiler optimization level (gcc -O argument)\nfor the bootloader.\n\n- The default \"Size\" setting will add the -0s flag to CFLAGS.\n- The \"Debug\" setting will add the -Og flag to CFLAGS.\n- The \"Performance\" setting will add the -O2 flag to CFLAGS.\n- The \"None\" setting will add the -O0 flag to CFLAGS.\n\nNote that custom optimization levels may be unsupported.",
                "id": "bootloader-config-bootloader-optimization-level",
                "name": "BOOTLOADER_COMPILER_OPTIMIZATION",
                "title": "Bootloader optimization Level",
                "type": "choice"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_LOG_LEVEL>",
                        "help": null,
                        "id": "BOOTLOADER_LOG_LEVEL_NONE",
                        "name": "BOOTLOADER_LOG_LEVEL_NONE",
                        "range": null,
                        "title": "No output",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_LOG_LEVEL>",
                        "help": null,
                        "id": "BOOTLOADER_LOG_LEVEL_ERROR",
                        "name": "BOOTLOADER_LOG_LEVEL_ERROR",
                        "range": null,
                        "title": "Error",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_LOG_LEVEL>",
                        "help": null,
                        "id": "BOOTLOADER_LOG_LEVEL_WARN",
                        "name": "BOOTLOADER_LOG_LEVEL_WARN",
                        "range": null,
                        "title": "Warning",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_LOG_LEVEL>",
                        "help": null,
                        "id": "BOOTLOADER_LOG_LEVEL_INFO",
                        "name": "BOOTLOADER_LOG_LEVEL_INFO",
                        "range": null,
                        "title": "Info",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_LOG_LEVEL>",
                        "help": null,
                        "id": "BOOTLOADER_LOG_LEVEL_DEBUG",
                        "name": "BOOTLOADER_LOG_LEVEL_DEBUG",
                        "range": null,
                        "title": "Debug",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_LOG_LEVEL>",
                        "help": null,
                        "id": "BOOTLOADER_LOG_LEVEL_VERBOSE",
                        "name": "BOOTLOADER_LOG_LEVEL_VERBOSE",
                        "range": null,
                        "title": "Verbose",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Specify how much output to see in bootloader logs.",
                "id": "bootloader-config-bootloader-log-verbosity",
                "name": "BOOTLOADER_LOG_LEVEL",
                "title": "Bootloader log verbosity",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "BOOTLOADER_LOG_LEVEL",
                "name": "BOOTLOADER_LOG_LEVEL",
                "range": null,
                "title": null,
                "type": "int"
            },
            {
                "children": [],
                "depends_on": "IDF_TARGET_ESP32 && (ESPTOOLPY_FLASHMODE_QIO || ESPTOOLPY_FLASHMODE_QOUT)",
                "help": "This setting is only used if the SPI flash pins have been overridden by setting the eFuses\nSPI_PAD_CONFIG_xxx, and the SPI flash mode is QIO or QOUT.\n\nWhen this is the case, the eFuse config only defines 3 of the 4 Quad I/O data pins. The WP pin (aka\nESP32 pin \"SD_DATA_3\" or SPI flash pin \"IO2\") is not specified in eFuse. The same pin is also used\nfor external SPIRAM if it is enabled.\n\nIf this config item is set to N (default), the correct WP pin will be automatically used for any\nEspressif chip or module with integrated flash. If a custom setting is needed, set this config item to\nY and specify the GPIO number connected to the WP.",
                "id": "BOOTLOADER_SPI_CUSTOM_WP_PIN",
                "name": "BOOTLOADER_SPI_CUSTOM_WP_PIN",
                "range": null,
                "title": "Use custom SPI Flash WP Pin when flash pins set in eFuse (read help)",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "IDF_TARGET_ESP32 && (ESPTOOLPY_FLASHMODE_QIO || ESPTOOLPY_FLASHMODE_QOUT)",
                "help": "The option \"Use custom SPI Flash WP Pin\" must be set or this value is ignored\n\nIf burning a customized set of SPI flash pins in eFuse and using QIO or QOUT mode for flash, set this\nvalue to the GPIO number of the SPI flash WP pin.",
                "id": "BOOTLOADER_SPI_WP_PIN",
                "name": "BOOTLOADER_SPI_WP_PIN",
                "range": [
                    0,
                    33
                ],
                "title": "Custom SPI Flash WP Pin",
                "type": "int"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "!ESPTOOLPY_FLASHFREQ_80M && <choice BOOTLOADER_VDDSDIO_BOOST>",
                        "help": null,
                        "id": "BOOTLOADER_VDDSDIO_BOOST_1_8V",
                        "name": "BOOTLOADER_VDDSDIO_BOOST_1_8V",
                        "range": null,
                        "title": "1.8V",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_VDDSDIO_BOOST>",
                        "help": null,
                        "id": "BOOTLOADER_VDDSDIO_BOOST_1_9V",
                        "name": "BOOTLOADER_VDDSDIO_BOOST_1_9V",
                        "range": null,
                        "title": "1.9V",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "If this option is enabled, and VDDSDIO LDO is set to 1.8V (using eFuse\nor MTDI bootstrapping pin), bootloader will change LDO settings to\noutput 1.9V instead. This helps prevent flash chip from browning out\nduring flash programming operations.\n\nThis option has no effect if VDDSDIO is set to 3.3V, or if the internal\nVDDSDIO regulator is disabled via eFuse.",
                "id": "bootloader-config-vddsdio-ldo-voltage",
                "name": "BOOTLOADER_VDDSDIO_BOOST",
                "title": "VDDSDIO LDO voltage",
                "type": "choice"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_FACTORY_RESET",
                        "help": "The selected GPIO will be configured as an input with internal pull-up enabled (note that on some SoCs.\nnot all pins have an internal pull-up, consult the hardware datasheet for details.) To trigger a factory\nreset, this GPIO must be held high or low (as configured) on startup.",
                        "id": "BOOTLOADER_NUM_PIN_FACTORY_RESET",
                        "name": "BOOTLOADER_NUM_PIN_FACTORY_RESET",
                        "range": null,
                        "title": "Number of the GPIO input for factory reset",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice BOOTLOADER_FACTORY_RESET_PIN_LEVEL>",
                                "help": null,
                                "id": "BOOTLOADER_FACTORY_RESET_PIN_LOW",
                                "name": "BOOTLOADER_FACTORY_RESET_PIN_LOW",
                                "range": null,
                                "title": "Reset on GPIO low",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice BOOTLOADER_FACTORY_RESET_PIN_LEVEL>",
                                "help": null,
                                "id": "BOOTLOADER_FACTORY_RESET_PIN_HIGH",
                                "name": "BOOTLOADER_FACTORY_RESET_PIN_HIGH",
                                "range": null,
                                "title": "Reset on GPIO high",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "BOOTLOADER_FACTORY_RESET",
                        "help": "Pin level for factory reset, can be triggered on low or high.",
                        "id": "bootloader-config-gpio-triggers-factory-reset-factory-reset-gpio-level",
                        "name": "BOOTLOADER_FACTORY_RESET_PIN_LEVEL",
                        "title": "Factory reset GPIO level",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_FACTORY_RESET",
                        "help": "The device will boot from \"factory\" partition (or OTA slot 0 if no factory partition is present) after a\nfactory reset.",
                        "id": "BOOTLOADER_OTA_DATA_ERASE",
                        "name": "BOOTLOADER_OTA_DATA_ERASE",
                        "range": null,
                        "title": "Clear OTA data on factory reset (select factory partition)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_FACTORY_RESET",
                        "help": "Allows customers to select which data partitions will be erased while factory reset.\n\nSpecify the names of partitions as a comma-delimited with optional spaces for readability. (Like this:\n\"nvs, phy_init, ...\")\nMake sure that the name specified in the partition table and here are the same.\nPartitions of type \"app\" cannot be specified here.",
                        "id": "BOOTLOADER_DATA_FACTORY_RESET",
                        "name": "BOOTLOADER_DATA_FACTORY_RESET",
                        "range": null,
                        "title": "Comma-separated names of partitions to clear on factory reset",
                        "type": "string"
                    }
                ],
                "depends_on": null,
                "help": "Allows to reset the device to factory settings:\n- clear one or more data partitions;\n- boot from \"factory\" partition.\nThe factory reset will occur if there is a GPIO input held at the configured level while\ndevice starts up. See settings below.",
                "id": "BOOTLOADER_FACTORY_RESET",
                "name": "BOOTLOADER_FACTORY_RESET",
                "range": null,
                "title": "GPIO triggers factory reset",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_APP_TEST",
                        "help": "The selected GPIO will be configured as an input with internal pull-up enabled.\nTo trigger a test app, this GPIO must be pulled low on reset.\nAfter the GPIO input is deactivated and the device reboots, the old application will boot.\n(factory or OTA[x]).\nNote that GPIO34-39 do not have an internal pullup and an external one must be provided.",
                        "id": "BOOTLOADER_NUM_PIN_APP_TEST",
                        "name": "BOOTLOADER_NUM_PIN_APP_TEST",
                        "range": null,
                        "title": "Number of the GPIO input to boot TEST partition",
                        "type": "int"
                    }
                ],
                "depends_on": "!BOOTLOADER_APP_ANTI_ROLLBACK",
                "help": "Allows to run the test app from \"TEST\" partition.\nA boot from \"test\" partition will occur if there is a GPIO input pulled low while device starts up.\nSee settings below.",
                "id": "BOOTLOADER_APP_TEST",
                "name": "BOOTLOADER_APP_TEST",
                "range": null,
                "title": "GPIO triggers boot from test app partition",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "BOOTLOADER_FACTORY_RESET || BOOTLOADER_APP_TEST",
                "help": "The GPIO must be held low continuously for this period of time after reset\nbefore a factory reset or test partition boot (as applicable) is performed.",
                "id": "BOOTLOADER_HOLD_TIME_GPIO",
                "name": "BOOTLOADER_HOLD_TIME_GPIO",
                "range": null,
                "title": "Hold time of GPIO for reset/test mode (seconds)",
                "type": "int"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Protects the unmapped memory regions of the entire address space from unintended accesses.\nThis will ensure that an exception will be triggered whenever the CPU performs a memory\noperation on unmapped regions of the address space.",
                "id": "BOOTLOADER_REGION_PROTECTION_ENABLE",
                "name": "BOOTLOADER_REGION_PROTECTION_ENABLE",
                "range": null,
                "title": "Enable protection for unmapped memory regions",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_WDT_ENABLE",
                        "help": "If this option is set, the ESP-IDF app must explicitly reset, feed, or disable the rtc_wdt in\nthe app's own code.\nIf this option is not set (default), then rtc_wdt will be disabled by ESP-IDF before calling\nthe app_main() function.\n\nUse function rtc_wdt_feed() for resetting counter of rtc_wdt.\nUse function rtc_wdt_disable() for disabling rtc_wdt.",
                        "id": "BOOTLOADER_WDT_DISABLE_IN_USER_CODE",
                        "name": "BOOTLOADER_WDT_DISABLE_IN_USER_CODE",
                        "range": null,
                        "title": "Allows RTC watchdog disable in user code",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_WDT_ENABLE",
                        "help": "Verify that this parameter is correct and more then the execution time.\nPay attention to options such as reset to factory, trigger test partition and encryption on boot\n- these options can increase the execution time.\nNote: RTC_WDT will reset while encryption operations will be performed.",
                        "id": "BOOTLOADER_WDT_TIME_MS",
                        "name": "BOOTLOADER_WDT_TIME_MS",
                        "range": [
                            0,
                            120000
                        ],
                        "title": "Timeout for RTC watchdog (ms)",
                        "type": "int"
                    }
                ],
                "depends_on": null,
                "help": "Tracks the execution time of startup code.\nIf the execution time is exceeded, the RTC_WDT will restart system.\nIt is also useful to prevent a lock up in start code caused by an unstable power source.\nNOTE: Tracks the execution time starts from the bootloader code - re-set timeout, while selecting the\nsource for slow_clk - and ends calling app_main.\nRe-set timeout is needed due to WDT uses a SLOW_CLK clock source. After changing a frequency slow_clk a\ntime of WDT needs to re-set for new frequency.\nslow_clk depends on ESP32_RTC_CLK_SRC (INTERNAL_RC or EXTERNAL_CRYSTAL).",
                "id": "BOOTLOADER_WDT_ENABLE",
                "name": "BOOTLOADER_WDT_ENABLE",
                "range": null,
                "title": "Use RTC watchdog in start code",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "BOOTLOADER_APP_ANTI_ROLLBACK",
                                "help": "The secure version is the sequence number stored in the header of each firmware.\nThe security version is set in the bootloader, version is recorded in the eFuse field\nas the number of set ones. The allocated number of bits in the efuse field\nfor storing the security version is limited (see BOOTLOADER_APP_SEC_VER_SIZE_EFUSE_FIELD option).\n\nBootloader: When bootloader selects an app to boot, an app is selected that has\na security version greater or equal that recorded in eFuse field.\nThe app is booted with a higher (or equal) secure version.\n\nThe security version is worth increasing if in previous versions there is\na significant vulnerability and their use is not acceptable.\n\nYour partition table should has a scheme with ota_0 + ota_1 (without factory).",
                                "id": "BOOTLOADER_APP_SECURE_VERSION",
                                "name": "BOOTLOADER_APP_SECURE_VERSION",
                                "range": null,
                                "title": "eFuse secure version of app",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BOOTLOADER_APP_ANTI_ROLLBACK",
                                "help": "The size of the efuse secure version field.\nIts length is limited to 32 bits for ESP32 and 16 bits for ESP32-S2.\nThis determines how many times the security version can be increased.",
                                "id": "BOOTLOADER_APP_SEC_VER_SIZE_EFUSE_FIELD",
                                "name": "BOOTLOADER_APP_SEC_VER_SIZE_EFUSE_FIELD",
                                "range": null,
                                "title": "Size of the efuse secure version field",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BOOTLOADER_APP_ANTI_ROLLBACK",
                                "help": "This option allows to emulate read/write operations with all eFuses and efuse secure version.\nIt allows to test anti-rollback implemention without permanent write eFuse bits.\nThere should be an entry in partition table with following details: `emul_efuse, data, efuse, , 0x2000`.\n\nThis option enables: EFUSE_VIRTUAL and EFUSE_VIRTUAL_KEEP_IN_FLASH.",
                                "id": "BOOTLOADER_EFUSE_SECURE_VERSION_EMULATE",
                                "name": "BOOTLOADER_EFUSE_SECURE_VERSION_EMULATE",
                                "range": null,
                                "title": "Emulate operations with efuse secure version(only test)",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "BOOTLOADER_APP_ROLLBACK_ENABLE",
                        "help": "This option prevents rollback to previous firmware/application image with lower security version.",
                        "id": "BOOTLOADER_APP_ANTI_ROLLBACK",
                        "name": "BOOTLOADER_APP_ANTI_ROLLBACK",
                        "range": null,
                        "title": "Enable app anti-rollback support",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "After updating the app, the bootloader runs a new app with the \"ESP_OTA_IMG_PENDING_VERIFY\" state set.\nThis state prevents the re-run of this app. After the first boot of the new app in the user code, the\nfunction should be called to confirm the operability of the app or vice versa about its non-operability.\nIf the app is working, then it is marked as valid. Otherwise, it is marked as not valid and rolls back to\nthe previous working app. A reboot is performed, and the app is booted before the software update.\nNote: If during the first boot a new app the power goes out or the WDT works, then roll back will happen.\nRollback is possible only between the apps with the same security versions.",
                "id": "BOOTLOADER_APP_ROLLBACK_ENABLE",
                "name": "BOOTLOADER_APP_ROLLBACK_ENABLE",
                "range": null,
                "title": "Enable app rollback support",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "(SECURE_BOOT && SECURE_BOOT_INSECURE) || !SECURE_BOOT",
                "help": "This option disables the normal validation of an image coming out of\ndeep sleep (checksums, SHA256, and signature). This is a trade-off\nbetween wakeup performance from deep sleep, and image integrity checks.\n\nOnly enable this if you know what you are doing. It should not be used\nin conjunction with using deep_sleep() entry and changing the active OTA\npartition as this would skip the validation upon first load of the new\nOTA partition.\n\nIt is possible to enable this option with Secure Boot if \"allow insecure\noptions\" is enabled, however it's strongly recommended to NOT enable it as\nit may allow a Secure Boot bypass.",
                "id": "BOOTLOADER_SKIP_VALIDATE_IN_DEEP_SLEEP",
                "name": "BOOTLOADER_SKIP_VALIDATE_IN_DEEP_SLEEP",
                "range": null,
                "title": "Skip image validation when exiting deep sleep",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "!SECURE_SIGNED_ON_BOOT",
                "help": "Some applications need to boot very quickly from power on. By default, the entire app binary\nis read from flash and verified which takes up a significant portion of the boot time.\n\nEnabling this option will skip validation of the app when the SoC boots from power on.\nNote that in this case it's not possible for the bootloader to detect if an app image is\ncorrupted in the flash, therefore it's not possible to safely fall back to a different app\npartition. Flash corruption of this kind is unlikely but can happen if there is a serious\nfirmware bug or physical damage.\n\nFollowing other reset types, the bootloader will still validate the app image. This increases\nthe chances that flash corruption resulting in a crash can be detected following soft reset, and\nthe bootloader will fall back to a valid app image. To increase the chances of successfully recovering\nfrom a flash corruption event, keep the option BOOTLOADER_WDT_ENABLE enabled and consider also enabling\nBOOTLOADER_WDT_DISABLE_IN_USER_CODE - then manually disable the RTC Watchdog once the app is running.\nIn addition, enable both the Task and Interrupt watchdog timers with reset options set.",
                "id": "BOOTLOADER_SKIP_VALIDATE_ON_POWER_ON",
                "name": "BOOTLOADER_SKIP_VALIDATE_ON_POWER_ON",
                "range": null,
                "title": "Skip image validation from power on reset (READ HELP FIRST)",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "!SECURE_SIGNED_ON_BOOT",
                "help": "Selecting this option prevents the bootloader from ever validating the app image before\nbooting it. Any flash corruption of the selected app partition will make the entire SoC\nunbootable.\n\nAlthough flash corruption is a very rare case, it is not recommended to select this option.\nConsider selecting \"Skip image validation from power on reset\" instead. However, if boot time\nis the only important factor then it can be enabled.",
                "id": "BOOTLOADER_SKIP_VALIDATE_ALWAYS",
                "name": "BOOTLOADER_SKIP_VALIDATE_ALWAYS",
                "range": null,
                "title": "Skip image validation always (READ HELP FIRST)",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Reserve RTC FAST memory for Skip image validation. This option in bytes.\nThis option reserves an area in the RTC FAST memory (access only PRO_CPU).\nUsed to save the addresses of the selected application.\nWhen a wakeup occurs (from Deep sleep), the bootloader retrieves it and\nloads the application without validation.",
                "id": "BOOTLOADER_RESERVE_RTC_SIZE",
                "name": "BOOTLOADER_RESERVE_RTC_SIZE",
                "range": null,
                "title": null,
                "type": "hex"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_CUSTOM_RESERVE_RTC",
                        "help": "This option reserves in RTC FAST memory the area for custom purposes.\nIf you want to create your own bootloader and save more information\nin this area of memory, you can increase it. It must be a multiple of 4 bytes.\nThis area (rtc_retain_mem_t) is reserved and has access from the bootloader and an application.",
                        "id": "BOOTLOADER_CUSTOM_RESERVE_RTC_SIZE",
                        "name": "BOOTLOADER_CUSTOM_RESERVE_RTC_SIZE",
                        "range": null,
                        "title": "Size in bytes for custom purposes",
                        "type": "hex"
                    }
                ],
                "depends_on": null,
                "help": "This option allows the customer to place data in the RTC FAST memory,\nthis area remains valid when rebooted, except for power loss.\nThis memory is located at a fixed address and is available\nfor both the bootloader and the application.\n(The application and bootoloader must be compiled with the same option).\nThe RTC FAST memory has access only through PRO_CPU.",
                "id": "BOOTLOADER_CUSTOM_RESERVE_RTC",
                "name": "BOOTLOADER_CUSTOM_RESERVE_RTC",
                "range": null,
                "title": "Reserve RTC FAST memory for custom purposes",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Perform the startup flow recommended by XMC. Please consult XMC for the details of this flow.\nXMC chips will be forbidden to be used, when this option is disabled.\n\nDON'T DISABLE THIS UNLESS YOU KNOW WHAT YOU ARE DOING.",
                "id": "BOOTLOADER_FLASH_XMC_SUPPORT",
                "name": "BOOTLOADER_FLASH_XMC_SUPPORT",
                "range": null,
                "title": "Enable the support for flash chips of XMC (READ HELP FIRST)",
                "type": "bool"
            }
        ],
        "depends_on": null,
        "id": "bootloader-config",
        "title": "Bootloader config",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [],
                "depends_on": "SECURE_BOOT || SECURE_SIGNED_ON_BOOT_NO_SECURE_BOOT",
                "help": null,
                "id": "SECURE_SIGNED_ON_BOOT",
                "name": "SECURE_SIGNED_ON_BOOT",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SECURE_BOOT || SECURE_SIGNED_ON_UPDATE_NO_SECURE_BOOT",
                "help": null,
                "id": "SECURE_SIGNED_ON_UPDATE",
                "name": "SECURE_SIGNED_ON_UPDATE",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SECURE_SIGNED_ON_BOOT || SECURE_SIGNED_ON_UPDATE",
                "help": null,
                "id": "SECURE_SIGNED_APPS",
                "name": "SECURE_SIGNED_APPS",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "ESP32_REV_MIN_3 || IDF_TARGET_ESP32S2 || IDF_TARGET_ESP32C3 || IDF_TARGET_ESP32S3",
                "help": null,
                "id": "SECURE_BOOT_SUPPORTS_RSA",
                "name": "SECURE_BOOT_SUPPORTS_RSA",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "IDF_TARGET_ESP32S2 || IDF_TARGET_ESP32C3 || IDF_TARGET_ESP32S3",
                "help": null,
                "id": "SECURE_TARGET_HAS_SECURE_ROM_DL_MODE",
                "name": "SECURE_TARGET_HAS_SECURE_ROM_DL_MODE",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "!SECURE_BOOT",
                "help": "Require apps to be signed to verify their integrity.\n\nThis option uses the same app signature scheme as hardware secure boot, but unlike hardware secure boot it\ndoes not prevent the bootloader from being physically updated. This means that the device can be secured\nagainst remote network access, but not physical access. Compared to using hardware Secure Boot this option\nis much simpler to implement.",
                "id": "SECURE_SIGNED_APPS_NO_SECURE_BOOT",
                "name": "SECURE_SIGNED_APPS_NO_SECURE_BOOT",
                "range": null,
                "title": "Require signed app images",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ESP32 && (SECURE_SIGNED_APPS_NO_SECURE_BOOT || SECURE_BOOT_V1_ENABLED) && <choice SECURE_SIGNED_APPS_SCHEME>",
                        "help": "Embeds the ECDSA public key in the bootloader and signs the application with an ECDSA key.\n\nRefer to the documentation before enabling.",
                        "id": "SECURE_SIGNED_APPS_ECDSA_SCHEME",
                        "name": "SECURE_SIGNED_APPS_ECDSA_SCHEME",
                        "range": null,
                        "title": "ECDSA",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_SUPPORTS_RSA && (SECURE_SIGNED_APPS_NO_SECURE_BOOT || SECURE_BOOT_V2_ENABLED) && <choice SECURE_SIGNED_APPS_SCHEME>",
                        "help": "Appends the RSA-3072 based Signature block to the application.\nRefer to <Secure Boot Version 2 documentation link> before enabling.",
                        "id": "SECURE_SIGNED_APPS_RSA_SCHEME",
                        "name": "SECURE_SIGNED_APPS_RSA_SCHEME",
                        "range": null,
                        "title": "RSA",
                        "type": "bool"
                    }
                ],
                "depends_on": "SECURE_BOOT || SECURE_SIGNED_APPS_NO_SECURE_BOOT",
                "help": "Select the Secure App signing scheme. Depends on the Chip Revision.\nThere are two options:\n1. ECDSA based secure boot scheme. (Only choice for Secure Boot V1)\nSupported in ESP32 and ESP32-ECO3.\n2. The RSA based secure boot scheme. (Only choice for Secure Boot V2)\nSupported in ESP32-ECO3 (ESP32 Chip Revision 3 onwards), ESP32-S2, ESP32-C3, ESP32-S3.",
                "id": "security-features-app-signing-scheme",
                "name": "SECURE_SIGNED_APPS_SCHEME",
                "title": "App Signing Scheme",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": "SECURE_SIGNED_APPS_NO_SECURE_BOOT && SECURE_SIGNED_APPS_ECDSA_SCHEME",
                "help": "If this option is set, the bootloader will be compiled with code to verify that an app is signed before\nbooting it.\n\nIf hardware secure boot is enabled, this option is always enabled and cannot be disabled.\nIf hardware secure boot is not enabled, this option doesn't add significant security by itself so most\nusers will want to leave it disabled.",
                "id": "SECURE_SIGNED_ON_BOOT_NO_SECURE_BOOT",
                "name": "SECURE_SIGNED_ON_BOOT_NO_SECURE_BOOT",
                "range": null,
                "title": "Bootloader verifies app signatures",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SECURE_SIGNED_APPS_NO_SECURE_BOOT",
                "help": "If this option is set, any OTA updated apps will have the signature verified before being considered valid.\n\nWhen enabled, the signature is automatically checked whenever the esp_ota_ops.h APIs are used for OTA\nupdates, or esp_image_format.h APIs are used to verify apps.\n\nIf hardware secure boot is enabled, this option is always enabled and cannot be disabled.\nIf hardware secure boot is not enabled, this option still adds significant security against network-based\nattackers by preventing spoofing of OTA updates.",
                "id": "SECURE_SIGNED_ON_UPDATE_NO_SECURE_BOOT",
                "name": "SECURE_SIGNED_ON_UPDATE_NO_SECURE_BOOT",
                "range": null,
                "title": "Verify app signature on update",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32 && <choice SECURE_BOOT_VERSION>",
                                "help": "Build a bootloader which enables secure boot version 1 on first boot.\nRefer to the Secure Boot section of the ESP-IDF Programmer's Guide for this version before enabling.",
                                "id": "SECURE_BOOT_V1_ENABLED",
                                "name": "SECURE_BOOT_V1_ENABLED",
                                "range": null,
                                "title": "Enable Secure Boot version 1",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SECURE_BOOT_SUPPORTS_RSA && <choice SECURE_BOOT_VERSION>",
                                "help": "Build a bootloader which enables Secure Boot version 2 on first boot.\nRefer to Secure Boot V2 section of the ESP-IDF Programmer's Guide for this version before enabling.",
                                "id": "SECURE_BOOT_V2_ENABLED",
                                "name": "SECURE_BOOT_V2_ENABLED",
                                "range": null,
                                "title": "Enable Secure Boot version 2",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SECURE_BOOT",
                        "help": "Select the Secure Boot Version. Depends on the Chip Revision.\nSecure Boot V2 is the new RSA based secure boot scheme.\nSupported in ESP32-ECO3 (ESP32 Chip Revision 3 onwards), ESP32-S2, ESP32-C3 ECO3.\nSecure Boot V1 is the AES based secure boot scheme.\nSupported in ESP32 and ESP32-ECO3.",
                        "id": "security-features-enable-hardware-secure-boot-in-bootloader-read-docs-first--select-secure-boot-version",
                        "name": "SECURE_BOOT_VERSION",
                        "title": "Select secure boot version",
                        "type": "choice"
                    }
                ],
                "depends_on": "IDF_TARGET_ESP32 || IDF_TARGET_ESP32S2 || ESP32C3_REV_MIN >= 3 || IDF_TARGET_ESP32S3",
                "help": "Build a bootloader which enables Secure Boot on first boot.\n\nOnce enabled, Secure Boot will not boot a modified bootloader. The bootloader will only load a partition\ntable or boot an app if the data has a verified digital signature. There are implications for reflashing\nupdated apps once secure boot is enabled.\n\nWhen enabling secure boot, JTAG and ROM BASIC Interpreter are permanently disabled by default.",
                "id": "SECURE_BOOT",
                "name": "SECURE_BOOT",
                "range": null,
                "title": "Enable hardware Secure Boot in bootloader (READ DOCS FIRST)",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice SECURE_BOOTLOADER_MODE>",
                        "help": "On first boot, the bootloader will generate a key which is not readable externally or by software. A\ndigest is generated from the bootloader image itself. This digest will be verified on each subsequent\nboot.\n\nEnabling this option means that the bootloader cannot be changed after the first time it is booted.",
                        "id": "SECURE_BOOTLOADER_ONE_TIME_FLASH",
                        "name": "SECURE_BOOTLOADER_ONE_TIME_FLASH",
                        "range": null,
                        "title": "One-time flash",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice SECURE_BOOTLOADER_MODE>",
                        "help": "Generate a reusable secure bootloader key, derived (via SHA-256) from the secure boot signing key.\n\nThis allows the secure bootloader to be re-flashed by anyone with access to the secure boot signing\nkey.\n\nThis option is less secure than one-time flash, because a leak of the digest key from one device\nallows reflashing of any device that uses it.",
                        "id": "SECURE_BOOTLOADER_REFLASHABLE",
                        "name": "SECURE_BOOTLOADER_REFLASHABLE",
                        "range": null,
                        "title": "Reflashable",
                        "type": "bool"
                    }
                ],
                "depends_on": "SECURE_BOOT_V1_ENABLED",
                "help": null,
                "id": "security-features-secure-bootloader-mode",
                "name": "SECURE_BOOTLOADER_MODE",
                "title": "Secure bootloader mode",
                "type": "choice"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_BUILD_SIGNED_BINARIES",
                        "help": "Path to the key file used to sign app images.\n\nKey file is an ECDSA private key (NIST256p curve) in PEM format for Secure Boot V1.\nKey file is an RSA private key in PEM format for Secure Boot V2.\n\nPath is evaluated relative to the project directory.\n\nYou can generate a new signing key by running the following command:\nespsecure.py generate_signing_key secure_boot_signing_key.pem\n\nSee the Secure Boot section of the ESP-IDF Programmer's Guide for this version for details.",
                        "id": "SECURE_BOOT_SIGNING_KEY",
                        "name": "SECURE_BOOT_SIGNING_KEY",
                        "range": null,
                        "title": "Secure boot private signing key",
                        "type": "string"
                    }
                ],
                "depends_on": "SECURE_SIGNED_APPS",
                "help": "Once secure boot or signed app requirement is enabled, app images are required to be signed.\n\nIf enabled (default), these binary files are signed as part of the build process. The file named in\n\"Secure boot private signing key\" will be used to sign the image.\n\nIf disabled, unsigned app/partition data will be built. They must be signed manually using espsecure.py.\nVersion 1 to enable ECDSA Based Secure Boot and Version 2 to enable RSA based Secure Boot.\n(for example, on a remote signing server.)",
                "id": "SECURE_BOOT_BUILD_SIGNED_BINARIES",
                "name": "SECURE_BOOT_BUILD_SIGNED_BINARIES",
                "range": null,
                "title": "Sign binaries during build",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SECURE_SIGNED_APPS && !SECURE_BOOT_BUILD_SIGNED_BINARIES && !SECURE_SIGNED_APPS_RSA_SCHEME",
                "help": "Path to a public key file used to verify signed images.\nSecure Boot V1: This ECDSA public key is compiled into the bootloader and/or\napp, to verify app images.\nSecure Boot V2: This RSA public key is compiled into the signature block at\nthe end of the bootloader/app.\n\nKey file is in raw binary format, and can be extracted from a\nPEM formatted private key using the espsecure.py\nextract_public_key command.\n\nRefer to the Secure Boot section of the ESP-IDF Programmer's Guide for this version before enabling.",
                "id": "SECURE_BOOT_VERIFICATION_KEY",
                "name": "SECURE_BOOT_VERIFICATION_KEY",
                "range": null,
                "title": "Secure boot public signature verification key",
                "type": "string"
            },
            {
                "children": [],
                "depends_on": "SECURE_BOOT && (IDF_TARGET_ESP32S2 || IDF_TARGET_ESP32C3 || IDF_TARGET_ESP32S3)",
                "help": "If this option is set, ROM bootloader will revoke the public key digest burned in efuse block\nif it fails to verify the signature of software bootloader with it.\nRevocation of keys does not happen when enabling secure boot. Once secure boot is enabled,\nkey revocation checks will be done on subsequent boot-up, while verifying the software bootloader\n\nThis feature provides a strong resistance against physical attacks on the device.\n\nNOTE: Once a digest slot is revoked, it can never be used again to verify an image\nThis can lead to permanent bricking of the device, in case all keys are revoked\nbecause of signature verification failure.",
                "id": "SECURE_BOOT_ENABLE_AGGRESSIVE_KEY_REVOKE",
                "name": "SECURE_BOOT_ENABLE_AGGRESSIVE_KEY_REVOKE",
                "range": null,
                "title": "Enable Aggressive key revoke strategy",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice SECURE_BOOTLOADER_KEY_ENCODING>",
                        "help": null,
                        "id": "SECURE_BOOTLOADER_KEY_ENCODING_256BIT",
                        "name": "SECURE_BOOTLOADER_KEY_ENCODING_256BIT",
                        "range": null,
                        "title": "No encoding (256 bit key)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice SECURE_BOOTLOADER_KEY_ENCODING>",
                        "help": null,
                        "id": "SECURE_BOOTLOADER_KEY_ENCODING_192BIT",
                        "name": "SECURE_BOOTLOADER_KEY_ENCODING_192BIT",
                        "range": null,
                        "title": "3/4 encoding (192 bit key)",
                        "type": "bool"
                    }
                ],
                "depends_on": "SECURE_BOOTLOADER_REFLASHABLE",
                "help": "In reflashable secure bootloader mode, a hardware key is derived from the signing key (with SHA-256) and\ncan be written to eFuse with espefuse.py.\n\nNormally this is a 256-bit key, but if 3/4 Coding Scheme is used on the device then the eFuse key is\ntruncated to 192 bits.\n\nThis configuration item doesn't change any firmware code, it only changes the size of key binary which is\ngenerated at build time.",
                "id": "security-features-hardware-key-encoding",
                "name": "SECURE_BOOTLOADER_KEY_ENCODING",
                "title": "Hardware Key Encoding",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": "SECURE_BOOT",
                "help": "You can disable some of the default protections offered by secure boot, in order to enable testing or a\ncustom combination of security features.\n\nOnly enable these options if you are very sure.\n\nRefer to the Secure Boot section of the ESP-IDF Programmer's Guide for this version before enabling.",
                "id": "SECURE_BOOT_INSECURE",
                "name": "SECURE_BOOT_INSECURE",
                "range": null,
                "title": "Allow potentially insecure options",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice SECURE_FLASH_ENCRYPTION_KEYSIZE>",
                                "help": null,
                                "id": "SECURE_FLASH_ENCRYPTION_AES128",
                                "name": "SECURE_FLASH_ENCRYPTION_AES128",
                                "range": null,
                                "title": "AES-128 (256-bit key)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice SECURE_FLASH_ENCRYPTION_KEYSIZE>",
                                "help": null,
                                "id": "SECURE_FLASH_ENCRYPTION_AES256",
                                "name": "SECURE_FLASH_ENCRYPTION_AES256",
                                "range": null,
                                "title": "AES-256 (512-bit key)",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "(IDF_TARGET_ESP32S2 || IDF_TARGET_ESP32S3) && SECURE_FLASH_ENC_ENABLED",
                        "help": "Size of generated AES-XTS key.\n\nAES-128 uses a 256-bit key (32 bytes) which occupies one Efuse key block.\nAES-256 uses a 512-bit key (64 bytes) which occupies two Efuse key blocks.\n\nThis setting is ignored if either type of key is already burned to Efuse before the first boot.\nIn this case, the pre-burned key is used and no new key is generated.",
                        "id": "security-features-enable-flash-encryption-on-boot-read-docs-first--size-of-generated-aes-xts-key",
                        "name": "SECURE_FLASH_ENCRYPTION_KEYSIZE",
                        "title": "Size of generated AES-XTS key",
                        "type": "choice"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice SECURE_FLASH_ENCRYPTION_MODE>",
                                "help": null,
                                "id": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT",
                                "name": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT",
                                "range": null,
                                "title": "Development (NOT SECURE)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice SECURE_FLASH_ENCRYPTION_MODE>",
                                "help": null,
                                "id": "SECURE_FLASH_ENCRYPTION_MODE_RELEASE",
                                "name": "SECURE_FLASH_ENCRYPTION_MODE_RELEASE",
                                "range": null,
                                "title": "Release",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SECURE_FLASH_ENC_ENABLED",
                        "help": "By default Development mode is enabled which allows ROM download mode to perform flash encryption\noperations (plaintext is sent to the device, and it encrypts it internally and writes ciphertext\nto flash.) This mode is not secure, it's possible for an attacker to write their own chosen plaintext\nto flash.\n\nRelease mode should always be selected for production or manufacturing. Once enabled it's no longer\npossible for the device in ROM Download Mode to use the flash encryption hardware.\n\nRefer to the Flash Encryption section of the ESP-IDF Programmer's Guide for details.",
                        "id": "security-features-enable-flash-encryption-on-boot-read-docs-first--enable-usage-mode",
                        "name": "SECURE_FLASH_ENCRYPTION_MODE",
                        "title": "Enable usage mode",
                        "type": "choice"
                    }
                ],
                "depends_on": null,
                "help": "If this option is set, flash contents will be encrypted by the bootloader on first boot.\n\nNote: After first boot, the system will be permanently encrypted. Re-flashing an encrypted\nsystem is complicated and not always possible.\n\nRead https://docs.espressif.com/projects/esp-idf/en/latest/security/flash-encryption.html\nbefore enabling.",
                "id": "SECURE_FLASH_ENC_ENABLED",
                "name": "SECURE_FLASH_ENC_ENABLED",
                "range": null,
                "title": "Enable flash encryption on boot (READ DOCS FIRST)",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "(SECURE_BOOT_INSECURE || SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT) && IDF_TARGET_ESP32",
                        "help": "By default, the BASIC ROM Console starts on reset if no valid bootloader is\nread from the flash.\n\nWhen either flash encryption or secure boot are enabled, the default is to\ndisable this BASIC fallback mode permanently via eFuse.\n\nIf this option is set, this eFuse is not burned and the BASIC ROM Console may\nremain accessible.  Only set this option in testing environments.",
                        "id": "SECURE_BOOT_ALLOW_ROM_BASIC",
                        "name": "SECURE_BOOT_ALLOW_ROM_BASIC",
                        "range": null,
                        "title": "Leave ROM BASIC Interpreter available on reset",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_INSECURE || SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT",
                        "help": "If not set (default), the bootloader will permanently disable JTAG (across entire chip) on first boot\nwhen either secure boot or flash encryption is enabled.\n\nSetting this option leaves JTAG on for debugging, which negates all protections of flash encryption\nand some of the protections of secure boot.\n\nOnly set this option in testing environments.",
                        "id": "SECURE_BOOT_ALLOW_JTAG",
                        "name": "SECURE_BOOT_ALLOW_JTAG",
                        "range": null,
                        "title": "Allow JTAG Debugging",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_INSECURE",
                        "help": "If not set (default), app partition size must be a multiple of 64KB. App images are padded to 64KB\nlength, and the bootloader checks any trailing bytes after the signature (before the next 64KB\nboundary) have not been written. This is because flash cache maps entire 64KB pages into the address\nspace. This prevents an attacker from appending unverified data after the app image in the flash,\ncausing it to be mapped into the address space.\n\nSetting this option allows the app partition length to be unaligned, and disables padding of the app\nimage to this length. It is generally not recommended to set this option, unless you have a legacy\npartitioning scheme which doesn't support 64KB aligned partition lengths.",
                        "id": "SECURE_BOOT_ALLOW_SHORT_APP_PARTITION",
                        "name": "SECURE_BOOT_ALLOW_SHORT_APP_PARTITION",
                        "range": null,
                        "title": "Allow app partition length not 64KB aligned",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_INSECURE && SECURE_BOOT_V2_ENABLED",
                        "help": "If not set (default, recommended), on first boot the bootloader will burn the WR_DIS_RD_DIS\nefuse when Secure Boot is enabled. This prevents any more efuses from being read protected.\n\nIf this option is set, it will remain possible to write the EFUSE_RD_DIS efuse field after Secure\nBoot is enabled. This may allow an attacker to read-protect the BLK2 efuse (for ESP32) and\nBLOCK4-BLOCK10 (i.e. BLOCK_KEY0-BLOCK_KEY5)(for other chips) holding the public key digest, causing an\nimmediate denial of service and possibly allowing an additional fault injection attack to\nbypass the signature protection.\n\nNOTE: Once a BLOCK is read-protected, the application will read all zeros from that block\n\nNOTE: If \"UART ROM download mode (Permanently disabled (recommended))\" or\n\"UART ROM download mode (Permanently switch to Secure mode (recommended))\" is set,\nthen it is __NOT__ possible to read/write efuses using espefuse.py utility.\nHowever, efuse can be read/written from the application",
                        "id": "SECURE_BOOT_V2_ALLOW_EFUSE_RD_DIS",
                        "name": "SECURE_BOOT_V2_ALLOW_EFUSE_RD_DIS",
                        "range": null,
                        "title": "Allow additional read protecting of efuses",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_INSECURE && !IDF_TARGET_ESP32",
                        "help": "If not set (default), during startup in the app all unused digest slots will be revoked.\nTo revoke unused slot will be called esp_efuse_set_digest_revoke(num_digest) for each digest.\nRevoking unused digest slots makes ensures that no trusted keys can be added later by an attacker.\nIf set, it means that you have a plan to use unused digests slots later.",
                        "id": "SECURE_BOOT_ALLOW_UNUSED_DIGEST_SLOTS",
                        "name": "SECURE_BOOT_ALLOW_UNUSED_DIGEST_SLOTS",
                        "range": null,
                        "title": "Leave unused digest slots available (not revoke)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT",
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader encryption access on\nfirst boot. If set, the UART bootloader will still be able to access hardware encryption.\n\nIt is recommended to only set this option in testing environments.",
                        "id": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_ENC",
                        "name": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_ENC",
                        "range": null,
                        "title": "Leave UART bootloader encryption enabled",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT && IDF_TARGET_ESP32",
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader decryption access on\nfirst boot. If set, the UART bootloader will still be able to access hardware decryption.\n\nOnly set this option in testing environments. Setting this option allows complete bypass of flash\nencryption.",
                        "id": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_DEC",
                        "name": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_DEC",
                        "range": null,
                        "title": "Leave UART bootloader decryption enabled",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT",
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader flash cache access on\nfirst boot. If set, the UART bootloader will still be able to access the flash cache.\n\nOnly set this option in testing environments.",
                        "id": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_CACHE",
                        "name": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_CACHE",
                        "range": null,
                        "title": "Leave UART bootloader flash cache enabled",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT",
                        "help": "If not set (default), and flash encryption is not yet enabled in eFuses, the 2nd stage bootloader\nwill enable flash encryption: generate the flash encryption key and program eFuses.\nIf this option is set, and flash encryption is not yet enabled, the bootloader will error out and\nreboot.\nIf flash encryption is enabled in eFuses, this option does not change the bootloader behavior.\n\nOnly use this option in testing environments, to avoid accidentally enabling flash encryption on\nthe wrong device. The device needs to have flash encryption already enabled using espefuse.py.",
                        "id": "SECURE_FLASH_REQUIRE_ALREADY_ENABLED",
                        "name": "SECURE_FLASH_REQUIRE_ALREADY_ENABLED",
                        "range": null,
                        "title": "Require flash encryption to be already enabled",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "security-features-potentially-insecure-options",
                "title": "Potentially insecure options",
                "type": "menu"
            },
            {
                "children": [],
                "depends_on": "SECURE_FLASH_ENC_ENABLED",
                "help": "If set (default), in an app during startup code,\nthere is a check of the flash encryption eFuse bit is on\n(as the bootloader should already have set it).\nThe app requires this bit is on to continue work otherwise abort.\n\nIf not set, the app does not care if the flash encryption eFuse bit is set or not.",
                "id": "SECURE_FLASH_CHECK_ENC_EN_IN_APP",
                "name": "SECURE_FLASH_CHECK_ENC_EN_IN_APP",
                "range": null,
                "title": "Check Flash Encryption enabled on app startup",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice SECURE_UART_ROM_DL_MODE>",
                        "help": "If set, during startup the app will burn an eFuse bit to permanently disable the UART ROM\nDownload Mode. This prevents any future use of esptool.py, espefuse.py and similar tools.\n\nOnce disabled, if the SoC is booted with strapping pins set for ROM Download Mode\nthen an error is printed instead.\n\nIt is recommended to enable this option in any production application where Flash\nEncryption and/or Secure Boot is enabled and access to Download Mode is not required.\n\nIt is also possible to permanently disable Download Mode by calling\nesp_efuse_disable_rom_download_mode() at runtime.",
                        "id": "SECURE_DISABLE_ROM_DL_MODE",
                        "name": "SECURE_DISABLE_ROM_DL_MODE",
                        "range": null,
                        "title": "UART ROM download mode (Permanently disabled (recommended))",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_TARGET_HAS_SECURE_ROM_DL_MODE && <choice SECURE_UART_ROM_DL_MODE>",
                        "help": "If set, during startup the app will burn an eFuse bit to permanently switch the UART ROM\nDownload Mode into a separate Secure Download mode. This option can only work if\nDownload Mode is not already disabled by eFuse.\n\nSecure Download mode limits the use of Download Mode functions to simple flash read,\nwrite and erase operations, plus a command to return a summary of currently enabled\nsecurity features.\n\nSecure Download mode is not compatible with the esptool.py flasher stub feature,\nespefuse.py, read/writing memory or registers, encrypted download, or any other\nfeatures that interact with unsupported Download Mode commands.\n\nSecure Download mode should be enabled in any application where Flash Encryption\nand/or Secure Boot is enabled. Disabling this option does not immediately cancel\nthe benefits of the security features, but it increases the potential \"attack\nsurface\" for an attacker to try and bypass them with a successful physical attack.\n\nIt is also possible to enable secure download mode at runtime by calling\nesp_efuse_enable_rom_secure_download_mode()\n\nNote: Secure Download mode is not available for ESP32 (includes revisions till ECO3).",
                        "id": "SECURE_ENABLE_SECURE_ROM_DL_MODE",
                        "name": "SECURE_ENABLE_SECURE_ROM_DL_MODE",
                        "range": null,
                        "title": "UART ROM download mode (Permanently switch to Secure mode (recommended))",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice SECURE_UART_ROM_DL_MODE>",
                        "help": "This is a potentially insecure option.\nEnabling this option will allow the full UART download mode to stay enabled.\nThis option SHOULD NOT BE ENABLED for production use cases.",
                        "id": "SECURE_INSECURE_ALLOW_DL_MODE",
                        "name": "SECURE_INSECURE_ALLOW_DL_MODE",
                        "range": null,
                        "title": "UART ROM download mode (Enabled (not recommended))",
                        "type": "bool"
                    }
                ],
                "depends_on": "(SECURE_BOOT_V2_ENABLED || SECURE_FLASH_ENC_ENABLED) && (!IDF_TARGET_ESP32 || ESP32_REV_MIN_3)",
                "help": null,
                "id": "security-features-uart-rom-download-mode",
                "name": "SECURE_UART_ROM_DL_MODE",
                "title": "UART ROM download mode",
                "type": "choice"
            }
        ],
        "depends_on": null,
        "id": "security-features",
        "title": "Security features",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice BOOT_ROM_LOG_SCHEME>",
                        "help": "Always print ROM logs, this is the default behavior.",
                        "id": "BOOT_ROM_LOG_ALWAYS_ON",
                        "name": "BOOT_ROM_LOG_ALWAYS_ON",
                        "range": null,
                        "title": "Always Log",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOT_ROM_LOG_SCHEME>",
                        "help": "Don't print ROM logs.",
                        "id": "BOOT_ROM_LOG_ALWAYS_OFF",
                        "name": "BOOT_ROM_LOG_ALWAYS_OFF",
                        "range": null,
                        "title": "Permanently disable logging",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOT_ROM_LOG_SCHEME>",
                        "help": "Print ROM logs when GPIO level is high during start up.\nThe GPIO number is chip dependent,\ne.g. on ESP32-S2, the control GPIO is GPIO46.",
                        "id": "BOOT_ROM_LOG_ON_GPIO_HIGH",
                        "name": "BOOT_ROM_LOG_ON_GPIO_HIGH",
                        "range": null,
                        "title": "Log on GPIO High",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOT_ROM_LOG_SCHEME>",
                        "help": "Print ROM logs when GPIO level is low during start up.\nThe GPIO number is chip dependent,\ne.g. on ESP32-S2, the control GPIO is GPIO46.",
                        "id": "BOOT_ROM_LOG_ON_GPIO_LOW",
                        "name": "BOOT_ROM_LOG_ON_GPIO_LOW",
                        "range": null,
                        "title": "Log on GPIO Low",
                        "type": "bool"
                    }
                ],
                "depends_on": "!IDF_TARGET_ESP32",
                "help": "Controls the Boot ROM log behavior.\nThe rom log behavior can only be changed for once,\nspecific eFuse bit(s) will be burned at app boot stage.",
                "id": "boot-rom-behavior-permanently-change-boot-rom-output",
                "name": "BOOT_ROM_LOG_SCHEME",
                "title": "Permanently change Boot ROM output",
                "type": "choice"
            }
        ],
        "depends_on": null,
        "id": "boot-rom-behavior",
        "title": "Boot ROM Behavior",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [],
                "depends_on": "!IDF_CMAKE",
                "help": "The serial port that's connected to the ESP chip. This can be overridden by setting the ESPPORT\nenvironment variable.\n\nThis value is ignored when using the CMake-based build system or idf.py.",
                "id": "ESPTOOLPY_PORT",
                "name": "ESPTOOLPY_PORT",
                "range": null,
                "title": "Default serial port",
                "type": "string"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_BAUD_115200B",
                        "name": "ESPTOOLPY_BAUD_115200B",
                        "range": null,
                        "title": "115200 baud",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_BAUD_230400B",
                        "name": "ESPTOOLPY_BAUD_230400B",
                        "range": null,
                        "title": "230400 baud",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_BAUD_921600B",
                        "name": "ESPTOOLPY_BAUD_921600B",
                        "range": null,
                        "title": "921600 baud",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_BAUD_2MB",
                        "name": "ESPTOOLPY_BAUD_2MB",
                        "range": null,
                        "title": "2Mbaud",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_BAUD_OTHER",
                        "name": "ESPTOOLPY_BAUD_OTHER",
                        "range": null,
                        "title": "Other baud rate",
                        "type": "bool"
                    }
                ],
                "depends_on": "!IDF_CMAKE",
                "help": "Default baud rate to use while communicating with the ESP chip. Can be overridden by\nsetting the ESPBAUD variable.\n\nThis value is ignored when using the CMake-based build system or idf.py.",
                "id": "serial-flasher-config-default-baud-rate",
                "name": "ESPTOOLPY_BAUD",
                "title": "Default baud rate",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "ESPTOOLPY_BAUD_OTHER_VAL",
                "name": "ESPTOOLPY_BAUD_OTHER_VAL",
                "range": null,
                "title": "Other baud rate value",
                "type": "int"
            },
            {
                "children": [],
                "depends_on": "!IDF_CMAKE",
                "help": null,
                "id": "ESPTOOLPY_BAUD",
                "name": "ESPTOOLPY_BAUD",
                "range": null,
                "title": null,
                "type": "int"
            },
            {
                "children": [],
                "depends_on": "!IDF_CMAKE",
                "help": "The flasher tool can send data compressed using zlib, letting the ROM on the ESP chip\ndecompress it on the fly before flashing it. For most payloads, this should result in a\nspeed increase.",
                "id": "ESPTOOLPY_COMPRESSED",
                "name": "ESPTOOLPY_COMPRESSED",
                "range": null,
                "title": "Use compressed upload",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "The flasher tool sends a precompiled download stub first by default. That stub allows things\nlike compressed downloads and more. Usually you should not need to disable that feature",
                "id": "ESPTOOLPY_NO_STUB",
                "name": "ESPTOOLPY_NO_STUB",
                "range": null,
                "title": "Disable download stub",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "IDF_TARGET_ESP32S3",
                "help": null,
                "id": "ESPTOOLPY_OCT_FLASH",
                "name": "ESPTOOLPY_OCT_FLASH",
                "range": null,
                "title": "Enable Octal Flash",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "!ESPTOOLPY_OCT_FLASH && <choice ESPTOOLPY_FLASHMODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHMODE_QIO",
                        "name": "ESPTOOLPY_FLASHMODE_QIO",
                        "range": null,
                        "title": "QIO",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESPTOOLPY_OCT_FLASH && <choice ESPTOOLPY_FLASHMODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHMODE_QOUT",
                        "name": "ESPTOOLPY_FLASHMODE_QOUT",
                        "range": null,
                        "title": "QOUT",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESPTOOLPY_OCT_FLASH && <choice ESPTOOLPY_FLASHMODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHMODE_DIO",
                        "name": "ESPTOOLPY_FLASHMODE_DIO",
                        "range": null,
                        "title": "DIO",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESPTOOLPY_OCT_FLASH && <choice ESPTOOLPY_FLASHMODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHMODE_DOUT",
                        "name": "ESPTOOLPY_FLASHMODE_DOUT",
                        "range": null,
                        "title": "DOUT",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESPTOOLPY_OCT_FLASH && <choice ESPTOOLPY_FLASHMODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHMODE_OPI",
                        "name": "ESPTOOLPY_FLASHMODE_OPI",
                        "range": null,
                        "title": "OPI",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Mode the flash chip is flashed in, as well as the default mode for the\nbinary to run in.",
                "id": "serial-flasher-config-flash-spi-mode",
                "name": "ESPTOOLPY_FLASHMODE",
                "title": "Flash SPI mode",
                "type": "choice"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASH_SAMPLE_MODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASH_SAMPLE_MODE_STR",
                        "name": "ESPTOOLPY_FLASH_SAMPLE_MODE_STR",
                        "range": null,
                        "title": "STR Mode",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESPTOOLPY_OCT_FLASH && <choice ESPTOOLPY_FLASH_SAMPLE_MODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASH_SAMPLE_MODE_DTR",
                        "name": "ESPTOOLPY_FLASH_SAMPLE_MODE_DTR",
                        "range": null,
                        "title": "DTR Mode",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": null,
                "id": "serial-flasher-config-flash-sampling-mode",
                "name": "ESPTOOLPY_FLASH_SAMPLE_MODE",
                "title": "Flash Sampling Mode",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "ESPTOOLPY_FLASHMODE",
                "name": "ESPTOOLPY_FLASHMODE",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ESP32S3 && ESPTOOLPY_FLASH_SAMPLE_MODE_STR && <choice ESPTOOLPY_FLASHFREQ>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHFREQ_120M",
                        "name": "ESPTOOLPY_FLASHFREQ_120M",
                        "range": null,
                        "title": "120 MHz",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHFREQ_80M",
                        "name": "ESPTOOLPY_FLASHFREQ_80M",
                        "range": null,
                        "title": "80 MHz",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHFREQ_40M",
                        "name": "ESPTOOLPY_FLASHFREQ_40M",
                        "range": null,
                        "title": "40 MHz",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "(IDF_TARGET_ESP32 || IDF_TARGET_ESP32S2 || IDF_TARGET_ESP32C3) && <choice ESPTOOLPY_FLASHFREQ>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHFREQ_26M",
                        "name": "ESPTOOLPY_FLASHFREQ_26M",
                        "range": null,
                        "title": "26 MHz",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHFREQ_20M",
                        "name": "ESPTOOLPY_FLASHFREQ_20M",
                        "range": null,
                        "title": "20 MHz",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "The SPI flash frequency to be used.",
                "id": "serial-flasher-config-flash-spi-speed",
                "name": "ESPTOOLPY_FLASHFREQ",
                "title": "Flash SPI speed",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "ESPTOOLPY_FLASHFREQ",
                "name": "ESPTOOLPY_FLASHFREQ",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_1MB",
                        "name": "ESPTOOLPY_FLASHSIZE_1MB",
                        "range": null,
                        "title": "1 MB",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_2MB",
                        "name": "ESPTOOLPY_FLASHSIZE_2MB",
                        "range": null,
                        "title": "2 MB",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_4MB",
                        "name": "ESPTOOLPY_FLASHSIZE_4MB",
                        "range": null,
                        "title": "4 MB",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_8MB",
                        "name": "ESPTOOLPY_FLASHSIZE_8MB",
                        "range": null,
                        "title": "8 MB",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_16MB",
                        "name": "ESPTOOLPY_FLASHSIZE_16MB",
                        "range": null,
                        "title": "16 MB",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_32MB",
                        "name": "ESPTOOLPY_FLASHSIZE_32MB",
                        "range": null,
                        "title": "32 MB",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_64MB",
                        "name": "ESPTOOLPY_FLASHSIZE_64MB",
                        "range": null,
                        "title": "64 MB",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_128MB",
                        "name": "ESPTOOLPY_FLASHSIZE_128MB",
                        "range": null,
                        "title": "128 MB",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "SPI flash size, in megabytes",
                "id": "serial-flasher-config-flash-size",
                "name": "ESPTOOLPY_FLASHSIZE",
                "title": "Flash size",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "ESPTOOLPY_FLASHSIZE",
                "name": "ESPTOOLPY_FLASHSIZE",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "If this option is set, flashing the project will automatically detect\nthe flash size of the target chip and update the bootloader image\nbefore it is flashed.",
                "id": "ESPTOOLPY_FLASHSIZE_DETECT",
                "name": "ESPTOOLPY_FLASHSIZE_DETECT",
                "range": null,
                "title": "Detect flash size when flashing bootloader",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_BEFORE>",
                        "help": null,
                        "id": "ESPTOOLPY_BEFORE_RESET",
                        "name": "ESPTOOLPY_BEFORE_RESET",
                        "range": null,
                        "title": "Reset to bootloader",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_BEFORE>",
                        "help": null,
                        "id": "ESPTOOLPY_BEFORE_NORESET",
                        "name": "ESPTOOLPY_BEFORE_NORESET",
                        "range": null,
                        "title": "No reset",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Configure whether esptool.py should reset the ESP32 before flashing.\n\nAutomatic resetting depends on the RTS & DTR signals being\nwired from the serial port to the ESP32. Most USB development\nboards do this internally.",
                "id": "serial-flasher-config-before-flashing",
                "name": "ESPTOOLPY_BEFORE",
                "title": "Before flashing",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "ESPTOOLPY_BEFORE",
                "name": "ESPTOOLPY_BEFORE",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_AFTER>",
                        "help": null,
                        "id": "ESPTOOLPY_AFTER_RESET",
                        "name": "ESPTOOLPY_AFTER_RESET",
                        "range": null,
                        "title": "Reset after flashing",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_AFTER>",
                        "help": null,
                        "id": "ESPTOOLPY_AFTER_NORESET",
                        "name": "ESPTOOLPY_AFTER_NORESET",
                        "range": null,
                        "title": "Stay in bootloader",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Configure whether esptool.py should reset the ESP32 after flashing.\n\nAutomatic resetting depends on the RTS & DTR signals being\nwired from the serial port to the ESP32. Most USB development\nboards do this internally.",
                "id": "serial-flasher-config-after-flashing",
                "name": "ESPTOOLPY_AFTER",
                "title": "After flashing",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "ESPTOOLPY_AFTER",
                "name": "ESPTOOLPY_AFTER",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_MONITOR_BAUD_CONSOLE",
                        "name": "ESPTOOLPY_MONITOR_BAUD_CONSOLE",
                        "range": null,
                        "title": "Same as UART console baud rate",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_MONITOR_BAUD_9600B",
                        "name": "ESPTOOLPY_MONITOR_BAUD_9600B",
                        "range": null,
                        "title": "9600 bps",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_MONITOR_BAUD_57600B",
                        "name": "ESPTOOLPY_MONITOR_BAUD_57600B",
                        "range": null,
                        "title": "57600 bps",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_MONITOR_BAUD_115200B",
                        "name": "ESPTOOLPY_MONITOR_BAUD_115200B",
                        "range": null,
                        "title": "115200 bps",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_MONITOR_BAUD_230400B",
                        "name": "ESPTOOLPY_MONITOR_BAUD_230400B",
                        "range": null,
                        "title": "230400 bps",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_MONITOR_BAUD_921600B",
                        "name": "ESPTOOLPY_MONITOR_BAUD_921600B",
                        "range": null,
                        "title": "921600 bps",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_MONITOR_BAUD_2MB",
                        "name": "ESPTOOLPY_MONITOR_BAUD_2MB",
                        "range": null,
                        "title": "2 Mbps",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_MONITOR_BAUD_OTHER",
                        "name": "ESPTOOLPY_MONITOR_BAUD_OTHER",
                        "range": null,
                        "title": "Custom baud rate",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Baud rate to use when running 'idf.py monitor' or 'make monitor'\nto view serial output from a running chip.\n\nIf \"Same as UART Console baud rate\" is chosen then the value will\nfollow the \"UART Console baud rate\" config item.\n\nCan override by setting the MONITORBAUD environment variable.",
                "id": "serial-flasher-config--idf-py-monitor-baud-rate",
                "name": "ESPTOOLPY_MONITOR_BAUD",
                "title": "'idf.py monitor' baud rate",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "ESPTOOLPY_MONITOR_BAUD_OTHER_VAL",
                "name": "ESPTOOLPY_MONITOR_BAUD_OTHER_VAL",
                "range": null,
                "title": "Custom baud rate value",
                "type": "int"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "ESPTOOLPY_MONITOR_BAUD",
                "name": "ESPTOOLPY_MONITOR_BAUD",
                "range": null,
                "title": null,
                "type": "int"
            }
        ],
        "depends_on": null,
        "id": "serial-flasher-config",
        "title": "Serial flasher config",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice PARTITION_TABLE_TYPE>",
                        "help": "This is the default partition table, designed to fit into a 2MB or\nlarger flash with a single 1MB app partition.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_singleapp.csv\n\nThis partition table is not suitable for an app that needs OTA\n(over the air update) capability.",
                        "id": "PARTITION_TABLE_SINGLE_APP",
                        "name": "PARTITION_TABLE_SINGLE_APP",
                        "range": null,
                        "title": "Single factory app, no OTA",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice PARTITION_TABLE_TYPE>",
                        "help": "This is a variation of the default partition table, that expands\nthe 1MB app partition size to 1.5MB to fit more code.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_singleapp_large.csv\n\nThis partition table is not suitable for an app that needs OTA\n(over the air update) capability.",
                        "id": "PARTITION_TABLE_SINGLE_APP_LARGE",
                        "name": "PARTITION_TABLE_SINGLE_APP_LARGE",
                        "range": null,
                        "title": "Single factory app (large), no OTA",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice PARTITION_TABLE_TYPE>",
                        "help": "This is a basic OTA-enabled partition table with a factory app\npartition plus two OTA app partitions. All are 1MB, so this\npartition table requires 4MB or larger flash size.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_two_ota.csv",
                        "id": "PARTITION_TABLE_TWO_OTA",
                        "name": "PARTITION_TABLE_TWO_OTA",
                        "range": null,
                        "title": "Factory app, two OTA definitions",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice PARTITION_TABLE_TYPE>",
                        "help": "Specify the path to the partition table CSV to use for your project.\n\nConsult the Partition Table section in the ESP-IDF Programmers Guide\nfor more information.",
                        "id": "PARTITION_TABLE_CUSTOM",
                        "name": "PARTITION_TABLE_CUSTOM",
                        "range": null,
                        "title": "Custom partition table CSV",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESP32_COREDUMP_ENABLE_TO_FLASH && NVS_ENCRYPTION && <choice PARTITION_TABLE_TYPE>",
                        "help": "This is a variation of the default \"Single factory app, no OTA\" partition table\nthat supports encrypted NVS when using flash encryption. See the Flash Encryption section\nin the ESP-IDF Programmers Guide for more information.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_singleapp_encr_nvs.csv",
                        "id": "PARTITION_TABLE_SINGLE_APP_ENCRYPTED_NVS",
                        "name": "PARTITION_TABLE_SINGLE_APP_ENCRYPTED_NVS",
                        "range": null,
                        "title": "Single factory app, no OTA, encrypted NVS",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESP32_COREDUMP_ENABLE_TO_FLASH && NVS_ENCRYPTION && <choice PARTITION_TABLE_TYPE>",
                        "help": "This is a variation of the \"Single factory app (large), no OTA\" partition table\nthat supports encrypted NVS when using flash encryption. See the Flash Encryption section\nin the ESP-IDF Programmers Guide for more information.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_singleapp_large_encr_nvs.csv",
                        "id": "PARTITION_TABLE_SINGLE_APP_LARGE_ENC_NVS",
                        "name": "PARTITION_TABLE_SINGLE_APP_LARGE_ENC_NVS",
                        "range": null,
                        "title": "Single factory app (large), no OTA, encrypted NVS",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESP_COREDUMP_ENABLE_TO_FLASH && NVS_ENCRYPTION && <choice PARTITION_TABLE_TYPE>",
                        "help": "This is a variation of the \"Factory app, two OTA definitions\" partition table\nthat supports encrypted NVS when using flash encryption. See the Flash Encryption section\nin the ESP-IDF Programmers Guide for more information.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_two_ota_encr_nvs.csv",
                        "id": "PARTITION_TABLE_TWO_OTA_ENCRYPTED_NVS",
                        "name": "PARTITION_TABLE_TWO_OTA_ENCRYPTED_NVS",
                        "range": null,
                        "title": "Factory app, two OTA definitions, encrypted NVS",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "The partition table to flash to the ESP32. The partition table\ndetermines where apps, data and other resources are expected to\nbe found.\n\nThe predefined partition table CSV descriptions can be found\nin the components/partition_table directory. These are mostly intended\nfor example and development use, it's expect that for production use you\nwill copy one of these CSV files and create a custom partition CSV for\nyour application.",
                "id": "partition-table-partition-table",
                "name": "PARTITION_TABLE_TYPE",
                "title": "Partition Table",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Name of the custom partition CSV filename. This path is evaluated\nrelative to the project root directory.",
                "id": "PARTITION_TABLE_CUSTOM_FILENAME",
                "name": "PARTITION_TABLE_CUSTOM_FILENAME",
                "range": null,
                "title": "Custom partition CSV file",
                "type": "string"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "PARTITION_TABLE_FILENAME",
                "name": "PARTITION_TABLE_FILENAME",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "The address of partition table (by default 0x8000).\nAllows you to move the partition table, it gives more space for the bootloader.\nNote that the bootloader and app will both need to be compiled with the same PARTITION_TABLE_OFFSET value.\n\nThis number should be a multiple of 0x1000.\n\nNote that partition offsets in the partition table CSV file may need to be changed if this value is set to\na higher value. To have each partition offset adapt to the configured partition table offset, leave all\npartition offsets blank in the CSV file.",
                "id": "PARTITION_TABLE_OFFSET",
                "name": "PARTITION_TABLE_OFFSET",
                "range": null,
                "title": "Offset of partition table",
                "type": "hex"
            },
            {
                "children": [],
                "depends_on": "!ESP32_COMPATIBLE_PRE_V3_1_BOOTLOADERS",
                "help": "Generate an MD5 checksum for the partition table for protecting the\nintegrity of the table. The generation should be turned off for legacy\nbootloaders which cannot recognize the MD5 checksum in the partition\ntable.",
                "id": "PARTITION_TABLE_MD5",
                "name": "PARTITION_TABLE_MD5",
                "range": null,
                "title": "Generate an MD5 checksum for the partition table",
                "type": "bool"
            }
        ],
        "depends_on": null,
        "id": "partition-table",
        "title": "Partition Table",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "COMPILER_OPTIMIZATION_DEFAULT",
                        "name": "COMPILER_OPTIMIZATION_DEFAULT",
                        "range": null,
                        "title": "Debug (-Og)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "COMPILER_OPTIMIZATION_SIZE",
                        "name": "COMPILER_OPTIMIZATION_SIZE",
                        "range": null,
                        "title": "Optimize for size (-Os)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "COMPILER_OPTIMIZATION_PERF",
                        "name": "COMPILER_OPTIMIZATION_PERF",
                        "range": null,
                        "title": "Optimize for performance (-O2)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "COMPILER_OPTIMIZATION_NONE",
                        "name": "COMPILER_OPTIMIZATION_NONE",
                        "range": null,
                        "title": "Debug without optimization (-O0)",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "This option sets compiler optimization level (gcc -O argument) for the app.\n\n- The \"Default\" setting will add the -0g flag to CFLAGS.\n- The \"Size\" setting will add the -0s flag to CFLAGS.\n- The \"Performance\" setting will add the -O2 flag to CFLAGS.\n- The \"None\" setting will add the -O0 flag to CFLAGS.\n\nThe \"Size\" setting cause the compiled code to be smaller and faster, but\nmay lead to difficulties of correlating code addresses to source file\nlines when debugging.\n\nThe \"Performance\" setting causes the compiled code to be larger and faster,\nbut will be easier to correlated code addresses to source file lines.\n\n\"None\" with -O0 produces compiled code without optimization.\n\nNote that custom optimization levels may be unsupported.\n\nCompiler optimization for the IDF bootloader is set separately,\nsee the BOOTLOADER_COMPILER_OPTIMIZATION setting.",
                "id": "compiler-options-optimization-level",
                "name": "COMPILER_OPTIMIZATION",
                "title": "Optimization Level",
                "type": "choice"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION_ASSERTION_LEVEL>",
                        "help": "Enable assertions. Assertion content and line number will be printed on failure.",
                        "id": "COMPILER_OPTIMIZATION_ASSERTIONS_ENABLE",
                        "name": "COMPILER_OPTIMIZATION_ASSERTIONS_ENABLE",
                        "range": null,
                        "title": "Enabled",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION_ASSERTION_LEVEL>",
                        "help": "Enable silent assertions. Failed assertions will abort(), user needs to\nuse the aborting address to find the line number with the failed assertion.",
                        "id": "COMPILER_OPTIMIZATION_ASSERTIONS_SILENT",
                        "name": "COMPILER_OPTIMIZATION_ASSERTIONS_SILENT",
                        "range": null,
                        "title": "Silent (saves code size)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION_ASSERTION_LEVEL>",
                        "help": "If assertions are disabled, -DNDEBUG is added to CPPFLAGS.",
                        "id": "COMPILER_OPTIMIZATION_ASSERTIONS_DISABLE",
                        "name": "COMPILER_OPTIMIZATION_ASSERTIONS_DISABLE",
                        "range": null,
                        "title": "Disabled (sets -DNDEBUG)",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Assertions can be:\n\n- Enabled. Failure will print verbose assertion details. This is the default.\n\n- Set to \"silent\" to save code size (failed assertions will abort() but user\n  needs to use the aborting address to find the line number with the failed assertion.)\n\n- Disabled entirely (not recommended for most configurations.) -DNDEBUG is added\n  to CPPFLAGS in this case.",
                "id": "compiler-options-assertion-level",
                "name": "COMPILER_OPTIMIZATION_ASSERTION_LEVEL",
                "title": "Assertion level",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "COMPILER_OPTIMIZATION_ASSERTION_LEVEL",
                "name": "COMPILER_OPTIMIZATION_ASSERTION_LEVEL",
                "range": null,
                "title": null,
                "type": "int"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "If enabled, the error messages will be discarded in following check macros:\n- ESP_RETURN_ON_ERROR\n- ESP_EXIT_ON_ERROR\n- ESP_RETURN_ON_FALSE\n- ESP_EXIT_ON_FALSE",
                "id": "COMPILER_OPTIMIZATION_CHECKS_SILENT",
                "name": "COMPILER_OPTIMIZATION_CHECKS_SILENT",
                "range": null,
                "title": "Disable messages in ESP_RETURN_ON_* and ESP_EXIT_ON_* macros",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "IDF_CMAKE",
                "help": "When expanding the __FILE__ and __BASE_FILE__ macros, replace paths inside ESP-IDF\nwith paths relative to the placeholder string \"IDF\", and convert paths inside the\nproject directory to relative paths.\n\nThis allows building the project with assertions or other code that embeds file paths,\nwithout the binary containing the exact path to the IDF or project directories.\n\nThis option passes -fmacro-prefix-map options to the GCC command line. To replace additional\npaths in your binaries, modify the project CMakeLists.txt file to pass custom -fmacro-prefix-map or\n-ffile-prefix-map arguments.",
                "id": "COMPILER_HIDE_PATHS_MACROS",
                "is_menuconfig": true,
                "name": "COMPILER_HIDE_PATHS_MACROS",
                "range": null,
                "title": "Replace ESP-IDF and project paths in binaries",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "COMPILER_CXX_EXCEPTIONS",
                        "help": "Size (in bytes) of the emergency memory pool for C++ exceptions. This pool will be used to allocate\nmemory for thrown exceptions when there is not enough memory on the heap.",
                        "id": "COMPILER_CXX_EXCEPTIONS_EMG_POOL_SIZE",
                        "name": "COMPILER_CXX_EXCEPTIONS_EMG_POOL_SIZE",
                        "range": null,
                        "title": "Emergency Pool Size",
                        "type": "int"
                    }
                ],
                "depends_on": null,
                "help": "Enabling this option compiles all IDF C++ files with exception support enabled.\n\nDisabling this option disables C++ exception support in all compiled files, and any libstdc++ code\nwhich throws an exception will abort instead.\n\nEnabling this option currently adds an additional ~500 bytes of heap overhead\nwhen an exception is thrown in user code for the first time.",
                "id": "COMPILER_CXX_EXCEPTIONS",
                "is_menuconfig": true,
                "name": "COMPILER_CXX_EXCEPTIONS",
                "range": null,
                "title": "Enable C++ exceptions",
                "type": "menu"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Enabling this option compiles all C++ files with RTTI support enabled.\nThis increases binary size (typically by tens of kB) but allows using\ndynamic_cast conversion and typeid operator.",
                "id": "COMPILER_CXX_RTTI",
                "name": "COMPILER_CXX_RTTI",
                "range": null,
                "title": "Enable C++ run-time type info (RTTI)",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>",
                        "help": null,
                        "id": "COMPILER_STACK_CHECK_MODE_NONE",
                        "name": "COMPILER_STACK_CHECK_MODE_NONE",
                        "range": null,
                        "title": "None",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>",
                        "help": null,
                        "id": "COMPILER_STACK_CHECK_MODE_NORM",
                        "name": "COMPILER_STACK_CHECK_MODE_NORM",
                        "range": null,
                        "title": "Normal",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>",
                        "help": null,
                        "id": "COMPILER_STACK_CHECK_MODE_STRONG",
                        "name": "COMPILER_STACK_CHECK_MODE_STRONG",
                        "range": null,
                        "title": "Strong",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>",
                        "help": null,
                        "id": "COMPILER_STACK_CHECK_MODE_ALL",
                        "name": "COMPILER_STACK_CHECK_MODE_ALL",
                        "range": null,
                        "title": "Overall",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Stack smashing protection mode. Emit extra code to check for buffer overflows, such as stack\nsmashing attacks. This is done by adding a guard variable to functions with vulnerable objects.\nThe guards are initialized when a function is entered and then checked when the function exits.\nIf a guard check fails, program is halted. Protection has the following modes:\n\n- In NORMAL mode (GCC flag: -fstack-protector) only functions that call alloca, and functions with\n  buffers larger than 8 bytes are protected.\n\n- STRONG mode (GCC flag: -fstack-protector-strong) is like NORMAL, but includes additional functions\n  to be protected -- those that have local array definitions, or have references to local frame\n  addresses.\n\n- In OVERALL mode (GCC flag: -fstack-protector-all) all functions are protected.\n\nModes have the following impact on code performance and coverage:\n\n- performance: NORMAL > STRONG > OVERALL\n\n- coverage: NORMAL < STRONG < OVERALL\n\nThe performance impact includes increasing the amount of stack memory required for each task.",
                "id": "compiler-options-stack-smashing-protection-mode",
                "name": "COMPILER_STACK_CHECK_MODE",
                "title": "Stack smashing protection mode",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Stack smashing protection.",
                "id": "COMPILER_STACK_CHECK",
                "name": "COMPILER_STACK_CHECK",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Adds -Wwrite-strings flag for the C/C++ compilers.\n\nFor C, this gives string constants the type ``const char[]`` so that\ncopying the address of one into a non-const ``char *`` pointer\nproduces a warning. This warning helps to find at compile time code\nthat tries to write into a string constant.\n\nFor C++, this warns about the deprecated conversion from string\nliterals to ``char *``.",
                "id": "COMPILER_WARN_WRITE_STRINGS",
                "name": "COMPILER_WARN_WRITE_STRINGS",
                "range": null,
                "title": "Enable -Wwrite-strings warning flag",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "IDF_TARGET_ARCH_RISCV",
                "help": "Adds -msave-restore to C/C++ compilation flags.\n\nWhen this flag is enabled, compiler will call library functions to\nsave/restore registers in function prologues/epilogues. This results\nin lower overall code size, at the expense of slightly reduced performance.\n\nThis option can be enabled for RISC-V targets only.",
                "id": "COMPILER_SAVE_RESTORE_LIBCALLS",
                "name": "COMPILER_SAVE_RESTORE_LIBCALLS",
                "range": null,
                "title": "Enable -msave-restore flag to reduce code size",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Enable this option if using GCC 6 or newer, and wanting to disable warnings which don't appear with\nGCC 5.",
                "id": "COMPILER_DISABLE_GCC8_WARNINGS",
                "name": "COMPILER_DISABLE_GCC8_WARNINGS",
                "range": null,
                "title": "Disable new warnings introduced in GCC 6 - 8",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "If enabled, RTL files will be produced during compilation. These files\ncan be used by other tools, for example to calculate call graphs.",
                "id": "COMPILER_DUMP_RTL_FILES",
                "name": "COMPILER_DUMP_RTL_FILES",
                "range": null,
                "title": "Dump RTL files during compilation",
                "type": "bool"
            }
        ],
        "depends_on": null,
        "id": "compiler-options",
        "title": "Compiler options",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice APPTRACE_DESTINATION>",
                                "help": null,
                                "id": "APPTRACE_DEST_JTAG",
                                "name": "APPTRACE_DEST_JTAG",
                                "range": null,
                                "title": "JTAG",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice APPTRACE_DESTINATION>",
                                "help": null,
                                "id": "APPTRACE_DEST_NONE",
                                "name": "APPTRACE_DEST_NONE",
                                "range": null,
                                "title": "None",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Select destination for application trace: JTAG or none (to disable).",
                        "id": "component-config-application-level-tracing-data-destination",
                        "name": "APPTRACE_DESTINATION",
                        "title": "Data Destination",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ARCH_XTENSA && !ESP32_TRAX && !ESP32S2_TRAX && !ESP32S3_TRAX",
                        "help": "Enables/disable TRAX tracing HW.",
                        "id": "APPTRACE_DEST_TRAX",
                        "name": "APPTRACE_DEST_TRAX",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enables/disable swapping memory buffers tracing protocol.",
                        "id": "APPTRACE_MEMBUFS_APPTRACE_PROTO_ENABLE",
                        "name": "APPTRACE_MEMBUFS_APPTRACE_PROTO_ENABLE",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enables/disable application tracing module.",
                        "id": "APPTRACE_ENABLE",
                        "name": "APPTRACE_ENABLE",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enables/disable application tracing module internal sync lock.",
                        "id": "APPTRACE_LOCK_ENABLE",
                        "name": "APPTRACE_LOCK_ENABLE",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "APPTRACE_ENABLE",
                        "help": "Timeout for flushing last trace data to host in case of panic. In ms.\nUse -1 to disable timeout and wait forever.",
                        "id": "APPTRACE_ONPANIC_HOST_FLUSH_TMO",
                        "name": "APPTRACE_ONPANIC_HOST_FLUSH_TMO",
                        "range": null,
                        "title": "Timeout for flushing last trace data to host on panic",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "APPTRACE_ENABLE",
                        "help": "Threshold for flushing last trace data to host on panic in post-mortem mode.\nThis is minimal amount of data needed to perform flush. In bytes.",
                        "id": "APPTRACE_POSTMORTEM_FLUSH_THRESH",
                        "name": "APPTRACE_POSTMORTEM_FLUSH_THRESH",
                        "range": null,
                        "title": "Threshold for flushing last trace data to host on panic",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "APPTRACE_MEMBUFS_APPTRACE_PROTO_ENABLE && !APPTRACE_DEST_TRAX",
                        "help": "Size of the memory buffer for trace data in bytes.",
                        "id": "APPTRACE_BUF_SIZE",
                        "name": "APPTRACE_BUF_SIZE",
                        "range": null,
                        "title": "Size of the apptrace buffer",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "APPTRACE_MEMBUFS_APPTRACE_PROTO_ENABLE",
                        "help": "Size of the buffer for events in bytes. It is useful for buffering events from\nthe time critical code (scheduler, ISRs etc). If this parameter is 0 then\nevents will be discarded when main HW buffer is full.",
                        "id": "APPTRACE_PENDING_DATA_SIZE_MAX",
                        "name": "APPTRACE_PENDING_DATA_SIZE_MAX",
                        "range": null,
                        "title": "Size of the pending data buffer",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "FREERTOS_UNICORE && !PM_ENABLE && !IDF_TARGET_ESP32C3 && <choice APPTRACE_SV_TS_SOURCE>",
                                                "help": null,
                                                "id": "APPTRACE_SV_TS_SOURCE_CCOUNT",
                                                "name": "APPTRACE_SV_TS_SOURCE_CCOUNT",
                                                "range": null,
                                                "title": "CPU cycle counter (CCOUNT)",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "!PM_ENABLE && !IDF_TARGET_ESP32C3 && <choice APPTRACE_SV_TS_SOURCE>",
                                                "help": null,
                                                "id": "APPTRACE_SV_TS_SOURCE_TIMER_00",
                                                "name": "APPTRACE_SV_TS_SOURCE_TIMER_00",
                                                "range": null,
                                                "title": "Timer 0, Group 0",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "!PM_ENABLE && !IDF_TARGET_ESP32C3 && <choice APPTRACE_SV_TS_SOURCE>",
                                                "help": null,
                                                "id": "APPTRACE_SV_TS_SOURCE_TIMER_01",
                                                "name": "APPTRACE_SV_TS_SOURCE_TIMER_01",
                                                "range": null,
                                                "title": "Timer 1, Group 0",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "!PM_ENABLE && !IDF_TARGET_ESP32C3 && <choice APPTRACE_SV_TS_SOURCE>",
                                                "help": null,
                                                "id": "APPTRACE_SV_TS_SOURCE_TIMER_10",
                                                "name": "APPTRACE_SV_TS_SOURCE_TIMER_10",
                                                "range": null,
                                                "title": "Timer 0, Group 1",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "!PM_ENABLE && !IDF_TARGET_ESP32C3 && <choice APPTRACE_SV_TS_SOURCE>",
                                                "help": null,
                                                "id": "APPTRACE_SV_TS_SOURCE_TIMER_11",
                                                "name": "APPTRACE_SV_TS_SOURCE_TIMER_11",
                                                "range": null,
                                                "title": "Timer 1, Group 1",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice APPTRACE_SV_TS_SOURCE>",
                                                "help": null,
                                                "id": "APPTRACE_SV_TS_SOURCE_ESP_TIMER",
                                                "name": "APPTRACE_SV_TS_SOURCE_ESP_TIMER",
                                                "range": null,
                                                "title": "esp_timer high resolution timer",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "SystemView needs to use a hardware timer as the source of timestamps\nwhen tracing. This option selects the timer for it.",
                                        "id": "component-config-application-level-tracing-freertos-systemview-tracing-systemview-tracing-enable-timer-to-use-as-timestamp-source",
                                        "name": "APPTRACE_SV_TS_SOURCE",
                                        "title": "Timer to use as timestamp source",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Configures maximum supported tasks in sysview debug",
                                        "id": "APPTRACE_SV_MAX_TASKS",
                                        "name": "APPTRACE_SV_MAX_TASKS",
                                        "range": null,
                                        "title": "Maximum supported tasks",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Configures timeout (in us) to wait for free space in trace buffer.\nSet to -1 to wait forever and avoid lost events.",
                                        "id": "APPTRACE_SV_BUF_WAIT_TMO",
                                        "name": "APPTRACE_SV_BUF_WAIT_TMO",
                                        "range": null,
                                        "title": "Trace buffer wait timeout",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"Trace Buffer Overflow\" event.",
                                        "id": "APPTRACE_SV_EVT_OVERFLOW_ENABLE",
                                        "name": "APPTRACE_SV_EVT_OVERFLOW_ENABLE",
                                        "range": null,
                                        "title": "Trace Buffer Overflow Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"ISR Enter\" event.",
                                        "id": "APPTRACE_SV_EVT_ISR_ENTER_ENABLE",
                                        "name": "APPTRACE_SV_EVT_ISR_ENTER_ENABLE",
                                        "range": null,
                                        "title": "ISR Enter Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"ISR Exit\" event.",
                                        "id": "APPTRACE_SV_EVT_ISR_EXIT_ENABLE",
                                        "name": "APPTRACE_SV_EVT_ISR_EXIT_ENABLE",
                                        "range": null,
                                        "title": "ISR Exit Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"ISR to Scheduler\" event.",
                                        "id": "APPTRACE_SV_EVT_ISR_TO_SCHED_ENABLE",
                                        "name": "APPTRACE_SV_EVT_ISR_TO_SCHED_ENABLE",
                                        "range": null,
                                        "title": "ISR Exit to Scheduler Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"Task Start Execution\" event.",
                                        "id": "APPTRACE_SV_EVT_TASK_START_EXEC_ENABLE",
                                        "name": "APPTRACE_SV_EVT_TASK_START_EXEC_ENABLE",
                                        "range": null,
                                        "title": "Task Start Execution Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"Task Stop Execution\" event.",
                                        "id": "APPTRACE_SV_EVT_TASK_STOP_EXEC_ENABLE",
                                        "name": "APPTRACE_SV_EVT_TASK_STOP_EXEC_ENABLE",
                                        "range": null,
                                        "title": "Task Stop Execution Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"Task Start Ready State\" event.",
                                        "id": "APPTRACE_SV_EVT_TASK_START_READY_ENABLE",
                                        "name": "APPTRACE_SV_EVT_TASK_START_READY_ENABLE",
                                        "range": null,
                                        "title": "Task Start Ready State Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"Task Stop Ready State\" event.",
                                        "id": "APPTRACE_SV_EVT_TASK_STOP_READY_ENABLE",
                                        "name": "APPTRACE_SV_EVT_TASK_STOP_READY_ENABLE",
                                        "range": null,
                                        "title": "Task Stop Ready State Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"Task Create\" event.",
                                        "id": "APPTRACE_SV_EVT_TASK_CREATE_ENABLE",
                                        "name": "APPTRACE_SV_EVT_TASK_CREATE_ENABLE",
                                        "range": null,
                                        "title": "Task Create Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"Task Terminate\" event.",
                                        "id": "APPTRACE_SV_EVT_TASK_TERMINATE_ENABLE",
                                        "name": "APPTRACE_SV_EVT_TASK_TERMINATE_ENABLE",
                                        "range": null,
                                        "title": "Task Terminate Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"System Idle\" event.",
                                        "id": "APPTRACE_SV_EVT_IDLE_ENABLE",
                                        "name": "APPTRACE_SV_EVT_IDLE_ENABLE",
                                        "range": null,
                                        "title": "System Idle Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"Timer Enter\" event.",
                                        "id": "APPTRACE_SV_EVT_TIMER_ENTER_ENABLE",
                                        "name": "APPTRACE_SV_EVT_TIMER_ENTER_ENABLE",
                                        "range": null,
                                        "title": "Timer Enter Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"Timer Exit\" event.",
                                        "id": "APPTRACE_SV_EVT_TIMER_EXIT_ENABLE",
                                        "name": "APPTRACE_SV_EVT_TIMER_EXIT_ENABLE",
                                        "range": null,
                                        "title": "Timer Exit Event",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "APPTRACE_ENABLE && APPTRACE_ENABLE",
                                "help": "Enables supporrt for SEGGER SystemView tracing functionality.",
                                "id": "APPTRACE_SV_ENABLE",
                                "name": "APPTRACE_SV_ENABLE",
                                "range": null,
                                "title": "SystemView Tracing Enable",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "APPTRACE_ENABLE",
                        "id": "component-config-application-level-tracing-freertos-systemview-tracing",
                        "title": "FreeRTOS SystemView Tracing",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": "APPTRACE_ENABLE && !APPTRACE_SV_ENABLE",
                        "help": "Enables support for GCOV data transfer to host.",
                        "id": "APPTRACE_GCOV_ENABLE",
                        "name": "APPTRACE_GCOV_ENABLE",
                        "range": null,
                        "title": "GCOV to Host Enable",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-application-level-tracing",
                "title": "Application Level Tracing",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "ADC power can be controlled by the FSM instead of software. This allows the ADC to\nbe shut off when it is not working leading to lower power consumption. However\nusing the FSM control ADC power will increase the noise of ADC.",
                                "id": "ADC_FORCE_XPD_FSM",
                                "name": "ADC_FORCE_XPD_FSM",
                                "range": null,
                                "title": "Use the FSM to control ADC power",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "If this is set, the ADC2 driver will disable the output of the DAC corresponding to the specified\nchannel. This is the default value.\n\nFor testing, disable this option so that we can measure the output of DAC by internal ADC.",
                                "id": "ADC_DISABLE_DAC",
                                "name": "ADC_DISABLE_DAC",
                                "range": null,
                                "title": "Disable DAC when ADC2 is used on GPIO 25 and 26",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-driver-configurations-adc-configuration",
                        "title": "ADC configuration",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "If this option is not selected, the MCPWM interrupt will be deferred when the Cache\nis in a disabled state (e.g. Flash write/erase operation).\n\nNote that if this option is selected, all user registered ISR callbacks should never\ntry to use cache as well. (with IRAM_ATTR)",
                                "id": "MCPWM_ISR_IN_IRAM",
                                "name": "MCPWM_ISR_IN_IRAM",
                                "range": null,
                                "title": "Place MCPWM ISR function into IRAM",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-driver-configurations-mcpwm-configuration",
                        "title": "MCPWM configuration",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Normally only the ISR of SPI master is placed in the IRAM, so that it\ncan work without the flash when interrupt is triggered.\nFor other functions, there's some possibility that the flash cache\nmiss when running inside and out of SPI functions, which may increase\nthe interval of SPI transactions.\nEnable this to put ``queue_trans``, ``get_trans_result`` and\n``transmit`` functions into the IRAM to avoid possible cache miss.\n\nDuring unit test, this is enabled to measure the ideal case of api.",
                                "id": "SPI_MASTER_IN_IRAM",
                                "name": "SPI_MASTER_IN_IRAM",
                                "range": null,
                                "title": "Place transmitting functions of SPI master into IRAM",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Place the SPI master ISR in to IRAM to avoid possible cache miss.\n\nAlso you can forbid the ISR being disabled during flash writing\naccess, by add ESP_INTR_FLAG_IRAM when initializing the driver.",
                                "id": "SPI_MASTER_ISR_IN_IRAM",
                                "name": "SPI_MASTER_ISR_IN_IRAM",
                                "range": null,
                                "title": "Place SPI master ISR function into IRAM",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Normally only the ISR of SPI slave is placed in the IRAM, so that it\ncan work without the flash when interrupt is triggered.\nFor other functions, there's some possibility that the flash cache\nmiss when running inside and out of SPI functions, which may increase\nthe interval of SPI transactions.\nEnable this to put ``queue_trans``, ``get_trans_result`` and\n``transmit`` functions into the IRAM to avoid possible cache miss.",
                                "id": "SPI_SLAVE_IN_IRAM",
                                "name": "SPI_SLAVE_IN_IRAM",
                                "range": null,
                                "title": "Place transmitting functions of SPI slave into IRAM",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Place the SPI slave ISR in to IRAM to avoid possible cache miss.\n\nAlso you can forbid the ISR being disabled during flash writing\naccess, by add ESP_INTR_FLAG_IRAM when initializing the driver.",
                                "id": "SPI_SLAVE_ISR_IN_IRAM",
                                "name": "SPI_SLAVE_ISR_IN_IRAM",
                                "range": null,
                                "title": "Place SPI slave ISR function into IRAM",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-driver-configurations-spi-configuration",
                        "title": "SPI configuration",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Place the TWAI ISR in to IRAM. This will allow the ISR to avoid\ncache misses, and also be able to run whilst the cache is disabled\n(such as when writing to SPI Flash).\nNote that if this option is enabled:\n- Users should also set the ESP_INTR_FLAG_IRAM in the driver\nconfiguration structure when installing the driver (see docs for\nspecifics).\n- Alert logging (i.e., setting of the TWAI_ALERT_AND_LOG flag)\nwill have no effect.",
                                "id": "TWAI_ISR_IN_IRAM",
                                "name": "TWAI_ISR_IN_IRAM",
                                "range": null,
                                "title": "Place TWAI ISR function into IRAM",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32",
                                "help": "When the bus-off condition is reached, the REC should be reset to 0 and frozen (via LOM) by the\ndriver's ISR. However on the ESP32, there is an edge case where the REC will increase before the\ndriver's ISR can respond in time (e.g., due to the rapid occurrence of bus errors), thus causing the\nREC to be non-zero after bus-off. A non-zero REC can prevent bus-off recovery as the bus-off recovery\ncondition is that both TEC and REC become 0. Enabling this option will add a workaround in the driver\nto forcibly reset REC to zero on reaching bus-off.",
                                "id": "TWAI_ERRATA_FIX_BUS_OFF_REC",
                                "name": "TWAI_ERRATA_FIX_BUS_OFF_REC",
                                "range": null,
                                "title": "Add SW workaround for REC change during bus-off",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32",
                                "help": "On the ESP32, when a transmit interrupt occurs, and interrupt register is read on the same APB clock\ncycle, the transmit interrupt could be lost. Enabling this option will add a workaround that checks the\ntransmit buffer status bit to recover any lost transmit interrupt.",
                                "id": "TWAI_ERRATA_FIX_TX_INTR_LOST",
                                "name": "TWAI_ERRATA_FIX_TX_INTR_LOST",
                                "range": null,
                                "title": "Add SW workaround for TX interrupt lost errata",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32",
                                "help": "On the ESP32, when receiving a data or remote frame, if a bus error occurs in the data or CRC field,\nthe data of the next received frame could be invalid. Enabling this option will add a workaround that\nwill reset the peripheral on detection of this errata condition. Note that if a frame is transmitted on\nthe bus whilst the reset is ongoing, the message will not be receive by the peripheral sent on the bus\nduring the reset, the message will be lost.",
                                "id": "TWAI_ERRATA_FIX_RX_FRAME_INVALID",
                                "name": "TWAI_ERRATA_FIX_RX_FRAME_INVALID",
                                "range": null,
                                "title": "Add SW workaround for invalid RX frame errata",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32",
                                "help": "On the ESP32, when the RX FIFO overruns and the RX message counter maxes out at 64 messages, the entire\nRX FIFO is no longer recoverable. Enabling this option will add a workaround that resets the peripheral\non detection of this errata condition. Note that if a frame is being sent on the bus during the reset\nbus during the reset, the message will be lost.",
                                "id": "TWAI_ERRATA_FIX_RX_FIFO_CORRUPT",
                                "name": "TWAI_ERRATA_FIX_RX_FIFO_CORRUPT",
                                "range": null,
                                "title": "Add SW workaround for RX FIFO corruption errata",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-driver-configurations-twai-configuration",
                        "title": "TWAI configuration",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "If this option is not selected, UART interrupt will be disabled for a long time and\nmay cause data lost when doing spi flash operation.",
                                "id": "UART_ISR_IN_IRAM",
                                "name": "UART_ISR_IN_IRAM",
                                "range": null,
                                "title": "Place UART ISR function into IRAM",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-driver-configurations-uart-configuration",
                        "title": "UART configuration",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32",
                                "help": "The the array `rtc_gpio_desc` will don't compile by default.\nIf this option is selected, the array `rtc_gpio_desc` can be compile.\nIf user use this array, please enable this configuration.",
                                "id": "RTCIO_SUPPORT_RTC_GPIO_DESC",
                                "name": "RTCIO_SUPPORT_RTC_GPIO_DESC",
                                "range": null,
                                "title": "Support array `rtc_gpio_desc` for ESP32",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-driver-configurations-rtcio-configuration",
                        "title": "RTCIO configuration",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32",
                                "help": "This option is intended to fix the bug that ESP32 is not able to switch to configured\npullup/pulldown mode in sleep.\nIf this option is selected, chip will automatically emulate the behaviour of switching,\nand about 450B of source codes would be placed into IRAM.",
                                "id": "GPIO_ESP32_SUPPORT_SWITCH_SLP_PULL",
                                "name": "GPIO_ESP32_SUPPORT_SWITCH_SLP_PULL",
                                "range": null,
                                "title": "Support light sleep GPIO pullup/pulldown configuration for ESP32",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-driver-configurations-gpio-configuration",
                        "title": "GPIO Configuration",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Place GDMA control functions (like start/stop/append/reset) into IRAM,\nso that these functions can be IRAM-safe and able to be called in the other IRAM interrupt context.\nEnabling this option can improve driver performance as well.",
                                "id": "GDMA_CTRL_FUNC_IN_IRAM",
                                "name": "GDMA_CTRL_FUNC_IN_IRAM",
                                "range": null,
                                "title": "Place GDMA control functions into IRAM",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "This will ensure the GDMA interrupt handler is IRAM-Safe, allow to avoid flash\ncache misses, and also be able to run whilst the cache is disabled.\n(e.g. SPI Flash write).",
                                "id": "GDMA_ISR_IRAM_SAFE",
                                "name": "GDMA_ISR_IRAM_SAFE",
                                "range": null,
                                "title": "GDMA ISR IRAM-Safe",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-driver-configurations-gdma-configuration",
                        "title": "GDMA Configuration",
                        "type": "menu"
                    }
                ],
                "depends_on": null,
                "id": "component-config-driver-configurations",
                "title": "Driver configurations",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "EFUSE_CUSTOM_TABLE",
                                "help": "Name of the custom eFuse CSV filename. This path is evaluated\nrelative to the project root directory.",
                                "id": "EFUSE_CUSTOM_TABLE_FILENAME",
                                "name": "EFUSE_CUSTOM_TABLE_FILENAME",
                                "range": null,
                                "title": "Custom eFuse CSV file",
                                "type": "string"
                            }
                        ],
                        "depends_on": null,
                        "help": "Allows to generate a structure for eFuse from the CSV file.",
                        "id": "EFUSE_CUSTOM_TABLE",
                        "name": "EFUSE_CUSTOM_TABLE",
                        "range": null,
                        "title": "Use custom eFuse table",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "EFUSE_VIRTUAL",
                                "help": "In addition to the \"Simulate eFuse operations in RAM\" option, this option just adds\na feature to keep eFuses after reboots in flash memory. To use this mode the partition_table\nshould have the `efuse` partition. partition.csv: \"efuse_em, data, efuse,   ,   0x2000,\"\n\nDuring startup, the eFuses are copied from flash or,\nin case if flash is empty, from real eFuse to RAM and then update flash.\nThis mode is useful when need to keep changes after reboot\n(testing secure_boot and flash_encryption).",
                                "id": "EFUSE_VIRTUAL_KEEP_IN_FLASH",
                                "name": "EFUSE_VIRTUAL_KEEP_IN_FLASH",
                                "range": null,
                                "title": "Keep eFuses in flash",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "If \"n\" - No virtual mode. All eFuse operations are real and use eFuse registers.\nIf \"y\" - The virtual mode is enabled and all eFuse operations (read and write) are redirected\nto RAM instead of eFuse registers, all permanent changes (via eFuse) are disabled.\nLog output will state changes that would be applied, but they will not be.\n\nDuring startup, the eFuses are copied into RAM. This mode is useful for fast tests.",
                        "id": "EFUSE_VIRTUAL",
                        "name": "EFUSE_VIRTUAL",
                        "range": null,
                        "title": "Simulate eFuse operations in RAM",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice EFUSE_CODE_SCHEME_SELECTOR>",
                                "help": null,
                                "id": "EFUSE_CODE_SCHEME_COMPAT_NONE",
                                "name": "EFUSE_CODE_SCHEME_COMPAT_NONE",
                                "range": null,
                                "title": "None Only",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EFUSE_CODE_SCHEME_SELECTOR>",
                                "help": null,
                                "id": "EFUSE_CODE_SCHEME_COMPAT_3_4",
                                "name": "EFUSE_CODE_SCHEME_COMPAT_3_4",
                                "range": null,
                                "title": "3/4 and None",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice EFUSE_CODE_SCHEME_SELECTOR>",
                                "help": null,
                                "id": "EFUSE_CODE_SCHEME_COMPAT_REPEAT",
                                "name": "EFUSE_CODE_SCHEME_COMPAT_REPEAT",
                                "range": null,
                                "title": "Repeat, 3/4 and None (common table does not support it)",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "IDF_TARGET_ESP32",
                        "help": "Selector eFuse code scheme.",
                        "id": "component-config-efuse-bit-manager-coding-scheme-compatibility",
                        "name": "EFUSE_CODE_SCHEME_SELECTOR",
                        "title": "Coding Scheme Compatibility",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "EFUSE_MAX_BLK_LEN",
                        "name": "EFUSE_MAX_BLK_LEN",
                        "range": null,
                        "title": null,
                        "type": "int"
                    }
                ],
                "depends_on": null,
                "id": "component-config-efuse-bit-manager",
                "title": "eFuse Bit Manager",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "!FREERTOS_UNICORE && ESP32_SPIRAM_SUPPORT",
                        "help": null,
                        "id": "ESP32_ECO3_CACHE_LOCK_FIX",
                        "name": "ESP32_ECO3_CACHE_LOCK_FIX",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_REV_MIN>",
                                "help": null,
                                "id": "ESP32_REV_MIN_0",
                                "name": "ESP32_REV_MIN_0",
                                "range": null,
                                "title": "Rev 0",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_REV_MIN>",
                                "help": null,
                                "id": "ESP32_REV_MIN_1",
                                "name": "ESP32_REV_MIN_1",
                                "range": null,
                                "title": "Rev 1",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_REV_MIN>",
                                "help": null,
                                "id": "ESP32_REV_MIN_2",
                                "name": "ESP32_REV_MIN_2",
                                "range": null,
                                "title": "Rev 2",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_REV_MIN>",
                                "help": null,
                                "id": "ESP32_REV_MIN_3",
                                "name": "ESP32_REV_MIN_3",
                                "range": null,
                                "title": "Rev 3",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Minimum revision that ESP-IDF would support.\nESP-IDF performs different strategy on different esp32 revision.",
                        "id": "component-config-esp32-specific-minimum-supported-esp32-revision",
                        "name": "ESP32_REV_MIN",
                        "title": "Minimum Supported ESP32 Revision",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP32_REV_MIN",
                        "name": "ESP32_REV_MIN",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP32_DPORT_WORKAROUND",
                        "name": "ESP32_DPORT_WORKAROUND",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "IDF_ENV_FPGA && <choice ESP32_DEFAULT_CPU_FREQ_MHZ>",
                                "help": null,
                                "id": "ESP32_DEFAULT_CPU_FREQ_40",
                                "name": "ESP32_DEFAULT_CPU_FREQ_40",
                                "range": null,
                                "title": "40 MHz",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_DEFAULT_CPU_FREQ_MHZ>",
                                "help": null,
                                "id": "ESP32_DEFAULT_CPU_FREQ_80",
                                "name": "ESP32_DEFAULT_CPU_FREQ_80",
                                "range": null,
                                "title": "80 MHz",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_DEFAULT_CPU_FREQ_MHZ>",
                                "help": null,
                                "id": "ESP32_DEFAULT_CPU_FREQ_160",
                                "name": "ESP32_DEFAULT_CPU_FREQ_160",
                                "range": null,
                                "title": "160 MHz",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_DEFAULT_CPU_FREQ_MHZ>",
                                "help": null,
                                "id": "ESP32_DEFAULT_CPU_FREQ_240",
                                "name": "ESP32_DEFAULT_CPU_FREQ_240",
                                "range": null,
                                "title": "240 MHz",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "CPU frequency to be set on application startup.",
                        "id": "component-config-esp32-specific-cpu-frequency",
                        "name": "ESP32_DEFAULT_CPU_FREQ_MHZ",
                        "title": "CPU frequency",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP32_DEFAULT_CPU_FREQ_MHZ",
                        "name": "ESP32_DEFAULT_CPU_FREQ_MHZ",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice SPIRAM_TYPE>",
                                                "help": null,
                                                "id": "SPIRAM_TYPE_AUTO",
                                                "name": "SPIRAM_TYPE_AUTO",
                                                "range": null,
                                                "title": "Auto-detect",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice SPIRAM_TYPE>",
                                                "help": null,
                                                "id": "SPIRAM_TYPE_ESPPSRAM16",
                                                "name": "SPIRAM_TYPE_ESPPSRAM16",
                                                "range": null,
                                                "title": "ESP-PSRAM16 or APS1604",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice SPIRAM_TYPE>",
                                                "help": null,
                                                "id": "SPIRAM_TYPE_ESPPSRAM32",
                                                "name": "SPIRAM_TYPE_ESPPSRAM32",
                                                "range": null,
                                                "title": "ESP-PSRAM32 or IS25WP032",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice SPIRAM_TYPE>",
                                                "help": null,
                                                "id": "SPIRAM_TYPE_ESPPSRAM64",
                                                "name": "SPIRAM_TYPE_ESPPSRAM64",
                                                "range": null,
                                                "title": "ESP-PSRAM64 or LY68L6400",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "ESP32_SPIRAM_SUPPORT",
                                        "help": null,
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-type-of-spi-ram-chip-in-use",
                                        "name": "SPIRAM_TYPE",
                                        "title": "Type of SPI RAM chip in use",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "ESP32_SPIRAM_SUPPORT",
                                        "help": null,
                                        "id": "SPIRAM_SIZE",
                                        "name": "SPIRAM_SIZE",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice SPIRAM_SPEED>",
                                                "help": null,
                                                "id": "SPIRAM_SPEED_40M",
                                                "name": "SPIRAM_SPEED_40M",
                                                "range": null,
                                                "title": "40MHz clock speed",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "ESPTOOLPY_FLASHFREQ_80M && <choice SPIRAM_SPEED>",
                                                "help": null,
                                                "id": "SPIRAM_SPEED_80M",
                                                "name": "SPIRAM_SPEED_80M",
                                                "range": null,
                                                "title": "80MHz clock speed",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "ESP32_SPIRAM_SUPPORT",
                                        "help": "Select the speed for the SPI RAM chip.\nIf SPI RAM is enabled, we only support three combinations of SPI speed mode we supported now:\n\n1. Flash SPI running at 40Mhz and RAM SPI running at 40Mhz\n2. Flash SPI running at 80Mhz and RAM SPI running at 40Mhz\n3. Flash SPI running at 80Mhz and RAM SPI running at 80Mhz\n\nNote: If the third mode(80Mhz+80Mhz) is enabled for SPI RAM of type 32MBit, one of the HSPI/VSPI host\nwill be occupied by the system. Which SPI host to use can be selected by the config item\nSPIRAM_OCCUPY_SPI_HOST. Application code should never touch HSPI/VSPI hardware in this case. The\noption to select 80MHz will only be visible if the flash SPI speed is also 80MHz.\n(ESPTOOLPY_FLASHFREQ_80M is true)",
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-set-ram-clock-speed",
                                        "name": "SPIRAM_SPEED",
                                        "title": "Set RAM clock speed",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "ESP32_SPIRAM_SUPPORT",
                                        "help": null,
                                        "id": "SPIRAM",
                                        "name": "SPIRAM",
                                        "range": null,
                                        "title": null,
                                        "type": "bool"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "SPIRAM_BOOT_INIT && !SPIRAM_ALLOW_BSS_SEG_EXTERNAL_MEMORY && ESP32_SPIRAM_SUPPORT",
                                                "help": "Normally, if psram initialization is enabled during compile time but not found at runtime, it\nis seen as an error making the CPU panic. If this is enabled, booting will complete\nbut no PSRAM will be available.",
                                                "id": "SPIRAM_IGNORE_NOTFOUND",
                                                "name": "SPIRAM_IGNORE_NOTFOUND",
                                                "range": null,
                                                "title": "Ignore PSRAM when not found",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "ESP32_SPIRAM_SUPPORT",
                                        "help": "If this is enabled, the SPI RAM will be enabled during initial boot. Unless you\nhave specific requirements, you'll want to leave this enabled so memory allocated\nduring boot-up can also be placed in SPI RAM.",
                                        "id": "SPIRAM_BOOT_INIT",
                                        "name": "SPIRAM_BOOT_INIT",
                                        "range": null,
                                        "title": "Initialize SPI RAM during startup",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice SPIRAM_USE>",
                                                "help": null,
                                                "id": "SPIRAM_USE_MEMMAP",
                                                "name": "SPIRAM_USE_MEMMAP",
                                                "range": null,
                                                "title": "Integrate RAM into memory map",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice SPIRAM_USE>",
                                                "help": null,
                                                "id": "SPIRAM_USE_CAPS_ALLOC",
                                                "name": "SPIRAM_USE_CAPS_ALLOC",
                                                "range": null,
                                                "title": "Make RAM allocatable using heap_caps_malloc(..., MALLOC_CAP_SPIRAM)",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice SPIRAM_USE>",
                                                "help": null,
                                                "id": "SPIRAM_USE_MALLOC",
                                                "name": "SPIRAM_USE_MALLOC",
                                                "range": null,
                                                "title": "Make RAM allocatable using malloc() as well",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "ESP32_SPIRAM_SUPPORT",
                                        "help": "The SPI RAM can be accessed in multiple methods: by just having it available as an unmanaged\nmemory region in the CPU's memory map, by integrating it in the heap as 'special' memory\nneeding heap_caps_malloc to allocate, or by fully integrating it making malloc() also able to\nreturn SPI RAM pointers.",
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-spi-ram-access-method",
                                        "name": "SPIRAM_USE",
                                        "title": "SPI RAM access method",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "SPIRAM_BOOT_INIT && ESP32_SPIRAM_SUPPORT",
                                        "help": "Runs a rudimentary memory test on initialization. Aborts when memory test fails. Disable this for\nslightly faster startup.",
                                        "id": "SPIRAM_MEMTEST",
                                        "name": "SPIRAM_MEMTEST",
                                        "range": null,
                                        "title": "Run memory test on SPI RAM initialization",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "SPIRAM_USE_MALLOC && ESP32_SPIRAM_SUPPORT",
                                        "help": "If malloc() is capable of also allocating SPI-connected ram, its allocation strategy will prefer to\nallocate chunks less than this size in internal memory, while allocations larger than this will be\ndone from external RAM. If allocation from the preferred region fails, an attempt is made to allocate\nfrom the non-preferred region instead, so malloc() will not suddenly fail when either internal or\nexternal memory is full.",
                                        "id": "SPIRAM_MALLOC_ALWAYSINTERNAL",
                                        "name": "SPIRAM_MALLOC_ALWAYSINTERNAL",
                                        "range": null,
                                        "title": "Maximum malloc() size, in bytes, to always put in internal memory",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "(SPIRAM_USE_CAPS_ALLOC || SPIRAM_USE_MALLOC) && ESP32_SPIRAM_SUPPORT",
                                        "help": "Try to allocate memories of WiFi and LWIP in SPIRAM firstly. If failed, try to allocate internal\nmemory then.",
                                        "id": "SPIRAM_TRY_ALLOCATE_WIFI_LWIP",
                                        "name": "SPIRAM_TRY_ALLOCATE_WIFI_LWIP",
                                        "range": null,
                                        "title": "Try to allocate memories of WiFi and LWIP in SPIRAM firstly. If failed, allocate internal memory",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "SPIRAM_USE_MALLOC && ESP32_SPIRAM_SUPPORT",
                                        "help": "Because the external/internal RAM allocation strategy is not always perfect, it sometimes may happen\nthat the internal memory is entirely filled up. This causes allocations that are specifically done in\ninternal memory, for example the stack for new tasks or memory to service DMA or have memory that's\nalso available when SPI cache is down, to fail. This option reserves a pool specifically for requests\nlike that; the memory in this pool is not given out when a normal malloc() is called.\n\nSet this to 0 to disable this feature.\n\nNote that because FreeRTOS stacks are forced to internal memory, they will also use this memory pool;\nbe sure to keep this in mind when adjusting this value.\n\nNote also that the DMA reserved pool may not be one single contiguous memory region, depending on the\nconfigured size and the static memory usage of the app.",
                                        "id": "SPIRAM_MALLOC_RESERVE_INTERNAL",
                                        "name": "SPIRAM_MALLOC_RESERVE_INTERNAL",
                                        "range": null,
                                        "title": "Reserve this amount of bytes for data that specifically needs to be in DMA or internal memory",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "SPIRAM && (IDF_TARGET_ESP32 || IDF_TARGET_ESP32S2) && ESP32_SPIRAM_SUPPORT",
                                        "help": "If enabled, variables with EXT_RAM_ATTR attribute will be placed in SPIRAM instead of internal DRAM.\nBSS section of `lwip`, `net80211`, `pp`, `bt` libraries will be automatically placed\nin SPIRAM. BSS sections from other object files and libraries can also be placed in SPIRAM through\nlinker fragment scheme `extram_bss`.\n\nNote that the variables placed in SPIRAM using EXT_RAM_ATTR will be zero initialized.",
                                        "id": "SPIRAM_ALLOW_BSS_SEG_EXTERNAL_MEMORY",
                                        "name": "SPIRAM_ALLOW_BSS_SEG_EXTERNAL_MEMORY",
                                        "range": null,
                                        "title": "Allow .bss segment placed in external memory",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "SPIRAM && IDF_TARGET_ESP32 && ESP32_SPIRAM_SUPPORT",
                                        "help": "If enabled, noinit variables can be placed in PSRAM using EXT_RAM_NOINIT_ATTR.\n\nNote the values placed into this section will not be initialized at startup and should keep its value\nafter software restart.",
                                        "id": "SPIRAM_ALLOW_NOINIT_SEG_EXTERNAL_MEMORY",
                                        "name": "SPIRAM_ALLOW_NOINIT_SEG_EXTERNAL_MEMORY",
                                        "range": null,
                                        "title": "Allow .noinit segment placed in external memory",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "(SPIRAM_USE_MEMMAP || SPIRAM_USE_CAPS_ALLOC || SPIRAM_USE_MALLOC) && ESP32_REV_MIN < 3 && ESP32_SPIRAM_SUPPORT",
                                        "help": "Revision 1 of the ESP32 has a bug that can cause a write to PSRAM not to take place in some situations\nwhen the cache line needs to be fetched from external RAM and an interrupt occurs. This enables a\nfix in the compiler (-mfix-esp32-psram-cache-issue) that makes sure the specific code that is\nvulnerable to this will not be emitted.\n\nThis will also not use any bits of newlib that are located in ROM, opting for a version that is\ncompiled with the workaround and located in flash instead.\n\nThe workaround is not required for ESP32 revision 3 and above.",
                                        "id": "SPIRAM_CACHE_WORKAROUND",
                                        "name": "SPIRAM_CACHE_WORKAROUND",
                                        "range": null,
                                        "title": "Enable workaround for bug in SPI RAM cache for Rev1 ESP32s",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [
                                                    {
                                                        "children": [],
                                                        "depends_on": "<choice SPIRAM_CACHE_WORKAROUND_STRATEGY>",
                                                        "help": null,
                                                        "id": "SPIRAM_CACHE_WORKAROUND_STRATEGY_MEMW",
                                                        "name": "SPIRAM_CACHE_WORKAROUND_STRATEGY_MEMW",
                                                        "range": null,
                                                        "title": "Insert memw after vulnerable instructions (default)",
                                                        "type": "bool"
                                                    },
                                                    {
                                                        "children": [],
                                                        "depends_on": "<choice SPIRAM_CACHE_WORKAROUND_STRATEGY>",
                                                        "help": null,
                                                        "id": "SPIRAM_CACHE_WORKAROUND_STRATEGY_DUPLDST",
                                                        "name": "SPIRAM_CACHE_WORKAROUND_STRATEGY_DUPLDST",
                                                        "range": null,
                                                        "title": "Duplicate LD/ST for 32-bit, memw for 8/16 bit",
                                                        "type": "bool"
                                                    },
                                                    {
                                                        "children": [],
                                                        "depends_on": "<choice SPIRAM_CACHE_WORKAROUND_STRATEGY>",
                                                        "help": null,
                                                        "id": "SPIRAM_CACHE_WORKAROUND_STRATEGY_NOPS",
                                                        "name": "SPIRAM_CACHE_WORKAROUND_STRATEGY_NOPS",
                                                        "range": null,
                                                        "title": "Insert nops between vulnerable loads/stores (old strategy, obsolete)",
                                                        "type": "bool"
                                                    }
                                                ],
                                                "depends_on": "SPIRAM_CACHE_WORKAROUND && ESP32_SPIRAM_SUPPORT",
                                                "help": "Select the workaround strategy. Note that the strategy for precompiled\nlibraries (libgcc, newlib, bt, wifi) is not affected by this selection.\n\nUnless you know you need a different strategy, it's suggested you stay\nwith the default MEMW strategy. Note that DUPLDST can interfere with hardware\nencryption and this will be automatically disabled if this workaround is selected.\n'Insert nops' is the workaround that was used in older esp-idf versions. This workaround\nstill can cause faulty data transfers from/to SPI RAM in some situation.",
                                                "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-spiram-cache-workaround-debugging-workaround-strategy",
                                                "name": "SPIRAM_CACHE_WORKAROUND_STRATEGY",
                                                "title": "Workaround strategy",
                                                "type": "choice"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "ESP32_SPIRAM_SUPPORT",
                                                "help": null,
                                                "id": "SPIRAM_WORKAROUND_NEED_VOLATILE_SPINLOCK",
                                                "name": "SPIRAM_WORKAROUND_NEED_VOLATILE_SPINLOCK",
                                                "range": null,
                                                "title": null,
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "ESP32_SPIRAM_SUPPORT",
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-spiram-cache-workaround-debugging",
                                        "title": "SPIRAM cache workaround debugging",
                                        "type": "menu"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "SPIRAM_CACHE_WORKAROUND && ESP32_SPIRAM_SUPPORT",
                                                "help": "The functions affected by this option are: longjmp and setjmp.\nPutting these function in IRAM will allow them to be called when flash cache is disabled\nbut it will also reduce the available size of free IRAM for the user application.",
                                                "id": "SPIRAM_CACHE_LIBJMP_IN_IRAM",
                                                "name": "SPIRAM_CACHE_LIBJMP_IN_IRAM",
                                                "range": null,
                                                "title": "Put libc's jump related functions in IRAM",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "SPIRAM_CACHE_WORKAROUND && ESP32_SPIRAM_SUPPORT",
                                                "help": "The functions affected by this option are: abs, div, labs, ldiv, quorem, fpclassify,\nand nan.\nPutting these function in IRAM will allow them to be called when flash cache is disabled\nbut it will also reduce the available size of free IRAM for the user application.",
                                                "id": "SPIRAM_CACHE_LIBMATH_IN_IRAM",
                                                "name": "SPIRAM_CACHE_LIBMATH_IN_IRAM",
                                                "range": null,
                                                "title": "Put libc's math related functions in IRAM",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "SPIRAM_CACHE_WORKAROUND && ESP32_SPIRAM_SUPPORT",
                                                "help": "The functions affected by this option are: utoa, itoa, atoi, atol, strtol, and strtoul.\nPutting these function in IRAM will allow them to be called when flash cache is disabled\nbut it will also reduce the available size of free IRAM for the user application.",
                                                "id": "SPIRAM_CACHE_LIBNUMPARSER_IN_IRAM",
                                                "name": "SPIRAM_CACHE_LIBNUMPARSER_IN_IRAM",
                                                "range": null,
                                                "title": "Put libc's number parsing related functions in IRAM",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "SPIRAM_CACHE_WORKAROUND && ESP32_SPIRAM_SUPPORT",
                                                "help": "The functions affected by this option are: wcrtomb, fvwrite, wbuf, wsetup, fputwc, wctomb_r,\nungetc, makebuf, fflush, refill, and sccl.\nPutting these function in IRAM will allow them to be called when flash cache is disabled\nbut it will also reduce the available size of free IRAM for the user application.",
                                                "id": "SPIRAM_CACHE_LIBIO_IN_IRAM",
                                                "name": "SPIRAM_CACHE_LIBIO_IN_IRAM",
                                                "range": null,
                                                "title": "Put libc's I/O related functions in IRAM",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "SPIRAM_CACHE_WORKAROUND && ESP32_SPIRAM_SUPPORT",
                                                "help": "The functions affected by this option are: asctime, asctime_r, ctime, ctime_r, lcltime, lcltime_r,\ngmtime, gmtime_r, strftime, mktime, tzset_r, tzset, time, gettzinfo, systimes, month_lengths,\ntimelocal, tzvars, tzlock, tzcalc_limits, and strptime.\nPutting these function in IRAM will allow them to be called when flash cache is disabled\nbut it will also reduce the available size of free IRAM for the user application.",
                                                "id": "SPIRAM_CACHE_LIBTIME_IN_IRAM",
                                                "name": "SPIRAM_CACHE_LIBTIME_IN_IRAM",
                                                "range": null,
                                                "title": "Put libc's time related functions in IRAM",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "SPIRAM_CACHE_WORKAROUND && ESP32_SPIRAM_SUPPORT",
                                                "help": "The functions affected by this option are: ctype_, toupper, tolower, toascii, strupr, bzero,\nisalnum, isalpha, isascii, isblank, iscntrl, isdigit, isgraph, islower, isprint, ispunct,\nisspace, and isupper.\nPutting these function in IRAM will allow them to be called when flash cache is disabled\nbut it will also reduce the available size of free IRAM for the user application.",
                                                "id": "SPIRAM_CACHE_LIBCHAR_IN_IRAM",
                                                "name": "SPIRAM_CACHE_LIBCHAR_IN_IRAM",
                                                "range": null,
                                                "title": "Put libc's characters related functions in IRAM",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "SPIRAM_CACHE_WORKAROUND && ESP32_SPIRAM_SUPPORT",
                                                "help": "The functions affected by this option are: memccpy, memchr memmove, and memrchr.\nPutting these function in IRAM will allow them to be called when flash cache is disabled\nbut it will also reduce the available size of free IRAM for the user application.",
                                                "id": "SPIRAM_CACHE_LIBMEM_IN_IRAM",
                                                "name": "SPIRAM_CACHE_LIBMEM_IN_IRAM",
                                                "range": null,
                                                "title": "Put libc's memory related functions in IRAM",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "SPIRAM_CACHE_WORKAROUND && ESP32_SPIRAM_SUPPORT",
                                                "help": "The functions affected by this option are: strcasecmp, strcasestr, strchr, strcoll,\nstrcpy, strcspn, strdup, strdup_r, strlcat, strlcpy, strlen, strlwr, strncasecmp,\nstrncat, strncmp, strncpy, strndup, strndup_r, strrchr, strsep, strspn, strstr,\nstrtok_r, and strupr.\nPutting these function in IRAM will allow them to be called when flash cache is disabled\nbut it will also reduce the available size of free IRAM for the user application.",
                                                "id": "SPIRAM_CACHE_LIBSTR_IN_IRAM",
                                                "name": "SPIRAM_CACHE_LIBSTR_IN_IRAM",
                                                "range": null,
                                                "title": "Put libc's string related functions in IRAM",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "SPIRAM_CACHE_WORKAROUND && ESP32_SPIRAM_SUPPORT",
                                                "help": "The functions affected by this option are: srand, rand, and rand_r.\nPutting these function in IRAM will allow them to be called when flash cache is disabled\nbut it will also reduce the available size of free IRAM for the user application.",
                                                "id": "SPIRAM_CACHE_LIBRAND_IN_IRAM",
                                                "name": "SPIRAM_CACHE_LIBRAND_IN_IRAM",
                                                "range": null,
                                                "title": "Put libc's random related functions in IRAM",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "SPIRAM_CACHE_WORKAROUND && ESP32_SPIRAM_SUPPORT",
                                                "help": "The functions affected by this option are: environ, envlock, and getenv_r.\nPutting these function in IRAM will allow them to be called when flash cache is disabled\nbut it will also reduce the available size of free IRAM for the user application.",
                                                "id": "SPIRAM_CACHE_LIBENV_IN_IRAM",
                                                "name": "SPIRAM_CACHE_LIBENV_IN_IRAM",
                                                "range": null,
                                                "title": "Put libc's environment related functions in IRAM",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "SPIRAM_CACHE_WORKAROUND && ESP32_SPIRAM_SUPPORT",
                                                "help": "The functions affected by this option are: lock, isatty, fclose, open, close, creat, read,\nrshift, sbrk, stdio, syssbrk, sysclose, sysopen, creat, sysread, syswrite, impure, fwalk,\nand findfp.\nPutting these function in IRAM will allow them to be called when flash cache is disabled\nbut it will also reduce the available size of free IRAM for the user application.",
                                                "id": "SPIRAM_CACHE_LIBFILE_IN_IRAM",
                                                "name": "SPIRAM_CACHE_LIBFILE_IN_IRAM",
                                                "range": null,
                                                "title": "Put libc's file related functions in IRAM",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "SPIRAM_CACHE_WORKAROUND && ESP32_SPIRAM_SUPPORT",
                                                "help": "The functions affected by this option are: raise and system\nPutting these function in IRAM will allow them to be called when flash cache is disabled\nbut it will also reduce the available size of free IRAM for the user application.",
                                                "id": "SPIRAM_CACHE_LIBMISC_IN_IRAM",
                                                "name": "SPIRAM_CACHE_LIBMISC_IN_IRAM",
                                                "range": null,
                                                "title": "Put libc's miscellaneous functions in IRAM, see help",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "ESP32_SPIRAM_SUPPORT",
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-spiram-workaround-libraries-placement",
                                        "title": "SPIRAM workaround libraries placement",
                                        "type": "menu"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "SPIRAM_BANKSWITCH_ENABLE && ESP32_SPIRAM_SUPPORT",
                                                "help": "Select the amount of banks reserved for bank switching. Note that the amount of RAM allocatable with\nmalloc/esp_heap_alloc_caps will decrease by 32K for each page reserved here.\n\nNote that this reservation is only actually done if your program actually uses the himem API. Without\nany himem calls, the reservation is not done and the original amount of memory will be available\nto malloc/esp_heap_alloc_caps.",
                                                "id": "SPIRAM_BANKSWITCH_RESERVE",
                                                "name": "SPIRAM_BANKSWITCH_RESERVE",
                                                "range": null,
                                                "title": "Amount of 32K pages to reserve for bank switching",
                                                "type": "int"
                                            }
                                        ],
                                        "depends_on": "(SPIRAM_USE_MEMMAP || SPIRAM_USE_CAPS_ALLOC || SPIRAM_USE_MALLOC) && ESP32_SPIRAM_SUPPORT",
                                        "help": "The ESP32 only supports 4MiB of external RAM in its address space. The hardware does support larger\nmemories, but these have to be bank-switched in and out of this address space. Enabling this allows you\nto reserve some MMU pages for this, which allows the use of the esp_himem api to manage these banks.\n\n#Note that this is limited to 62 banks, as esp_spiram_writeback_cache needs some kind of mapping of\n#some banks below that mark to work. We cannot at this moment guarantee this to exist when himem is\n#enabled.\n\nIf spiram 2T mode is enabled, the size of 64Mbit psram will be changed as 32Mbit, so himem will be\nunusable.",
                                        "id": "SPIRAM_BANKSWITCH_ENABLE",
                                        "name": "SPIRAM_BANKSWITCH_ENABLE",
                                        "range": null,
                                        "title": "Enable bank switching for >4MiB external RAM",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "SPIRAM_USE_MALLOC && ESP32_SPIRAM_SUPPORT",
                                        "help": "Because some bits of the ESP32 code environment cannot be recompiled with the cache workaround,\nnormally tasks cannot be safely run with their stack residing in external memory; for this reason\nxTaskCreate (and related task creaton functions) always allocate stack in internal memory and\nxTaskCreateStatic will check if the memory passed to it is in internal memory. If you have a task that\nneeds a large amount of stack and does not call on ROM code in any way (no direct calls, but also no\nBluetooth/WiFi), you can try enable this to cause xTaskCreateStatic to allow tasks stack in external\nmemory.",
                                        "id": "SPIRAM_ALLOW_STACK_EXTERNAL_MEMORY",
                                        "name": "SPIRAM_ALLOW_STACK_EXTERNAL_MEMORY",
                                        "range": null,
                                        "title": "Allow external memory as an argument to xTaskCreateStatic",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice SPIRAM_OCCUPY_SPI_HOST>",
                                                "help": null,
                                                "id": "SPIRAM_OCCUPY_HSPI_HOST",
                                                "name": "SPIRAM_OCCUPY_HSPI_HOST",
                                                "range": null,
                                                "title": "HSPI host (SPI2)",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice SPIRAM_OCCUPY_SPI_HOST>",
                                                "help": null,
                                                "id": "SPIRAM_OCCUPY_VSPI_HOST",
                                                "name": "SPIRAM_OCCUPY_VSPI_HOST",
                                                "range": null,
                                                "title": "VSPI host (SPI3)",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice SPIRAM_OCCUPY_SPI_HOST>",
                                                "help": null,
                                                "id": "SPIRAM_OCCUPY_NO_HOST",
                                                "name": "SPIRAM_OCCUPY_NO_HOST",
                                                "range": null,
                                                "title": "Will not try to use any host, will abort if not able to use the PSRAM",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "SPIRAM_SPEED_80M && ESP32_SPIRAM_SUPPORT",
                                        "help": "When both flash and PSRAM is working under 80MHz, and the PSRAM is of type 32MBit, one of the HSPI/VSPI\nhost will be used to output the clock. Select which one to use here.",
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-spi-host-to-use-for-32mbit-psram",
                                        "name": "SPIRAM_OCCUPY_SPI_HOST",
                                        "title": "SPI host to use for 32MBit PSRAM",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "ESP32_SPIRAM_SUPPORT && ESP32_SPIRAM_SUPPORT",
                                                "help": "The PSRAM CLOCK IO can be any unused GPIO, user can config it based on hardware design. If user use\n1.8V flash and 1.8V psram, this value can only be one of 6, 7, 8, 9, 10, 11, 16, 17.",
                                                "id": "D0WD_PSRAM_CLK_IO",
                                                "name": "D0WD_PSRAM_CLK_IO",
                                                "range": null,
                                                "title": "PSRAM CLK IO number",
                                                "type": "int"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "ESP32_SPIRAM_SUPPORT && ESP32_SPIRAM_SUPPORT",
                                                "help": "The PSRAM CS IO can be any unused GPIO, user can config it based on hardware design. If user use\n1.8V flash and 1.8V psram, this value can only be one of 6, 7, 8, 9, 10, 11, 16, 17.",
                                                "id": "D0WD_PSRAM_CS_IO",
                                                "name": "D0WD_PSRAM_CS_IO",
                                                "range": null,
                                                "title": "PSRAM CS IO number",
                                                "type": "int"
                                            }
                                        ],
                                        "depends_on": "ESP32_SPIRAM_SUPPORT",
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-psram-clock-and-cs-io-for-esp32-dowd",
                                        "title": "PSRAM clock and cs IO for ESP32-DOWD",
                                        "type": "menu"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "ESP32_SPIRAM_SUPPORT && ESP32_SPIRAM_SUPPORT",
                                                "help": "User can config it based on hardware design. For ESP32-D2WD chip, the psram can only be 1.8V psram,\nso this value can only be one of 6, 7, 8, 9, 10, 11, 16, 17.",
                                                "id": "D2WD_PSRAM_CLK_IO",
                                                "name": "D2WD_PSRAM_CLK_IO",
                                                "range": null,
                                                "title": "PSRAM CLK IO number",
                                                "type": "int"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "ESP32_SPIRAM_SUPPORT && ESP32_SPIRAM_SUPPORT",
                                                "help": "User can config it based on hardware design. For ESP32-D2WD chip, the psram can only be 1.8V psram,\nso this value can only be one of 6, 7, 8, 9, 10, 11, 16, 17.",
                                                "id": "D2WD_PSRAM_CS_IO",
                                                "name": "D2WD_PSRAM_CS_IO",
                                                "range": null,
                                                "title": "PSRAM CS IO number",
                                                "type": "int"
                                            }
                                        ],
                                        "depends_on": "ESP32_SPIRAM_SUPPORT",
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-psram-clock-and-cs-io-for-esp32-d2wd",
                                        "title": "PSRAM clock and cs IO for ESP32-D2WD",
                                        "type": "menu"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "ESP32_SPIRAM_SUPPORT && ESP32_SPIRAM_SUPPORT",
                                                "help": "The PSRAM CS IO can be any unused GPIO, user can config it based on hardware design.\n\nFor ESP32-PICO chip, the psram share clock with flash, so user do not need to configure the clock\nIO.\nFor the reference hardware design, please refer to\nhttps://www.espressif.com/sites/default/files/documentation/esp32-pico-d4_datasheet_en.pdf",
                                                "id": "PICO_PSRAM_CS_IO",
                                                "name": "PICO_PSRAM_CS_IO",
                                                "range": null,
                                                "title": "PSRAM CS IO number",
                                                "type": "int"
                                            }
                                        ],
                                        "depends_on": "ESP32_SPIRAM_SUPPORT",
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-psram-clock-and-cs-io-for-esp32-pico",
                                        "title": "PSRAM clock and cs IO for ESP32-PICO",
                                        "type": "menu"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "IDF_TARGET_ESP32 && (ESPTOOLPY_FLASHMODE_DIO || ESPTOOLPY_FLASHMODE_DOUT) && ESP32_SPIRAM_SUPPORT",
                                        "help": "This setting is only used if the SPI flash pins have been overridden by setting the eFuses\nSPI_PAD_CONFIG_xxx, and the SPI flash mode is DIO or DOUT.\n\nWhen this is the case, the eFuse config only defines 3 of the 4 Quad I/O data pins. The WP pin (aka\nESP32 pin \"SD_DATA_3\" or SPI flash pin \"IO2\") is not specified in eFuse. The psram only has QPI\nmode, so a WP pin setting is necessary.\n\nIf this config item is set to N (default), the correct WP pin will be automatically used for any\nEspressif chip or module with integrated flash. If a custom setting is needed, set this config item\nto Y and specify the GPIO number connected to the WP pin.\n\nWhen flash mode is set to QIO or QOUT, the PSRAM WP pin will be set the same as the SPI Flash WP pin\nconfigured in the bootloader.",
                                        "id": "SPIRAM_CUSTOM_SPIWP_SD3_PIN",
                                        "name": "SPIRAM_CUSTOM_SPIWP_SD3_PIN",
                                        "range": null,
                                        "title": "Use custom SPI PSRAM WP(SD3) Pin when flash pins set in eFuse (read help)",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "IDF_TARGET_ESP32 && (ESPTOOLPY_FLASHMODE_DIO || ESPTOOLPY_FLASHMODE_DOUT) && ESP32_SPIRAM_SUPPORT",
                                        "help": "The option \"Use custom SPI PSRAM WP(SD3) pin\" must be set or this value is ignored\n\nIf burning a customized set of SPI flash pins in eFuse and using DIO or DOUT mode for flash, set this\nvalue to the GPIO number of the SPIRAM WP pin.",
                                        "id": "SPIRAM_SPIWP_SD3_PIN",
                                        "name": "SPIRAM_SPIWP_SD3_PIN",
                                        "range": null,
                                        "title": "Custom SPI PSRAM WP(SD3) Pin",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "ESP32_SPIRAM_SUPPORT && ESP32_SPIRAM_SUPPORT",
                                        "help": "Enable this option to fix single bit errors inside 64Mbit PSRAM.\n\nSome 64Mbit PSRAM chips have a hardware issue in the RAM which causes bit errors at multiple\nfixed bit positions.\n\nNote: If this option is enabled, the 64Mbit PSRAM chip will appear to be 32Mbit in size.\nApplications will not be affected unless the use the esp_himem APIs, which are not supported\nin 2T mode.",
                                        "id": "SPIRAM_2T_MODE",
                                        "name": "SPIRAM_2T_MODE",
                                        "range": null,
                                        "title": "Enable SPI PSRAM 2T mode",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "ESP32_SPIRAM_SUPPORT",
                                "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config",
                                "title": "SPI RAM config",
                                "type": "menu"
                            }
                        ],
                        "depends_on": null,
                        "help": "This enables support for an external SPI RAM chip, connected in parallel with the\nmain SPI flash chip.",
                        "id": "ESP32_SPIRAM_SUPPORT",
                        "name": "ESP32_SPIRAM_SUPPORT",
                        "range": null,
                        "title": "Support for external, SPI-connected RAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP32_MEMMAP_TRACEMEM",
                        "name": "ESP32_MEMMAP_TRACEMEM",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP32_MEMMAP_TRACEMEM_TWOBANKS",
                        "name": "ESP32_MEMMAP_TRACEMEM_TWOBANKS",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ESP32_TRAX && !FREERTOS_UNICORE",
                                "help": "The ESP32 contains a feature which allows you to trace the execution path the processor\nhas taken through the program. This is stored in a chunk of 32K (16K for single-processor)\nof memory that can't be used for general purposes anymore. Disable this if you do not know\nwhat this is.\n\n# Memory to reverse for trace, used in linker script",
                                "id": "ESP32_TRAX_TWOBANKS",
                                "name": "ESP32_TRAX_TWOBANKS",
                                "range": null,
                                "title": "Reserve memory for tracing both pro as well as app cpu execution",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "The ESP32 contains a feature which allows you to trace the execution path the processor\nhas taken through the program. This is stored in a chunk of 32K (16K for single-processor)\nof memory that can't be used for general purposes anymore. Disable this if you do not know\nwhat this is.",
                        "id": "ESP32_TRAX",
                        "name": "ESP32_TRAX",
                        "range": null,
                        "title": "Use TRAX tracing feature",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP32_TRACEMEM_RESERVE_DRAM",
                        "name": "ESP32_TRACEMEM_RESERVE_DRAM",
                        "range": null,
                        "title": null,
                        "type": "hex"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Bytes of memory to reserve for ULP coprocessor firmware & data.\n\nData is reserved at the beginning of RTC slow memory.",
                                "id": "ESP32_ULP_COPROC_RESERVE_MEM",
                                "name": "ESP32_ULP_COPROC_RESERVE_MEM",
                                "range": [
                                    0,
                                    0
                                ],
                                "title": "RTC slow memory reserved for coprocessor",
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "help": "Set to 'y' if you plan to load a firmware for the coprocessor.\n\nIf this option is enabled, further coprocessor configuration will appear in the Components menu.",
                        "id": "ESP32_ULP_COPROC_ENABLED",
                        "name": "ESP32_ULP_COPROC_ENABLED",
                        "range": null,
                        "title": "Enable Ultra Low Power (ULP) Coprocessor",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "The FreeRTOS panic and unhandled exception handers can detect a JTAG OCD debugger and\ninstead of panicking, have the debugger stop on the offending instruction.",
                        "id": "ESP32_DEBUG_OCDAWARE",
                        "name": "ESP32_DEBUG_OCDAWARE",
                        "range": null,
                        "title": "Make exception and panic handlers JTAG/OCD aware",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice ESP32_BROWNOUT_DET_LVL_SEL>",
                                        "help": null,
                                        "id": "ESP32_BROWNOUT_DET_LVL_SEL_0",
                                        "name": "ESP32_BROWNOUT_DET_LVL_SEL_0",
                                        "range": null,
                                        "title": "2.43V +/- 0.05",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice ESP32_BROWNOUT_DET_LVL_SEL>",
                                        "help": null,
                                        "id": "ESP32_BROWNOUT_DET_LVL_SEL_1",
                                        "name": "ESP32_BROWNOUT_DET_LVL_SEL_1",
                                        "range": null,
                                        "title": "2.48V +/- 0.05",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice ESP32_BROWNOUT_DET_LVL_SEL>",
                                        "help": null,
                                        "id": "ESP32_BROWNOUT_DET_LVL_SEL_2",
                                        "name": "ESP32_BROWNOUT_DET_LVL_SEL_2",
                                        "range": null,
                                        "title": "2.58V +/- 0.05",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice ESP32_BROWNOUT_DET_LVL_SEL>",
                                        "help": null,
                                        "id": "ESP32_BROWNOUT_DET_LVL_SEL_3",
                                        "name": "ESP32_BROWNOUT_DET_LVL_SEL_3",
                                        "range": null,
                                        "title": "2.62V +/- 0.05",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice ESP32_BROWNOUT_DET_LVL_SEL>",
                                        "help": null,
                                        "id": "ESP32_BROWNOUT_DET_LVL_SEL_4",
                                        "name": "ESP32_BROWNOUT_DET_LVL_SEL_4",
                                        "range": null,
                                        "title": "2.67V +/- 0.05",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice ESP32_BROWNOUT_DET_LVL_SEL>",
                                        "help": null,
                                        "id": "ESP32_BROWNOUT_DET_LVL_SEL_5",
                                        "name": "ESP32_BROWNOUT_DET_LVL_SEL_5",
                                        "range": null,
                                        "title": "2.70V +/- 0.05",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice ESP32_BROWNOUT_DET_LVL_SEL>",
                                        "help": null,
                                        "id": "ESP32_BROWNOUT_DET_LVL_SEL_6",
                                        "name": "ESP32_BROWNOUT_DET_LVL_SEL_6",
                                        "range": null,
                                        "title": "2.77V +/- 0.05",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice ESP32_BROWNOUT_DET_LVL_SEL>",
                                        "help": null,
                                        "id": "ESP32_BROWNOUT_DET_LVL_SEL_7",
                                        "name": "ESP32_BROWNOUT_DET_LVL_SEL_7",
                                        "range": null,
                                        "title": "2.80V +/- 0.05",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "ESP32_BROWNOUT_DET",
                                "help": "The brownout detector will reset the chip when the supply voltage is approximately\nbelow this level. Note that there may be some variation of brownout voltage level\nbetween each ESP32 chip.\n\n#The voltage levels here are estimates, more work needs to be done to figure out the exact voltages\n#of the brownout threshold levels.",
                                "id": "component-config-esp32-specific-hardware-brownout-detect-reset-brownout-voltage-level",
                                "name": "ESP32_BROWNOUT_DET_LVL_SEL",
                                "title": "Brownout voltage level",
                                "type": "choice"
                            }
                        ],
                        "depends_on": "!IDF_ENV_FPGA",
                        "help": "The ESP32 has a built-in brownout detector which can detect if the voltage is lower than\na specific value. If this happens, it will reset the chip in order to prevent unintended\nbehaviour.",
                        "id": "ESP32_BROWNOUT_DET",
                        "name": "ESP32_BROWNOUT_DET",
                        "range": null,
                        "title": "Hardware brownout detect & reset",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP32_BROWNOUT_DET_LVL",
                        "name": "ESP32_BROWNOUT_DET_LVL",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_TIME_SYSCALL>",
                                "help": null,
                                "id": "ESP32_TIME_SYSCALL_USE_RTC_FRC1",
                                "name": "ESP32_TIME_SYSCALL_USE_RTC_FRC1",
                                "range": null,
                                "title": "RTC and high-resolution timer",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_TIME_SYSCALL>",
                                "help": null,
                                "id": "ESP32_TIME_SYSCALL_USE_RTC",
                                "name": "ESP32_TIME_SYSCALL_USE_RTC",
                                "range": null,
                                "title": "RTC",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_TIME_SYSCALL>",
                                "help": null,
                                "id": "ESP32_TIME_SYSCALL_USE_FRC1",
                                "name": "ESP32_TIME_SYSCALL_USE_FRC1",
                                "range": null,
                                "title": "High-resolution timer",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_TIME_SYSCALL>",
                                "help": null,
                                "id": "ESP32_TIME_SYSCALL_USE_NONE",
                                "name": "ESP32_TIME_SYSCALL_USE_NONE",
                                "range": null,
                                "title": "None",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "This setting defines which hardware timers are used to\nimplement 'gettimeofday' and 'time' functions in C library.\n\n- If both high-resolution and RTC timers are used, timekeeping will\n  continue in deep sleep. Time will be reported at 1 microsecond\n  resolution. This is the default, and the recommended option.\n- If only high-resolution timer is used, gettimeofday will\n  provide time at microsecond resolution.\n  Time will not be preserved when going into deep sleep mode.\n- If only RTC timer is used, timekeeping will continue in\n  deep sleep, but time will be measured at 6.(6) microsecond\n  resolution. Also the gettimeofday function itself may take\n  longer to run.\n- If no timers are used, gettimeofday and time functions\n  return -1 and set errno to ENOSYS.\n- When RTC is used for timekeeping, two RTC_STORE registers are\n  used to keep time in deep sleep mode.",
                        "id": "component-config-esp32-specific-timers-used-for-gettimeofday-function",
                        "name": "ESP32_TIME_SYSCALL",
                        "title": "Timers used for gettimeofday function",
                        "type": "choice"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_RTC_CLK_SRC>",
                                "help": null,
                                "id": "ESP32_RTC_CLK_SRC_INT_RC",
                                "name": "ESP32_RTC_CLK_SRC_INT_RC",
                                "range": null,
                                "title": "Internal 150kHz RC oscillator",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_RTC_CLK_SRC>",
                                "help": null,
                                "id": "ESP32_RTC_CLK_SRC_EXT_CRYS",
                                "name": "ESP32_RTC_CLK_SRC_EXT_CRYS",
                                "range": null,
                                "title": "External 32kHz crystal",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_RTC_CLK_SRC>",
                                "help": null,
                                "id": "ESP32_RTC_CLK_SRC_EXT_OSC",
                                "name": "ESP32_RTC_CLK_SRC_EXT_OSC",
                                "range": null,
                                "title": "External 32kHz oscillator at 32K_XN pin",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_RTC_CLK_SRC>",
                                "help": null,
                                "id": "ESP32_RTC_CLK_SRC_INT_8MD256",
                                "name": "ESP32_RTC_CLK_SRC_INT_8MD256",
                                "range": null,
                                "title": "Internal 8.5MHz oscillator, divided by 256 (~33kHz)",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Choose which clock is used as RTC clock source.\n\n- \"Internal 150kHz oscillator\" option provides lowest deep sleep current\n  consumption, and does not require extra external components. However\n  frequency stability with respect to temperature is poor, so time may\n  drift in deep/light sleep modes.\n- \"External 32kHz crystal\" provides better frequency stability, at the\n  expense of slightly higher (1uA) deep sleep current consumption.\n- \"External 32kHz oscillator\" allows using 32kHz clock generated by an\n  external circuit. In this case, external clock signal must be connected\n  to 32K_XN pin. Amplitude should be <1.2V in case of sine wave signal,\n  and <1V in case of square wave signal. Common mode voltage should be\n  0.1 < Vcm < 0.5Vamp, where Vamp is the signal amplitude.\n  Additionally, 1nF capacitor must be connected between 32K_XP pin and\n  ground. 32K_XP pin can not be used as a GPIO in this case.\n- \"Internal 8.5MHz oscillator divided by 256\" option results in higher\n  deep sleep current (by 5uA) but has better frequency stability than\n  the internal 150kHz oscillator. It does not require external components.",
                        "id": "component-config-esp32-specific-rtc-clock-source",
                        "name": "ESP32_RTC_CLK_SRC",
                        "title": "RTC clock source",
                        "type": "choice"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_RTC_EXT_CRYST_ADDIT_CURRENT_METHOD>",
                                "help": null,
                                "id": "ESP32_RTC_EXT_CRYST_ADDIT_CURRENT_NONE",
                                "name": "ESP32_RTC_EXT_CRYST_ADDIT_CURRENT_NONE",
                                "range": null,
                                "title": "None",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_RTC_EXT_CRYST_ADDIT_CURRENT_METHOD>",
                                "help": null,
                                "id": "ESP32_RTC_EXT_CRYST_ADDIT_CURRENT",
                                "name": "ESP32_RTC_EXT_CRYST_ADDIT_CURRENT",
                                "range": null,
                                "title": "Method 1",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_RTC_EXT_CRYST_ADDIT_CURRENT_METHOD>",
                                "help": null,
                                "id": "ESP32_RTC_EXT_CRYST_ADDIT_CURRENT_V2",
                                "name": "ESP32_RTC_EXT_CRYST_ADDIT_CURRENT_V2",
                                "range": null,
                                "title": "Method 2",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "ESP32_RTC_CLK_SRC_EXT_CRYS && ESP32_REV_MIN <= 1",
                        "help": "With some 32kHz crystal configurations, the X32N and X32P pins may not have enough\ndrive strength to keep the crystal oscillating. Choose the method to provide\nadditional current from touchpad 9 to the external 32kHz crystal. Note that\nthe deep sleep current is slightly high (4-5uA) and the touchpad and the\nwakeup sources of both touchpad and ULP are not available in method 1 and method 2.\n\nThis problem is fixed in ESP32 ECO 3, so this workaround is not needed. Setting the\nproject configuration to minimum revision ECO3 will disable this option, , allow\nall wakeup sources, and save some code size.\n\n- \"None\" option will not provide additional current to external crystal\n- \"Method 1\" option can't ensure 100% to solve the external 32k crystal start failed\n  issue, but the touchpad can work in this method.\n- \"Method 2\" option can solve the external 32k issue, but the touchpad can't work\n  in this method.",
                        "id": "component-config-esp32-specific-additional-current-for-external-32khz-crystal",
                        "name": "ESP32_RTC_EXT_CRYST_ADDIT_CURRENT_METHOD",
                        "title": "Additional current for external 32kHz crystal",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "When the startup code initializes RTC_SLOW_CLK, it can perform\ncalibration by comparing the RTC_SLOW_CLK frequency with main XTAL\nfrequency. This option sets the number of RTC_SLOW_CLK cycles measured\nby the calibration routine. Higher numbers increase calibration\nprecision, which may be important for applications which spend a lot of\ntime in deep sleep. Lower numbers reduce startup time.\n\nWhen this option is set to 0, clock calibration will not be performed at\nstartup, and approximate clock frequencies will be assumed:\n\n- 150000 Hz if internal RC oscillator is used as clock source. For this use value 1024.\n- 32768 Hz if the 32k crystal oscillator is used. For this use value 3000 or more.\n  In case more value will help improve the definition of the launch of the crystal.\n  If the crystal could not start, it will be switched to internal RC.",
                        "id": "ESP32_RTC_CLK_CAL_CYCLES",
                        "name": "ESP32_RTC_CLK_CAL_CYCLES",
                        "range": [
                            0,
                            32766
                        ],
                        "title": "Number of cycles for RTC_SLOW_CLK calibration",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP32_RTC_CLK_SRC_EXT_CRYS",
                        "help": "Number of attempts to repeat 32k XTAL calibration\nbefore giving up and switching to the internal RC.\nIncrease this option if the 32k crystal oscillator\ndoes not start and switches to internal RC.",
                        "id": "ESP32_RTC_XTAL_CAL_RETRY",
                        "name": "ESP32_RTC_XTAL_CAL_RETRY",
                        "range": null,
                        "title": "Number of attempts to repeat 32k XTAL calibration",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "When ESP32 exits deep sleep, the CPU and the flash chip are powered on\nat the same time. CPU will run deep sleep stub first, and then\nproceed to load code from flash. Some flash chips need sufficient\ntime to pass between power on and first read operation. By default,\nwithout any extra delay, this time is approximately 900us, although\nsome flash chip types need more than that.\n\nBy default extra delay is set to 2000us. When optimizing startup time\nfor applications which require it, this value may be reduced.\n\nIf you are seeing \"flash read err, 1000\" message printed to the\nconsole after deep sleep reset, try increasing this value.",
                        "id": "ESP32_DEEP_SLEEP_WAKEUP_DELAY",
                        "name": "ESP32_DEEP_SLEEP_WAKEUP_DELAY",
                        "range": [
                            0,
                            5000
                        ],
                        "title": "Extra delay in deep sleep wake stub (in us)",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_XTAL_FREQ_SEL>",
                                "help": null,
                                "id": "ESP32_XTAL_FREQ_40",
                                "name": "ESP32_XTAL_FREQ_40",
                                "range": null,
                                "title": "40 MHz",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_XTAL_FREQ_SEL>",
                                "help": null,
                                "id": "ESP32_XTAL_FREQ_26",
                                "name": "ESP32_XTAL_FREQ_26",
                                "range": null,
                                "title": "26 MHz",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_XTAL_FREQ_SEL>",
                                "help": null,
                                "id": "ESP32_XTAL_FREQ_AUTO",
                                "name": "ESP32_XTAL_FREQ_AUTO",
                                "range": null,
                                "title": "Autodetect",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "ESP32 currently supports the following XTAL frequencies:\n\n- 26 MHz\n- 40 MHz\n\nStartup code can automatically estimate XTAL frequency. This feature\nuses the internal 8MHz oscillator as a reference. Because the internal\noscillator frequency is temperature dependent, it is not recommended\nto use automatic XTAL frequency detection in applications which need\nto work at high ambient temperatures and use high-temperature\nqualified chips and modules.",
                        "id": "component-config-esp32-specific-main-xtal-frequency",
                        "name": "ESP32_XTAL_FREQ_SEL",
                        "title": "Main XTAL frequency",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP32_XTAL_FREQ",
                        "name": "ESP32_XTAL_FREQ",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "If set, the first time the app boots it will disable the BASIC ROM Console\npermanently (by burning an eFuse).\n\nOtherwise, the BASIC ROM Console starts on reset if no valid bootloader is\nread from the flash.\n\n(Enabling secure boot also disables the BASIC ROM Console by default.)",
                        "id": "ESP32_DISABLE_BASIC_ROM_CONSOLE",
                        "name": "ESP32_DISABLE_BASIC_ROM_CONSOLE",
                        "range": null,
                        "title": "Permanently disable BASIC ROM Console",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!BT_ENABLED",
                        "help": "If enabled, this disables the linking of binary libraries in the application build. Note\nthat after enabling this Wi-Fi/Bluetooth will not work.",
                        "id": "ESP32_NO_BLOBS",
                        "name": "ESP32_NO_BLOBS",
                        "range": null,
                        "title": "No Binary Blobs",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Bootloaders before ESP-IDF v2.1 did less initialisation of the\nsystem clock. This setting needs to be enabled to build an app\nwhich can be booted by these older bootloaders.\n\nIf this setting is enabled, the app can be booted by any bootloader\nfrom IDF v1.0 up to the current version.\n\nIf this setting is disabled, the app can only be booted by bootloaders\nfrom IDF v2.1 or newer.\n\nEnabling this setting adds approximately 1KB to the app's IRAM usage.",
                        "id": "ESP32_COMPATIBLE_PRE_V2_1_BOOTLOADERS",
                        "name": "ESP32_COMPATIBLE_PRE_V2_1_BOOTLOADERS",
                        "range": null,
                        "title": "App compatible with bootloaders before ESP-IDF v2.1",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Partition tables before ESP-IDF V3.1 do not contain an MD5 checksum\nfield, and the bootloader before ESP-IDF v3.1 cannot read a partition\ntable that contains an MD5 checksum field.\n\nEnable this option only if your app needs to boot on a bootloader and/or\npartition table that was generated from a version *before* ESP-IDF v3.1.\n\nIf this option and Flash Encryption are enabled at the same time, and any\ndata partitions in the partition table are marked Encrypted, then the\npartition encrypted flag should be manually verified in the app before accessing\nthe partition (see CVE-2021-27926).",
                        "id": "ESP32_COMPATIBLE_PRE_V3_1_BOOTLOADERS",
                        "name": "ESP32_COMPATIBLE_PRE_V3_1_BOOTLOADERS",
                        "range": null,
                        "title": "App compatible with bootloader and partition table before ESP-IDF v3.1",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP32_APP_INIT_CLK",
                        "name": "ESP32_APP_INIT_CLK",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "FREERTOS_UNICORE",
                        "help": "This option allows to place .rtc_data and .rtc_rodata sections into\nRTC fast memory segment to free the slow memory region for ULP programs.\nThis option depends on the CONFIG_FREERTOS_UNICORE option because RTC fast memory\ncan be accessed only by PRO_CPU core.",
                        "id": "ESP32_RTCDATA_IN_FAST_MEM",
                        "name": "ESP32_RTCDATA_IN_FAST_MEM",
                        "range": null,
                        "title": "Place RTC_DATA_ATTR and RTC_RODATA_ATTR variables into RTC fast memory segment",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ESP32_USE_FIXED_STATIC_RAM_SIZE",
                                "help": "RAM size dedicated for static variables (.data & .bss sections).\nPlease note that the actual length will be reduced by BTDM_RESERVE_DRAM if Bluetooth\ncontroller is enabled.",
                                "id": "ESP32_FIXED_STATIC_RAM_SIZE",
                                "name": "ESP32_FIXED_STATIC_RAM_SIZE",
                                "range": null,
                                "title": "Fixed Static RAM size",
                                "type": "hex"
                            }
                        ],
                        "depends_on": null,
                        "help": "If this option is disabled, the DRAM part of the heap starts right after the .bss section,\nwithin the dram0_0 region. As a result, adding or removing some static variables\nwill change the available heap size.\n\nIf this option is enabled, the DRAM part of the heap starts right after the dram0_0 region,\nwhere its length is set with ESP32_FIXED_STATIC_RAM_SIZE",
                        "id": "ESP32_USE_FIXED_STATIC_RAM_SIZE",
                        "name": "ESP32_USE_FIXED_STATIC_RAM_SIZE",
                        "range": null,
                        "title": "Use fixed static RAM size",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "To prevent interrupting DPORT workarounds,\nneed to disable interrupt with a maximum used level in the system.",
                        "id": "ESP32_DPORT_DIS_INTERRUPT_LVL",
                        "name": "ESP32_DPORT_DIS_INTERRUPT_LVL",
                        "range": null,
                        "title": "Disable the interrupt level for the DPORT workarounds",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "FREERTOS_UNICORE",
                        "help": "If enabled, application can use IRAM as byte accessible region for storing data\n(Note: IRAM region cannot be used as task stack)\n\nThis is possible due to handling of exceptions `LoadStoreError (3)` and `LoadStoreAlignmentError (9)`\nEach unaligned read/write access will incur a penalty of maximum of 167 CPU cycles.",
                        "id": "ESP32_IRAM_AS_8BIT_ACCESSIBLE_MEMORY",
                        "name": "ESP32_IRAM_AS_8BIT_ACCESSIBLE_MEMORY",
                        "range": null,
                        "title": "Enable IRAM as 8 bit accessible memory",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-esp32-specific",
                "title": "ESP32-specific",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Functions esp_err_to_name() and esp_err_to_name_r() return string representations of error codes from a\npre-generated lookup table. This option can be used to turn off the use of the look-up table in order to\nsave memory but this comes at the price of sacrificing distinguishable (meaningful) output string\nrepresentations.",
                        "id": "ESP_ERR_TO_NAME_LOOKUP",
                        "name": "ESP_ERR_TO_NAME_LOOKUP",
                        "range": null,
                        "title": "Enable lookup of error code strings",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_ALLOW_BSS_SEG_EXTERNAL_MEMORY",
                        "name": "ESP_ALLOW_BSS_SEG_EXTERNAL_MEMORY",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-common-esp-related",
                "title": "Common ESP-related",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ETH_ENABLED",
                        "name": "ETH_ENABLED",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice ETH_PHY_INTERFACE>",
                                        "help": null,
                                        "id": "ETH_PHY_INTERFACE_RMII",
                                        "name": "ETH_PHY_INTERFACE_RMII",
                                        "range": null,
                                        "title": "Reduced Media Independent Interface (RMII)",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "ETH_USE_ESP32_EMAC",
                                "help": "Select the communication interface between MAC and PHY chip.",
                                "id": "component-config-ethernet-support-esp32-internal-emac-controller-phy-interface",
                                "name": "ETH_PHY_INTERFACE",
                                "title": "PHY interface",
                                "type": "choice"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice ETH_RMII_CLK_MODE>",
                                        "help": "MAC will get RMII clock from outside.\nNote that ESP32 only supports GPIO0 to input the RMII clock.",
                                        "id": "ETH_RMII_CLK_INPUT",
                                        "name": "ETH_RMII_CLK_INPUT",
                                        "range": null,
                                        "title": "Input RMII clock from external",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice ETH_RMII_CLK_MODE>",
                                        "help": "ESP32 can generate RMII clock by internal APLL.\nThis clock can be routed to the external PHY device.\nESP32 supports to route the RMII clock to GPIO0/16/17.",
                                        "id": "ETH_RMII_CLK_OUTPUT",
                                        "name": "ETH_RMII_CLK_OUTPUT",
                                        "range": null,
                                        "title": "Output RMII clock from internal",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "ETH_PHY_INTERFACE_RMII && ETH_USE_ESP32_EMAC",
                                "help": "Select external or internal RMII clock.",
                                "id": "component-config-ethernet-support-esp32-internal-emac-controller-rmii-clock-mode",
                                "name": "ETH_RMII_CLK_MODE",
                                "title": "RMII clock mode",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": "ETH_RMII_CLK_INPUT && ETH_USE_ESP32_EMAC",
                                "help": "ESP32 only supports GPIO0 to input the RMII clock.",
                                "id": "ETH_RMII_CLK_IN_GPIO",
                                "name": "ETH_RMII_CLK_IN_GPIO",
                                "range": null,
                                "title": null,
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "ETH_RMII_CLK_OUTPUT && ETH_USE_ESP32_EMAC",
                                "help": "GPIO0 can be set to output a pre-divided PLL clock (test only!).\nEnabling this option will configure GPIO0 to output a 50MHz clock.\nIn fact this clock doesn't have directly relationship with EMAC peripheral.\nSometimes this clock won't work well with your PHY chip. You might need to\nadd some extra devices after GPIO0 (e.g. inverter).\nNote that outputting RMII clock on GPIO0 is an experimental practice.\nIf you want the Ethernet to work with WiFi, don't select GPIO0 output mode for stability.",
                                "id": "ETH_RMII_CLK_OUTPUT_GPIO0",
                                "name": "ETH_RMII_CLK_OUTPUT_GPIO0",
                                "range": null,
                                "title": "Output RMII clock from GPIO0 (Experimental!)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!ETH_RMII_CLK_OUTPUT_GPIO0 && ETH_RMII_CLK_OUTPUT && ETH_USE_ESP32_EMAC",
                                "help": "Set the GPIO number to output RMII Clock.",
                                "id": "ETH_RMII_CLK_OUT_GPIO",
                                "name": "ETH_RMII_CLK_OUT_GPIO",
                                "range": null,
                                "title": "RMII clock GPIO number",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "ETH_USE_ESP32_EMAC",
                                "help": "Set the size of each buffer used by Ethernet MAC DMA.",
                                "id": "ETH_DMA_BUFFER_SIZE",
                                "name": "ETH_DMA_BUFFER_SIZE",
                                "range": null,
                                "title": "Ethernet DMA buffer size (Byte)",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "ETH_USE_ESP32_EMAC",
                                "help": "Number of DMA receive buffers. Each buffer's size is ETH_DMA_BUFFER_SIZE.\nLarger number of buffers could increase throughput somehow.",
                                "id": "ETH_DMA_RX_BUFFER_NUM",
                                "name": "ETH_DMA_RX_BUFFER_NUM",
                                "range": null,
                                "title": "Amount of Ethernet DMA Rx buffers",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "ETH_USE_ESP32_EMAC",
                                "help": "Number of DMA transmit buffers. Each buffer's size is ETH_DMA_BUFFER_SIZE.\nLarger number of buffers could increase throughput somehow.",
                                "id": "ETH_DMA_TX_BUFFER_NUM",
                                "name": "ETH_DMA_TX_BUFFER_NUM",
                                "range": null,
                                "title": "Amount of Ethernet DMA Tx buffers",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "ETH_DMA_RX_BUFFER_NUM > 15 && ETH_USE_ESP32_EMAC",
                                "help": "Ethernet MAC engine on ESP32 doesn't feature a flow control logic.\nThe MAC driver can perform a software flow control if you enable this option.\nNote that, if the RX buffer number is small, enabling software flow control will\ncause obvious performance loss.",
                                "id": "ETH_SOFT_FLOW_CONTROL",
                                "name": "ETH_SOFT_FLOW_CONTROL",
                                "range": null,
                                "title": "Enable software flow control",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "IDF_TARGET_ESP32",
                        "help": "ESP32 integrates a 10/100M Ethernet MAC controller.",
                        "id": "ETH_USE_ESP32_EMAC",
                        "is_menuconfig": true,
                        "name": "ETH_USE_ESP32_EMAC",
                        "range": null,
                        "title": "Support ESP32 internal EMAC controller",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ETH_USE_SPI_ETHERNET",
                                "help": "DM9051 is a fast Ethernet controller with an SPI interface.\nIt's also integrated with a 10/100M PHY and MAC.\nSelect this to enable DM9051 driver.",
                                "id": "ETH_SPI_ETHERNET_DM9051",
                                "name": "ETH_SPI_ETHERNET_DM9051",
                                "range": null,
                                "title": "Use DM9051",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "ETH_USE_SPI_ETHERNET",
                                "help": "W5500 is a HW TCP/IP embedded Ethernet controller.\nTCP/IP stack, 10/100 Ethernet MAC and PHY are embedded in a single chip.\nHowever the driver in ESP-IDF only enables the RAW MAC mode,\nmaking it compatible with the software TCP/IP stack.\nSay yes to enable W5500 driver.",
                                "id": "ETH_SPI_ETHERNET_W5500",
                                "name": "ETH_SPI_ETHERNET_W5500",
                                "range": null,
                                "title": "Use W5500 (MAC RAW)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "ETH_USE_SPI_ETHERNET",
                                "help": "The KSZ8851SNL is a single-chip Fast Ethernet controller consisting of\na 10/100 physical layer transceiver (PHY), a MAC, and a Serial Peripheral Interface (SPI).\nSelect this to enable KSZ8851SNL driver.",
                                "id": "ETH_SPI_ETHERNET_KSZ8851SNL",
                                "name": "ETH_SPI_ETHERNET_KSZ8851SNL",
                                "range": null,
                                "title": "Use KSZ8851SNL",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "ESP-IDF can also support some SPI-Ethernet modules.",
                        "id": "ETH_USE_SPI_ETHERNET",
                        "is_menuconfig": true,
                        "name": "ETH_USE_SPI_ETHERNET",
                        "range": null,
                        "title": "Support SPI to Ethernet Module",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ETH_USE_OPENETH",
                                "help": "Number of DMA receive buffers, each buffer is 1600 bytes.",
                                "id": "ETH_OPENETH_DMA_RX_BUFFER_NUM",
                                "name": "ETH_OPENETH_DMA_RX_BUFFER_NUM",
                                "range": null,
                                "title": "Number of Ethernet DMA Rx buffers",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "ETH_USE_OPENETH",
                                "help": "Number of DMA transmit buffers, each buffer is 1600 bytes.",
                                "id": "ETH_OPENETH_DMA_TX_BUFFER_NUM",
                                "name": "ETH_OPENETH_DMA_TX_BUFFER_NUM",
                                "range": null,
                                "title": "Number of Ethernet DMA Tx buffers",
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "help": "OpenCores Ethernet MAC driver can be used when an ESP-IDF application\nis executed in QEMU. This driver is not supported when running on a\nreal chip.",
                        "id": "ETH_USE_OPENETH",
                        "is_menuconfig": true,
                        "name": "ETH_USE_OPENETH",
                        "range": null,
                        "title": "Support OpenCores Ethernet MAC (for use with QEMU)",
                        "type": "menu"
                    }
                ],
                "depends_on": null,
                "id": "component-config-ethernet",
                "title": "Ethernet",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enables collections of statistics in the event loop library such as the number of events posted\nto/recieved by an event loop, number of callbacks involved, number of events dropped to to a full event\nloop queue, run time of event handlers, and number of times/run time of each event handler.",
                        "id": "ESP_EVENT_LOOP_PROFILING",
                        "name": "ESP_EVENT_LOOP_PROFILING",
                        "range": null,
                        "title": "Enable event loop profiling",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ESP_EVENT_POST_FROM_ISR",
                                "help": "Enable posting events from interrupt handlers placed in IRAM. Enabling this option places API functions\nesp_event_post and esp_event_post_to in IRAM.",
                                "id": "ESP_EVENT_POST_FROM_IRAM_ISR",
                                "name": "ESP_EVENT_POST_FROM_IRAM_ISR",
                                "range": null,
                                "title": "Support posting events from ISRs placed in IRAM",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enable posting events from interrupt handlers.",
                        "id": "ESP_EVENT_POST_FROM_ISR",
                        "name": "ESP_EVENT_POST_FROM_ISR",
                        "range": null,
                        "title": "Support posting events from ISRs",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-event-loop-library",
                "title": "Event Loop Library",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_GDBSTUB_ENABLED",
                        "name": "ESP_GDBSTUB_ENABLED",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ESP_GDBSTUB_SUPPORT_TASKS",
                                "help": "Set the number of tasks which GDB Stub will support.",
                                "id": "ESP_GDBSTUB_MAX_TASKS",
                                "name": "ESP_GDBSTUB_MAX_TASKS",
                                "range": null,
                                "title": "Maximum number of tasks supported by GDB Stub",
                                "type": "int"
                            }
                        ],
                        "depends_on": "ESP_GDBSTUB_ENABLED",
                        "help": "If enabled, GDBStub can supply the list of FreeRTOS tasks to GDB.\nThread list can be queried from GDB using 'info threads' command.\nNote that if GDB task lists were corrupted, this feature may not work.\nIf GDBStub fails, try disabling this feature.",
                        "id": "ESP_GDBSTUB_SUPPORT_TASKS",
                        "name": "ESP_GDBSTUB_SUPPORT_TASKS",
                        "range": null,
                        "title": "Enable listing FreeRTOS tasks through GDB Stub",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-gdb-stub",
                "title": "GDB Stub",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_MAC_ADDR_UNIVERSE_WIFI_STA",
                                "name": "ESP_MAC_ADDR_UNIVERSE_WIFI_STA",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_MAC_ADDR_UNIVERSE_WIFI_AP",
                                "name": "ESP_MAC_ADDR_UNIVERSE_WIFI_AP",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_MAC_ADDR_UNIVERSE_BT",
                                "name": "ESP_MAC_ADDR_UNIVERSE_BT",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_MAC_ADDR_UNIVERSE_ETH",
                                "name": "ESP_MAC_ADDR_UNIVERSE_ETH",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice ESP32_UNIVERSAL_MAC_ADDRESSES>",
                                        "help": null,
                                        "id": "ESP32_UNIVERSAL_MAC_ADDRESSES_TWO",
                                        "name": "ESP32_UNIVERSAL_MAC_ADDRESSES_TWO",
                                        "range": null,
                                        "title": "Two",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice ESP32_UNIVERSAL_MAC_ADDRESSES>",
                                        "help": null,
                                        "id": "ESP32_UNIVERSAL_MAC_ADDRESSES_FOUR",
                                        "name": "ESP32_UNIVERSAL_MAC_ADDRESSES_FOUR",
                                        "range": null,
                                        "title": "Four",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "help": "Configure the number of universally administered (by IEEE) MAC addresses.\nDuring initialization, MAC addresses for each network interface are generated or derived from a\nsingle base MAC address.\nIf the number of universal MAC addresses is four, all four interfaces (WiFi station, WiFi softap,\nBluetooth and Ethernet) receive a universally administered MAC address. These are generated\nsequentially by adding 0, 1, 2 and 3 (respectively) to the final octet of the base MAC address.\nIf the number of universal MAC addresses is two, only two interfaces (WiFi station and Bluetooth)\nreceive a universally administered MAC address. These are generated sequentially by adding 0\nand 1 (respectively) to the base MAC address. The remaining two interfaces (WiFi softap and Ethernet)\nreceive local MAC addresses. These are derived from the universal WiFi station and Bluetooth MAC\naddresses, respectively.\nWhen using the default (Espressif-assigned) base MAC address, either setting can be used. When using\na custom universal MAC address range, the correct setting will depend on the allocation of MAC\naddresses in this range (either 2 or 4 per device.)",
                                "id": "component-config-hardware-settings-mac-config-number-of-universally-administered-by-ieee-mac-address",
                                "name": "ESP32_UNIVERSAL_MAC_ADDRESSES",
                                "title": "Number of universally administered (by IEEE) MAC address",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP32_UNIVERSAL_MAC_ADDRESSES",
                                "name": "ESP32_UNIVERSAL_MAC_ADDRESSES",
                                "range": null,
                                "title": null,
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-hardware-settings-mac-config",
                        "title": "MAC Config",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "!SPIRAM",
                                "help": "If enabled, chip will try to power down flash as part of esp_light_sleep_start(), which costs\nmore time when chip wakes up. Can only be enabled if there is no SPIRAM configured.\nThis option will in fact consider VDD_SDIO auto power value (ESP_PD_OPTION_AUTO) as OFF. Also, it is\npossible to force a power domain to stay ON during light sleep by using esp_sleep_pd_config()\nfunction.",
                                "id": "ESP_SLEEP_POWER_DOWN_FLASH",
                                "name": "ESP_SLEEP_POWER_DOWN_FLASH",
                                "range": null,
                                "title": "Power down flash in light sleep when there is no SPIRAM",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_SLEEP_RTC_BUS_ISO_WORKAROUND",
                                "name": "ESP_SLEEP_RTC_BUS_ISO_WORKAROUND",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "esp32c3 and esp32s3 will reset at wake-up if GPIO is received a small electrostatic\npulse during light sleep, with specific condition\n\n- GPIO needs to be configured as input-mode only\n- The pin receives a small electrostatic pulse, and reset occurs when the pulse\n  voltage is higher than 6 V\n\nFor GPIO set to input mode only, it is not a good practice to leave it open/floating,\nThe hardware design needs to controlled it with determined supply or ground voltage\nis necessary.\n\nThis option provides a software workaround for this issue. Configure to isolate all\nGPIO pins in sleep state.",
                                "id": "ESP_SLEEP_GPIO_RESET_WORKAROUND",
                                "name": "ESP_SLEEP_GPIO_RESET_WORKAROUND",
                                "range": null,
                                "title": "light sleep GPIO reset workaround",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SPIRAM",
                                "help": "When the CS pin of SPIRAM is not pulled up, the sleep current will\nincrease during light sleep. If the CS pin of SPIRAM has an external\npull-up, you do not need to select this option, otherwise, you\nshould enable this option.",
                                "id": "ESP_SLEEP_PSRAM_LEAKAGE_WORKAROUND",
                                "name": "ESP_SLEEP_PSRAM_LEAKAGE_WORKAROUND",
                                "range": null,
                                "title": "PSRAM leakage current workaround in light sleep",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "When the CS pin of Flash is not pulled up, the sleep current will\nincrease during light sleep. If the CS pin of Flash has an external\npull-up, you do not need to select this option, otherwise, you\nshould enable this option.",
                                "id": "ESP_SLEEP_FLASH_LEAKAGE_WORKAROUND",
                                "name": "ESP_SLEEP_FLASH_LEAKAGE_WORKAROUND",
                                "range": null,
                                "title": "Flash leakage current workaround in light sleep",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-hardware-settings-sleep-config",
                        "title": "Sleep Config",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ESP_CONSOLE_USB_SERIAL_JTAG || ESP_CONSOLE_SECONDARY_USB_SERIAL_JTAG",
                                "help": "When the chip goes sleep or software reset, the clock source would change to XTAL\nand switch off the BBPLL clock for saving power. However, this might make the\nUSB_SERIAL_JTAG down which depends on BBPLL as its unique clock source.\nTherefore, this is used for keeping bbpll clock always on when USB_SERIAL_JTAG PORT is using.\nIf you want to use USB_SERIAL_JTAG under sw_reset case or sleep-wakeup case, you shoule select\nthis option. But be aware that this might increase the power consumption.",
                                "id": "RTC_CLOCK_BBPLL_POWER_ON_WITH_USB",
                                "name": "RTC_CLOCK_BBPLL_POWER_ON_WITH_USB",
                                "range": null,
                                "title": "Keep BBPLL clock always work",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-hardware-settings-rtc-clock-config",
                        "title": "RTC Clock Config",
                        "type": "menu"
                    }
                ],
                "depends_on": null,
                "id": "component-config-hardware-settings",
                "title": "Hardware Settings",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Configure the IPC tasks stack size. An IPC task runs on each core (in dual core mode), and allows for\ncross-core function calls. See IPC documentation for more details. The default IPC stack size should be\nenough for most common simple use cases. However, users can increase/decrease the stack size to their\nneeds.",
                        "id": "ESP_IPC_TASK_STACK_SIZE",
                        "name": "ESP_IPC_TASK_STACK_SIZE",
                        "range": [
                            512,
                            65536
                        ],
                        "title": "Inter-Processor Call (IPC) task stack size",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "!FREERTOS_UNICORE",
                        "help": "If this option is not enabled then the IPC task will keep behavior same as prior to that of ESP-IDF v4.0,\nhence IPC task will run at (configMAX_PRIORITIES - 1) priority.",
                        "id": "ESP_IPC_USES_CALLERS_PRIORITY",
                        "name": "ESP_IPC_USES_CALLERS_PRIORITY",
                        "range": null,
                        "title": "IPC runs at caller's priority",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "The IPC ISR feature is similar to the IPC feature except that the callback function is executed in the\ncontext of a High Priority Interrupt. The IPC ISR feature is itended for low latency execution of simple\ncallbacks written in assembly on another CPU. Due to being run in a High Priority Interrupt, the assembly\ncallbacks must be written with particular restrictions (see \"IPC\" and \"High-Level Interrupt\" docs for more\ndetails).",
                        "id": "ESP_IPC_ISR_ENABLE",
                        "name": "ESP_IPC_ISR_ENABLE",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-ipc-inter-processor-call-",
                "title": "IPC (Inter-Processor Call)",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "The value of 0 indicates the IP lost timer is disabled, otherwise the timer is enabled.\n\nThe IP address may be lost because of some reasons, e.g. when the station disconnects\nfrom soft-AP, or when DHCP IP renew fails etc. If the IP lost timer is enabled, it will\nbe started everytime the IP is lost. Event SYSTEM_EVENT_STA_LOST_IP will be raised if\nthe timer expires. The IP lost timer is stopped if the station get the IP again before\nthe timer expires.",
                        "id": "ESP_NETIF_IP_LOST_TIMER_INTERVAL",
                        "name": "ESP_NETIF_IP_LOST_TIMER_INTERVAL",
                        "range": [
                            0,
                            65535
                        ],
                        "title": "IP Address lost timer interval (seconds)",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP_NETIF_USE_TCPIP_STACK_LIB>",
                                "help": "lwIP is a small independent implementation of the TCP/IP protocol suite.",
                                "id": "ESP_NETIF_TCPIP_LWIP",
                                "name": "ESP_NETIF_TCPIP_LWIP",
                                "range": null,
                                "title": "LwIP",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_NETIF_USE_TCPIP_STACK_LIB>",
                                "help": "Dummy implementation of esp-netif functionality which connects driver transmit\nto receive function. This option is for testing purpose only",
                                "id": "ESP_NETIF_LOOPBACK",
                                "name": "ESP_NETIF_LOOPBACK",
                                "range": null,
                                "title": "Loopback",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Choose the TCP/IP Stack to work, for example, LwIP, uIP, etc.",
                        "id": "component-config-esp-netif-adapter-tcp-ip-stack-library",
                        "name": "ESP_NETIF_USE_TCPIP_STACK_LIB",
                        "title": "TCP/IP Stack Library",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Backward compatible interface to tcpip_adapter is enabled by default to support\nlegacy TCP/IP stack initialisation code. Disable this option to use only esp-netif\ninterface.",
                        "id": "ESP_NETIF_TCPIP_ADAPTER_COMPATIBLE_LAYER",
                        "name": "ESP_NETIF_TCPIP_ADAPTER_COMPATIBLE_LAYER",
                        "range": null,
                        "title": "Enable backward compatible tcpip_adapter interface",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-esp-netif-adapter",
                "title": "ESP NETIF Adapter",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "If this option is enabled, NVS will be initialized and calibration data will be loaded from there.\nPHY calibration will be skipped on deep sleep wakeup. If calibration data is not found, full calibration\nwill be performed and stored in NVS. Normally, only partial calibration will be performed.\nIf this option is disabled, full calibration will be performed.\n\nIf it's easy that your board calibrate bad data, choose 'n'.\nTwo cases for example, you should choose 'n':\n1.If your board is easy to be booted up with antenna disconnected.\n2.Because of your board design, each time when you do calibration, the result are too unstable.\nIf unsure, choose 'y'.",
                        "id": "ESP_PHY_CALIBRATION_AND_DATA_STORAGE",
                        "name": "ESP_PHY_CALIBRATION_AND_DATA_STORAGE",
                        "range": null,
                        "title": "Store phy calibration data in NVS",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ESP_PHY_INIT_DATA_IN_PARTITION",
                                "help": "If enabled, PHY init data will be restored to default if\nit cannot be verified successfully to avoid endless bootloops.\n\nIf unsure, choose 'n'.",
                                "id": "ESP_PHY_DEFAULT_INIT_IF_INVALID",
                                "name": "ESP_PHY_DEFAULT_INIT_IF_INVALID",
                                "range": null,
                                "title": "Reset default PHY init data if invalid",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "ESP_PHY_MULTIPLE_INIT_DATA_BIN && ESP_PHY_INIT_DATA_IN_PARTITION",
                                        "help": "If enabled, multiple phy init data bin will embedded into app bin\nIf not enabled, multiple phy init data bin will still leave alone, and need to be flashed by users.",
                                        "id": "ESP_PHY_MULTIPLE_INIT_DATA_BIN_EMBED",
                                        "name": "ESP_PHY_MULTIPLE_INIT_DATA_BIN_EMBED",
                                        "range": null,
                                        "title": "Support embedded multiple phy init data bin to app bin",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "ESP_PHY_MULTIPLE_INIT_DATA_BIN && ESP_PHY_INIT_DATA_IN_PARTITION",
                                        "help": "If enabled, when an error occurs while the PHY init data is updated,\nthe program will terminate and restart.\nIf not enabled, the PHY init data will not be updated when an error occurs.",
                                        "id": "ESP_PHY_INIT_DATA_ERROR",
                                        "name": "ESP_PHY_INIT_DATA_ERROR",
                                        "range": null,
                                        "title": "Terminate operation when PHY init data error",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "ESP_PHY_INIT_DATA_IN_PARTITION && ESP_PHY_INIT_DATA_IN_PARTITION",
                                "help": "If enabled, the corresponding PHY init data type can be automatically switched\naccording to the country code. China's PHY init data bin is used by default.\nCan be modified by country information in API esp_wifi_set_country().\nThe priority of switching the PHY init data type is:\n1. Country configured by API esp_wifi_set_country()\nand the parameter policy is WIFI_COUNTRY_POLICY_MANUAL.\n2. Country notified by the connected AP.\n3. Country configured by API esp_wifi_set_country()\nand the parameter policy is WIFI_COUNTRY_POLICY_AUTO.",
                                "id": "ESP_PHY_MULTIPLE_INIT_DATA_BIN",
                                "name": "ESP_PHY_MULTIPLE_INIT_DATA_BIN",
                                "range": null,
                                "title": "Support multiple PHY init data bin",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "If enabled, PHY init data will be loaded from a partition.\nWhen using a custom partition table, make sure that PHY data\npartition is included (type: 'data', subtype: 'phy').\nWith default partition tables, this is done automatically.\nIf PHY init data is stored in a partition, it has to be flashed there,\notherwise runtime error will occur.\n\nIf this option is not enabled, PHY init data will be embedded\ninto the application binary.\n\nIf unsure, choose 'n'.",
                        "id": "ESP_PHY_INIT_DATA_IN_PARTITION",
                        "is_menuconfig": true,
                        "name": "ESP_PHY_INIT_DATA_IN_PARTITION",
                        "range": null,
                        "title": "Use a partition to store PHY init data",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Set maximum transmit power for WiFi radio. Actual transmit power for high\ndata rates may be lower than this setting.",
                        "id": "ESP_PHY_MAX_WIFI_TX_POWER",
                        "name": "ESP_PHY_MAX_WIFI_TX_POWER",
                        "range": [
                            10,
                            20
                        ],
                        "title": "Max WiFi TX power (dBm)",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_PHY_MAX_TX_POWER",
                        "name": "ESP_PHY_MAX_TX_POWER",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "(IDF_TARGET_ESP32C3 || IDF_TARGET_ESP32S3) && FREERTOS_USE_TICKLESS_IDLE",
                        "help": "If enabled, the MAC and baseband of Wi-Fi and Bluetooth will be powered\ndown when PHY is disabled. Enabling this setting reduces power consumption\nby a small amount but increases RAM use by approximately 4 KB(Wi-Fi only),\n2 KB(Bluetooth only) or 5.3 KB(Wi-Fi + Bluetooth).",
                        "id": "ESP_PHY_MAC_BB_PD",
                        "name": "ESP_PHY_MAC_BB_PD",
                        "range": null,
                        "title": "Power down MAC and baseband of Wi-Fi and Bluetooth when PHY is disabled",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP32_BROWNOUT_DET",
                        "help": "When brownout reset occurs, reduce PHY TX power to keep the code running.",
                        "id": "ESP_PHY_REDUCE_TX_POWER",
                        "name": "ESP_PHY_REDUCE_TX_POWER",
                        "range": null,
                        "title": "Reduce PHY TX power when brownout reset",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "USB_OTG_SUPPORTED || ESP_CONSOLE_USB_SERIAL_JTAG || ESP_CONSOLE_SECONDARY_USB_SERIAL_JTAG",
                        "help": "When using USB Serial/JTAG/OTG/CDC, PHY should enable USB, otherwise USB module\ncan not work properly. Notice: Enabling this configuration option will slightly impact wifi performance.",
                        "id": "ESP_PHY_ENABLE_USB",
                        "name": "ESP_PHY_ENABLE_USB",
                        "range": null,
                        "title": "Enable USB when phy init",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-phy",
                "title": "PHY",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "PM_ENABLE",
                                "help": "If enabled, startup code configures dynamic frequency scaling.\nMax CPU frequency is set to DEFAULT_CPU_FREQ_MHZ setting,\nmin frequency is set to XTAL frequency.\nIf disabled, DFS will not be active until the application\nconfigures it using esp_pm_configure function.",
                                "id": "PM_DFS_INIT_AUTO",
                                "name": "PM_DFS_INIT_AUTO",
                                "range": null,
                                "title": "Enable dynamic frequency scaling (DFS) at startup",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "PM_ENABLE && ESP_TIMER_IMPL_FRC2 && ESP_TIME_FUNCS_USE_RTC_TIMER",
                                "help": "When APB clock frequency changes, high-resolution timer (esp_timer)\nscale and base value need to be adjusted. Each adjustment may cause\nsmall error, and over time such small errors may cause time drift.\nIf this option is enabled, RTC timer will be used as a reference to\ncompensate for the drift.\nIt is recommended that this option is only used if 32k XTAL is selected\nas RTC clock source.",
                                "id": "PM_USE_RTC_TIMER_REF",
                                "name": "PM_USE_RTC_TIMER_REF",
                                "range": null,
                                "title": "Use RTC timer to prevent time drift (EXPERIMENTAL)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "PM_ENABLE",
                                "help": "If enabled, esp_pm_* functions will keep track of the amount of time\neach of the power management locks has been held, and esp_pm_dump_locks\nfunction will print this information.\nThis feature can be used to analyze which locks are preventing the chip\nfrom going into a lower power state, and see what time the chip spends\nin each power saving mode. This feature does incur some run-time\noverhead, so should typically be disabled in production builds.",
                                "id": "PM_PROFILING",
                                "name": "PM_PROFILING",
                                "range": null,
                                "title": "Enable profiling counters for PM locks",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "PM_ENABLE",
                                "help": "If enabled, some GPIOs will be used to signal events such as RTOS ticks,\nfrequency switching, entry/exit from idle state. Refer to pm_trace.c\nfile for the list of GPIOs.\nThis feature is intended to be used when analyzing/debugging behavior\nof power management implementation, and should be kept disabled in\napplications.",
                                "id": "PM_TRACE",
                                "name": "PM_TRACE",
                                "range": null,
                                "title": "Enable debug tracing of PM using GPIOs",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "If enabled, application is compiled with support for power management.\nThis option has run-time overhead (increased interrupt latency,\nlonger time to enter idle state), and it also reduces accuracy of\nRTOS ticks and timers used for timekeeping.\nEnable this option if application uses power management APIs.",
                        "id": "PM_ENABLE",
                        "name": "PM_ENABLE",
                        "range": null,
                        "title": "Support for power management",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "FREERTOS_USE_TICKLESS_IDLE",
                        "help": "If enabled, about 1.8KB of lightsleep related source code would be in IRAM and chip would sleep\nlonger for 760us at most each time.\nThis feature is intended to be used when lower power consumption is needed\nwhile there is enough place in IRAM to place source code.",
                        "id": "PM_SLP_IRAM_OPT",
                        "name": "PM_SLP_IRAM_OPT",
                        "range": null,
                        "title": "Put lightsleep related codes in internal RAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "FREERTOS_USE_TICKLESS_IDLE",
                        "help": "If enabled, about 260B of RTOS_IDLE related source code would be in IRAM and chip would sleep\nlonger for 40us at most each time.\nThis feature is intended to be used when lower power consumption is needed\nwhile there is enough place in IRAM to place source code.",
                        "id": "PM_RTOS_IDLE_OPT",
                        "name": "PM_RTOS_IDLE_OPT",
                        "range": null,
                        "title": "Put RTOS IDLE related codes in internal RAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "FREERTOS_USE_TICKLESS_IDLE",
                        "help": "This feature is intended to disable all GPIO pins at automantic sleep to get a lower power mode.\nIf enabled, chips will disable all GPIO pins at automantic sleep to reduce about 200~300 uA current.\nIf you want to specifically use some pins normally as chip wakes when chip sleeps,\nyou can call 'gpio_sleep_sel_dis' to disable this feature on those pins.\nYou can also keep this feature on and call 'gpio_sleep_set_direction' and 'gpio_sleep_set_pull_mode'\nto have a different GPIO configuration at sleep.\nWaring: If you want to enable this option on ESP32, you should enable `GPIO_ESP32_SUPPORT_SWITCH_SLP_PULL`\nat first, otherwise you will not be able to switch pullup/pulldown mode.",
                        "id": "PM_SLP_DISABLE_GPIO",
                        "name": "PM_SLP_DISABLE_GPIO",
                        "range": null,
                        "title": "Disable all GPIO when chip at sleep",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "PM_SLP_DEFAULT_PARAMS_OPT",
                        "name": "PM_SLP_DEFAULT_PARAMS_OPT",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32S3 && PM_POWER_DOWN_CPU_IN_LIGHT_SLEEP",
                                "help": "If enabled, the I/D-cache tag memory will be retained in light sleep. Depending on the the\ncache configuration, if this option is enabled, it will consume up to 9 KB of internal RAM.",
                                "id": "PM_POWER_DOWN_TAGMEM_IN_LIGHT_SLEEP",
                                "name": "PM_POWER_DOWN_TAGMEM_IN_LIGHT_SLEEP",
                                "range": null,
                                "title": "Power down I/D-cache tag memory in light sleep",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "IDF_TARGET_ESP32C3 || IDF_TARGET_ESP32S3",
                        "help": "If enabled, the CPU will be powered down in light sleep. On esp32c3 soc, enabling this\noption will consume 1.68 KB of internal RAM and will reduce sleep current consumption\nby about 100 uA. On esp32s3 soc, enabling this option will consume 8.58 KB of internal\nRAM and will reduce sleep current consumption by about 650 uA.",
                        "id": "PM_POWER_DOWN_CPU_IN_LIGHT_SLEEP",
                        "name": "PM_POWER_DOWN_CPU_IN_LIGHT_SLEEP",
                        "range": null,
                        "title": "Power down CPU in light sleep",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "PM_UPDATE_CCOMPARE_HLI_WORKAROUND",
                        "name": "PM_UPDATE_CCOMPARE_HLI_WORKAROUND",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-power-management",
                "title": "Power Management",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP_SYSTEM_PANIC>",
                                "help": "Outputs the relevant registers over the serial port and halt the\nprocessor. Needs a manual reset to restart.",
                                "id": "ESP_SYSTEM_PANIC_PRINT_HALT",
                                "name": "ESP_SYSTEM_PANIC_PRINT_HALT",
                                "range": null,
                                "title": "Print registers and halt",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_SYSTEM_PANIC>",
                                "help": "Outputs the relevant registers over the serial port and immediately\nreset the processor.",
                                "id": "ESP_SYSTEM_PANIC_PRINT_REBOOT",
                                "name": "ESP_SYSTEM_PANIC_PRINT_REBOOT",
                                "range": null,
                                "title": "Print registers and reboot",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_SYSTEM_PANIC>",
                                "help": "Just resets the processor without outputting anything",
                                "id": "ESP_SYSTEM_PANIC_SILENT_REBOOT",
                                "name": "ESP_SYSTEM_PANIC_SILENT_REBOOT",
                                "range": null,
                                "title": "Silent reboot",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_SYSTEM_PANIC>",
                                "help": "Invoke gdbstub on the serial port, allowing for gdb to attach to it to do a postmortem\nof the crash.",
                                "id": "ESP_SYSTEM_PANIC_GDBSTUB",
                                "name": "ESP_SYSTEM_PANIC_GDBSTUB",
                                "range": null,
                                "title": "GDBStub on panic",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_SYSTEM_PANIC>",
                                "help": "Invoke gdbstub on the serial port, allowing for gdb to attach to it and to do a debug on runtime.\nThis feature will switch system to single core mode.",
                                "id": "ESP_SYSTEM_GDBSTUB_RUNTIME",
                                "name": "ESP_SYSTEM_GDBSTUB_RUNTIME",
                                "range": null,
                                "title": "GDBStub at runtime",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "If FreeRTOS detects unexpected behaviour or an unhandled exception, the panic handler is\ninvoked. Configure the panic handler's action here.",
                        "id": "component-config-esp-system-settings-panic-handler-behaviour",
                        "name": "ESP_SYSTEM_PANIC",
                        "title": "Panic handler behaviour",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Only initialize and use the main core.",
                        "id": "ESP_SYSTEM_SINGLE_CORE_MODE",
                        "name": "ESP_SYSTEM_SINGLE_CORE_MODE",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_SYSTEM_RTC_EXT_XTAL",
                        "name": "ESP_SYSTEM_RTC_EXT_XTAL",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_SYSTEM_RTC_EXT_OSC",
                        "name": "ESP_SYSTEM_RTC_EXT_OSC",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_SYSTEM_RTC_EXT_XTAL",
                        "help": "To reduce the startup time of an external RTC crystal,\nwe bootstrap it with a 32kHz square wave for a fixed number of cycles.\nSetting 0 will disable bootstrapping (if disabled, the crystal may take\nlonger to start up or fail to oscillate under some conditions).\n\nIf this value is too high, a faulty crystal may initially start and then fail.\nIf this value is too low, an otherwise good crystal may not start.\n\nTo accurately determine if the crystal has started,\nset a larger \"Number of cycles for RTC_SLOW_CLK calibration\" (about 3000).",
                        "id": "ESP_SYSTEM_RTC_EXT_XTAL_BOOTSTRAP_CYCLES",
                        "name": "ESP_SYSTEM_RTC_EXT_XTAL_BOOTSTRAP_CYCLES",
                        "range": null,
                        "title": "Bootstrap cycles for external 32kHz crystal",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_SYSTEM_RTC_FAST_MEM_AS_HEAP_DEPCHECK",
                        "name": "ESP_SYSTEM_RTC_FAST_MEM_AS_HEAP_DEPCHECK",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_SYSTEM_RTC_FAST_MEM_AS_HEAP_DEPCHECK",
                        "help": "This config option allows to add RTC fast memory region to system heap with capability\nsimilar to that of DRAM region but without DMA. This memory will be consumed first per\nheap initialization order by early startup services and scheduler related code. Speed\nwise RTC fast memory operates on APB clock and hence does not have much performance impact.",
                        "id": "ESP_SYSTEM_ALLOW_RTC_FAST_MEM_AS_HEAP",
                        "name": "ESP_SYSTEM_ALLOW_RTC_FAST_MEM_AS_HEAP",
                        "range": null,
                        "title": "Enable RTC fast memory for dynamic allocations",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ARCH_RISCV",
                        "help": "Generate DWARF information for each function of the project. These information will parsed and used to\nperform backtracing when panics occur. Activating this option will activate asynchronous frame unwinding\nand generation of both .eh_frame and .eh_frame_hdr sections, resulting in a bigger binary size (20% to\n100% larger). The main purpose of this option is to be able to have a backtrace parsed and printed by\nthe program itself, regardless of the serial monitor used.\nThis option shall NOT be used for production.",
                        "id": "ESP_SYSTEM_USE_EH_FRAME",
                        "name": "ESP_SYSTEM_USE_EH_FRAME",
                        "range": null,
                        "title": "Generate and use eh_frame for backtracing",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "ESP_SYSTEM_MEMPROT_DEPCHECK",
                                "name": "ESP_SYSTEM_MEMPROT_DEPCHECK",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "ESP_SYSTEM_MEMPROT_FEATURE",
                                        "help": "Once locked, memory protection settings cannot be changed anymore.\nThe lock is reset only on the chip startup.",
                                        "id": "ESP_SYSTEM_MEMPROT_FEATURE_LOCK",
                                        "name": "ESP_SYSTEM_MEMPROT_FEATURE_LOCK",
                                        "range": null,
                                        "title": "Lock memory protection settings",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "ESP_SYSTEM_MEMPROT_DEPCHECK",
                                "help": "If enabled, the permission control module watches all the memory access and fires the panic handler\nif a permission violation is detected. This feature automatically splits\nthe SRAM memory into data and instruction segments and sets Read/Execute permissions\nfor the instruction part (below given splitting address) and Read/Write permissions\nfor the data part (above the splitting address). The memory protection is effective\non all access through the IRAM0 and DRAM0 buses.",
                                "id": "ESP_SYSTEM_MEMPROT_FEATURE",
                                "name": "ESP_SYSTEM_MEMPROT_FEATURE",
                                "range": null,
                                "title": "Enable memory protection",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "ESP_SYSTEM_MEMPROT_DEPCHECK",
                                "help": null,
                                "id": "ESP_SYSTEM_MEMPROT_CPU_PREFETCH_PAD_SIZE",
                                "name": "ESP_SYSTEM_MEMPROT_CPU_PREFETCH_PAD_SIZE",
                                "range": null,
                                "title": null,
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "ESP_SYSTEM_MEMPROT_DEPCHECK",
                                "help": null,
                                "id": "ESP_SYSTEM_MEMPROT_MEM_ALIGN_SIZE",
                                "name": "ESP_SYSTEM_MEMPROT_MEM_ALIGN_SIZE",
                                "range": null,
                                "title": null,
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-esp-system-settings-memory-protection",
                        "title": "Memory protection",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Config system event queue size in different application.",
                        "id": "ESP_SYSTEM_EVENT_QUEUE_SIZE",
                        "name": "ESP_SYSTEM_EVENT_QUEUE_SIZE",
                        "range": null,
                        "title": "System event queue size",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Config system event task stack size in different application.",
                        "id": "ESP_SYSTEM_EVENT_TASK_STACK_SIZE",
                        "name": "ESP_SYSTEM_EVENT_TASK_STACK_SIZE",
                        "range": null,
                        "title": "Event loop task stack size",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Configure the \"main task\" stack size. This is the stack of the task\nwhich calls app_main(). If app_main() returns then this task is deleted\nand its stack memory is freed.",
                        "id": "ESP_MAIN_TASK_STACK_SIZE",
                        "name": "ESP_MAIN_TASK_STACK_SIZE",
                        "range": null,
                        "title": "Main task stack size",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP_MAIN_TASK_AFFINITY>",
                                "help": null,
                                "id": "ESP_MAIN_TASK_AFFINITY_CPU0",
                                "name": "ESP_MAIN_TASK_AFFINITY_CPU0",
                                "range": null,
                                "title": "CPU0",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!FREERTOS_UNICORE && <choice ESP_MAIN_TASK_AFFINITY>",
                                "help": null,
                                "id": "ESP_MAIN_TASK_AFFINITY_CPU1",
                                "name": "ESP_MAIN_TASK_AFFINITY_CPU1",
                                "range": null,
                                "title": "CPU1",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_MAIN_TASK_AFFINITY>",
                                "help": null,
                                "id": "ESP_MAIN_TASK_AFFINITY_NO_AFFINITY",
                                "name": "ESP_MAIN_TASK_AFFINITY_NO_AFFINITY",
                                "range": null,
                                "title": "No affinity",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Configure the \"main task\" core affinity. This is the used core of the task\nwhich calls app_main(). If app_main() returns then this task is deleted.",
                        "id": "component-config-esp-system-settings-main-task-core-affinity",
                        "name": "ESP_MAIN_TASK_AFFINITY",
                        "title": "Main task core affinity",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_MAIN_TASK_AFFINITY",
                        "name": "ESP_MAIN_TASK_AFFINITY",
                        "range": null,
                        "title": null,
                        "type": "hex"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Minimal value of size, in bytes, accepted to execute a expression\nwith shared stack.",
                        "id": "ESP_MINIMAL_SHARED_STACK_SIZE",
                        "name": "ESP_MINIMAL_SHARED_STACK_SIZE",
                        "range": null,
                        "title": "Minimal allowed size for shared stack",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP_CONSOLE_UART>",
                                "help": null,
                                "id": "ESP_CONSOLE_UART_DEFAULT",
                                "name": "ESP_CONSOLE_UART_DEFAULT",
                                "range": null,
                                "title": "Default: UART0",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "(IDF_TARGET_ESP32S2 || IDF_TARGET_ESP32S3) && !TINY_USB && <choice ESP_CONSOLE_UART>",
                                "help": null,
                                "id": "ESP_CONSOLE_USB_CDC",
                                "name": "ESP_CONSOLE_USB_CDC",
                                "range": null,
                                "title": "USB CDC",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "(IDF_TARGET_ESP32C3 || IDF_TARGET_ESP32S3) && <choice ESP_CONSOLE_UART>",
                                "help": null,
                                "id": "ESP_CONSOLE_USB_SERIAL_JTAG",
                                "name": "ESP_CONSOLE_USB_SERIAL_JTAG",
                                "range": null,
                                "title": "USB Serial/JTAG Controller",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_CONSOLE_UART>",
                                "help": null,
                                "id": "ESP_CONSOLE_UART_CUSTOM",
                                "name": "ESP_CONSOLE_UART_CUSTOM",
                                "range": null,
                                "title": "Custom UART",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_CONSOLE_UART>",
                                "help": null,
                                "id": "ESP_CONSOLE_NONE",
                                "name": "ESP_CONSOLE_NONE",
                                "range": null,
                                "title": "None",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Select where to send console output (through stdout and stderr).\n\n- Default is to use UART0 on pre-defined GPIOs.\n- If \"Custom\" is selected, UART0 or UART1 can be chosen,\n  and any pins can be selected.\n- If \"None\" is selected, there will be no console output on any UART, except\n  for initial output from ROM bootloader. This ROM output can be suppressed by\n  GPIO strapping or EFUSE, refer to chip datasheet for details.\n- On chips with USB OTG peripheral, \"USB CDC\" option redirects output to the\n  CDC port. This option uses the CDC driver in the chip ROM.\n  This option is incompatible with TinyUSB stack.\n- On chips with an USB serial/JTAG debug controller, selecting the option\n  for that redirects output to the CDC/ACM (serial port emulation) component\n  of that device.",
                        "id": "component-config-esp-system-settings-channel-for-console-output",
                        "name": "ESP_CONSOLE_UART",
                        "title": "Channel for console output",
                        "type": "choice"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP_CONSOLE_SECONDARY>",
                                "help": null,
                                "id": "ESP_CONSOLE_SECONDARY_NONE",
                                "name": "ESP_CONSOLE_SECONDARY_NONE",
                                "range": null,
                                "title": "No secondary console",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!ESP_CONSOLE_USB_SERIAL_JTAG && <choice ESP_CONSOLE_SECONDARY>",
                                "help": "This option supports output through USB_SERIAL_JTAG port when the UART0 port is not connected.\nThe output currently only supports non-blocking mode without using the console.\nIf you want to output in blocking mode with REPL or input through USB_SERIAL_JTAG port,\nplease change the primary config to ESP_CONSOLE_USB_SERIAL_JTAG above.",
                                "id": "ESP_CONSOLE_SECONDARY_USB_SERIAL_JTAG",
                                "name": "ESP_CONSOLE_SECONDARY_USB_SERIAL_JTAG",
                                "range": null,
                                "title": "USB_SERIAL_JTAG PORT",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "IDF_TARGET_ESP32S3 || IDF_TARGET_ESP32C3",
                        "help": "This secondary option supports output through other specific port like USB_SERIAL_JTAG\nwhen UART0 port as a primary is selected but not connected. This secondary output currently only supports\nnon-blocking mode without using REPL. If you want to output in blocking mode with REPL or\ninput through this secondary port, please change the primary config to this port\nin `Channel for console output` menu.",
                        "id": "component-config-esp-system-settings-channel-for-console-secondary-output",
                        "name": "ESP_CONSOLE_SECONDARY",
                        "title": "Channel for console secondary output",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_CONSOLE_UART",
                        "name": "ESP_CONSOLE_UART",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_CONSOLE_MULTIPLE_UART",
                        "name": "ESP_CONSOLE_MULTIPLE_UART",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP_CONSOLE_UART_NUM>",
                                "help": null,
                                "id": "ESP_CONSOLE_UART_CUSTOM_NUM_0",
                                "name": "ESP_CONSOLE_UART_CUSTOM_NUM_0",
                                "range": null,
                                "title": "UART0",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_CONSOLE_UART_NUM>",
                                "help": null,
                                "id": "ESP_CONSOLE_UART_CUSTOM_NUM_1",
                                "name": "ESP_CONSOLE_UART_CUSTOM_NUM_1",
                                "range": null,
                                "title": "UART1",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "ESP_CONSOLE_UART_CUSTOM && ESP_CONSOLE_MULTIPLE_UART",
                        "help": "This UART peripheral is used for console output from the ESP-IDF Bootloader and the app.\n\nIf the configuration is different in the Bootloader binary compared to the app binary, UART\nis reconfigured after the bootloader exits and the app starts.\n\nDue to an ESP32 ROM bug, UART2 is not supported for console output\nvia esp_rom_printf.",
                        "id": "component-config-esp-system-settings-uart-peripheral-to-use-for-console-output-0-1-",
                        "name": "ESP_CONSOLE_UART_NUM",
                        "title": "UART peripheral to use for console output (0-1)",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_CONSOLE_UART_NUM",
                        "name": "ESP_CONSOLE_UART_NUM",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_CONSOLE_UART_CUSTOM",
                        "help": "This GPIO is used for console UART TX output in the ESP-IDF Bootloader and the app (including\nboot log output and default standard output and standard error of the app).\n\nIf the configuration is different in the Bootloader binary compared to the app binary, UART\nis reconfigured after the bootloader exits and the app starts.",
                        "id": "ESP_CONSOLE_UART_TX_GPIO",
                        "name": "ESP_CONSOLE_UART_TX_GPIO",
                        "range": null,
                        "title": "UART TX on GPIO#",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_CONSOLE_UART_CUSTOM",
                        "help": "This GPIO is used for UART RX input in the ESP-IDF Bootloader and the app (including\ndefault default standard input of the app).\n\nNote: The default ESP-IDF Bootloader configures this pin but doesn't read anything from the UART.\n\nIf the configuration is different in the Bootloader binary compared to the app binary, UART\nis reconfigured after the bootloader exits and the app starts.",
                        "id": "ESP_CONSOLE_UART_RX_GPIO",
                        "name": "ESP_CONSOLE_UART_RX_GPIO",
                        "range": null,
                        "title": "UART RX on GPIO#",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_CONSOLE_UART",
                        "help": "This baud rate is used by both the ESP-IDF Bootloader and the app (including\nboot log output and default standard input/output/error of the app).\n\nThe app's maximum baud rate depends on the UART clock source. If Power Management is disabled,\nthe UART clock source is the APB clock and all baud rates in the available range will be sufficiently\naccurate. If Power Management is enabled, REF_TICK clock source is used so the baud rate is divided\nfrom 1MHz. Baud rates above 1Mbps are not possible and values between 500Kbps and 1Mbps may not be\naccurate.\n\nIf the configuration is different in the Bootloader binary compared to the app binary, UART\nis reconfigured after the bootloader exits and the app starts.",
                        "id": "ESP_CONSOLE_UART_BAUDRATE",
                        "name": "ESP_CONSOLE_UART_BAUDRATE",
                        "range": [
                            1200,
                            1000000
                        ],
                        "title": "UART console baud rate",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_CONSOLE_USB_CDC",
                        "help": "Set the size of USB CDC RX buffer. Increase the buffer size if your application\nis often receiving data over USB CDC.",
                        "id": "ESP_CONSOLE_USB_CDC_RX_BUF_SIZE",
                        "name": "ESP_CONSOLE_USB_CDC_RX_BUF_SIZE",
                        "range": null,
                        "title": "Size of USB CDC RX buffer",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_CONSOLE_USB_CDC",
                        "help": "If enabled, esp_rom_printf and ESP_EARLY_LOG output will also be sent over USB CDC.\nDisabling this option saves about 1kB or RAM.",
                        "id": "ESP_CONSOLE_USB_CDC_SUPPORT_ETS_PRINTF",
                        "name": "ESP_CONSOLE_USB_CDC_SUPPORT_ETS_PRINTF",
                        "range": null,
                        "title": "Enable esp_rom_printf / ESP_EARLY_LOG via USB CDC",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ESP_INT_WDT",
                                "help": "The timeout of the watchdog, in miliseconds. Make this higher than the FreeRTOS tick rate.",
                                "id": "ESP_INT_WDT_TIMEOUT_MS",
                                "name": "ESP_INT_WDT_TIMEOUT_MS",
                                "range": [
                                    10,
                                    10000
                                ],
                                "title": "Interrupt watchdog timeout (ms)",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "ESP_INT_WDT && !FREERTOS_UNICORE",
                                "help": "Also detect if interrupts on CPU 1 are disabled for too long.",
                                "id": "ESP_INT_WDT_CHECK_CPU1",
                                "name": "ESP_INT_WDT_CHECK_CPU1",
                                "range": null,
                                "title": "Also watch CPU1 tick interrupt",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "This watchdog timer can detect if the FreeRTOS tick interrupt has not been called for a certain time,\neither because a task turned off interrupts and did not turn them on for a long time, or because an\ninterrupt handler did not return. It will try to invoke the panic handler first and failing that\nreset the SoC.",
                        "id": "ESP_INT_WDT",
                        "name": "ESP_INT_WDT",
                        "range": null,
                        "title": "Interrupt watchdog",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ESP_TASK_WDT",
                                "help": "If this option is enabled, the Task Watchdog Timer will be configured to\ntrigger the panic handler when it times out. This can also be configured\nat run time (see Task Watchdog Timer API Reference)",
                                "id": "ESP_TASK_WDT_PANIC",
                                "name": "ESP_TASK_WDT_PANIC",
                                "range": null,
                                "title": "Invoke panic handler on Task Watchdog timeout",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "ESP_TASK_WDT",
                                "help": "Timeout period configuration for the Task Watchdog Timer in seconds.\nThis is also configurable at run time (see Task Watchdog Timer API Reference)",
                                "id": "ESP_TASK_WDT_TIMEOUT_S",
                                "name": "ESP_TASK_WDT_TIMEOUT_S",
                                "range": [
                                    1,
                                    60
                                ],
                                "title": "Task Watchdog timeout period (seconds)",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "ESP_TASK_WDT",
                                "help": "If this option is enabled, the Task Watchdog Timer will watch the CPU0\nIdle Task. Having the Task Watchdog watch the Idle Task allows for detection\nof CPU starvation as the Idle Task not being called is usually a symptom of\nCPU starvation. Starvation of the Idle Task is detrimental as FreeRTOS household\ntasks depend on the Idle Task getting some runtime every now and then.",
                                "id": "ESP_TASK_WDT_CHECK_IDLE_TASK_CPU0",
                                "name": "ESP_TASK_WDT_CHECK_IDLE_TASK_CPU0",
                                "range": null,
                                "title": "Watch CPU0 Idle Task",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "ESP_TASK_WDT && !FREERTOS_UNICORE",
                                "help": "If this option is enabled, the Task Wtachdog Timer will wach the CPU1\nIdle Task.",
                                "id": "ESP_TASK_WDT_CHECK_IDLE_TASK_CPU1",
                                "name": "ESP_TASK_WDT_CHECK_IDLE_TASK_CPU1",
                                "range": null,
                                "title": "Watch CPU1 Idle Task",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "The Task Watchdog Timer can be used to make sure individual tasks are still\nrunning. Enabling this option will cause the Task Watchdog Timer to be\ninitialized automatically at startup. The Task Watchdog timer can be\ninitialized after startup as well (see Task Watchdog Timer API Reference)",
                        "id": "ESP_TASK_WDT",
                        "name": "ESP_TASK_WDT",
                        "range": null,
                        "title": "Initialize Task Watchdog Timer on startup",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ESP_XT_WDT",
                                "help": "Timeout period configuration for the XTAL32K watchdog timer based on RTC_CLK.",
                                "id": "ESP_XT_WDT_TIMEOUT",
                                "name": "ESP_XT_WDT_TIMEOUT",
                                "range": null,
                                "title": "XTAL32K watchdog timeout period",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "ESP_XT_WDT",
                                "help": "Enable this to automatically switch to BACKUP32K_CLK as the source of RTC_SLOW_CLK when\nthe watchdog timer expires.",
                                "id": "ESP_XT_WDT_BACKUP_CLK_ENABLE",
                                "name": "ESP_XT_WDT_BACKUP_CLK_ENABLE",
                                "range": null,
                                "title": "Automatically switch to BACKUP32K_CLK when timer expires",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!IDF_TARGET_ESP32 && (ESP_SYSTEM_RTC_EXT_OSC || ESP_SYSTEM_RTC_EXT_XTAL)",
                        "help": "This watchdog timer can detect oscillation failure of the XTAL32K_CLK. When such a failure\nis detected the hardware can be set up to automatically switch to BACKUP32K_CLK and generate\nan interrupt.",
                        "id": "ESP_XT_WDT",
                        "name": "ESP_XT_WDT",
                        "range": null,
                        "title": "Initialize XTAL32K watchdog timer on startup",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "If this option is disabled (default), the panic handler code is placed in flash not IRAM.\nThis means that if ESP-IDF crashes while flash cache is disabled, the panic handler will\nautomatically re-enable flash cache before running GDB Stub or Core Dump. This adds some minor\nrisk, if the flash cache status is also corrupted during the crash.\n\nIf this option is enabled, the panic handler code (including required UART functions) is placed\nin IRAM. This may be necessary to debug some complex issues with crashes while flash cache is\ndisabled (for example, when writing to SPI flash) or when flash cache is corrupted when an exception\nis triggered.",
                        "id": "ESP_PANIC_HANDLER_IRAM",
                        "name": "ESP_PANIC_HANDLER_IRAM",
                        "range": null,
                        "title": "Place panic handler code in IRAM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESP32_TRAX && !ESP32S2_TRAX && !ESP32S3_TRAX",
                        "help": "Debug stubs are used by OpenOCD to execute pre-compiled onboard code\nwhich does some useful debugging stuff, e.g. GCOV data dump.",
                        "id": "ESP_DEBUG_STUBS_ENABLE",
                        "name": "ESP_DEBUG_STUBS_ENABLE",
                        "range": null,
                        "title": "OpenOCD debug stubs",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32 && <choice ESP_SYSTEM_CHECK_INT_LEVEL>",
                                "help": "Using level 5 interrupt for Interrupt Watchdog and other system checks.",
                                "id": "ESP_SYSTEM_CHECK_INT_LEVEL_5",
                                "name": "ESP_SYSTEM_CHECK_INT_LEVEL_5",
                                "range": null,
                                "title": "Level 5 interrupt",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!BTDM_CTRL_HLI && <choice ESP_SYSTEM_CHECK_INT_LEVEL>",
                                "help": "Using level 4 interrupt for Interrupt Watchdog and other system checks.",
                                "id": "ESP_SYSTEM_CHECK_INT_LEVEL_4",
                                "name": "ESP_SYSTEM_CHECK_INT_LEVEL_4",
                                "range": null,
                                "title": "Level 4 interrupt",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Interrupt level to use for Interrupt Watchdog and other system checks.",
                        "id": "component-config-esp-system-settings-interrupt-level-to-use-for-interrupt-watchdog-and-other-system-checks",
                        "name": "ESP_SYSTEM_CHECK_INT_LEVEL",
                        "title": "Interrupt level to use for Interrupt Watchdog and other system checks",
                        "type": "choice"
                    }
                ],
                "depends_on": null,
                "id": "component-config-esp-system-settings",
                "title": "ESP System Settings",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "If enabled, esp_timer_dump will dump information such as number of times the timer was started,\nnumber of times the timer has triggered, and the total time it took for the callback to run.\nThis option has some effect on timer performance and the amount of memory used for timer\nstorage, and should only be used for debugging/testing purposes.",
                        "id": "ESP_TIMER_PROFILING",
                        "name": "ESP_TIMER_PROFILING",
                        "range": null,
                        "title": "Enable esp_timer profiling features",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_TIME_FUNCS_USE_RTC_TIMER",
                        "name": "ESP_TIME_FUNCS_USE_RTC_TIMER",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_TIME_FUNCS_USE_ESP_TIMER",
                        "name": "ESP_TIME_FUNCS_USE_ESP_TIMER",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_TIME_FUNCS_USE_NONE",
                        "name": "ESP_TIME_FUNCS_USE_NONE",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Configure the stack size of \"timer_task\" task. This task is used\nto dispatch callbacks of timers created using ets_timer and esp_timer\nAPIs. If you are seing stack overflow errors in timer task, increase\nthis value.\n\nNote that this is not the same as FreeRTOS timer task. To configure\nFreeRTOS timer task size, see \"FreeRTOS timer task stack size\" option\nin \"FreeRTOS\" menu.",
                        "id": "ESP_TIMER_TASK_STACK_SIZE",
                        "name": "ESP_TIMER_TASK_STACK_SIZE",
                        "range": [
                            2048,
                            65536
                        ],
                        "title": "High-resolution timer task stack size",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "It sets the interrupt level for esp_timer ISR in range 1..3.\nA higher level (3) helps to decrease the ISR esp_timer latency.",
                        "id": "ESP_TIMER_INTERRUPT_LEVEL",
                        "name": "ESP_TIMER_INTERRUPT_LEVEL",
                        "range": [
                            1,
                            3
                        ],
                        "title": "Interrupt level",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Allows using ESP_TIMER_ISR dispatch method (ESP_TIMER_TASK dispatch method is also avalible).\n- ESP_TIMER_TASK - Timer callbacks are dispatched from a high-priority esp_timer task.\n- ESP_TIMER_ISR - Timer callbacks are dispatched directly from the timer interrupt handler.\nThe ISR dispatch can be used, in some cases, when a callback is very simple\nor need a lower-latency.",
                        "id": "ESP_TIMER_SUPPORTS_ISR_DISPATCH_METHOD",
                        "name": "ESP_TIMER_SUPPORTS_ISR_DISPATCH_METHOD",
                        "range": null,
                        "title": "Support ISR dispatch method",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32 && <choice ESP_TIMER_IMPL>",
                                "help": null,
                                "id": "ESP_TIMER_IMPL_FRC2",
                                "name": "ESP_TIMER_IMPL_FRC2",
                                "range": null,
                                "title": "FRC2 (legacy) timer",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32 && <choice ESP_TIMER_IMPL>",
                                "help": null,
                                "id": "ESP_TIMER_IMPL_TG0_LAC",
                                "name": "ESP_TIMER_IMPL_TG0_LAC",
                                "range": null,
                                "title": "LAC timer of Timer Group 0",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!IDF_TARGET_ESP32 && <choice ESP_TIMER_IMPL>",
                                "help": null,
                                "id": "ESP_TIMER_IMPL_SYSTIMER",
                                "name": "ESP_TIMER_IMPL_SYSTIMER",
                                "range": null,
                                "title": "SYSTIMER",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "esp_timer APIs can be implemented using different hardware timers.\n\n- \"FRC2 (legacy)\" implementation has been used in ESP-IDF v2.x - v4.1.\n\n- \"LAC timer of Timer Group 0\" implementation is simpler, and has smaller\n  run time overhead because software handling of timer overflow is not needed.\n\n- \"SYSTIMER\" implementation is similar to \"LAC timer of Timer Group 0\" but for non ESP32 chips.",
                        "id": "component-config-high-resolution-timer-esp_timer--hardware-timer-to-use-for-esp_timer",
                        "name": "ESP_TIMER_IMPL",
                        "title": "Hardware timer to use for esp_timer",
                        "type": "choice"
                    }
                ],
                "depends_on": null,
                "id": "component-config-high-resolution-timer-esp_timer-",
                "title": "High resolution timer (esp_timer)",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP32_WIFI_ENABLED",
                        "name": "ESP32_WIFI_ENABLED",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP32_WIFI_ENABLED && BT_ENABLED",
                        "help": "If enabled, WiFi & Bluetooth coexistence is controlled by software rather than hardware.\nRecommended for heavy traffic scenarios. Both coexistence configuration options are\nautomatically managed, no user intervention is required.\nIf only Bluetooth is used, it is recommended to disable this option to reduce binary file\nsize.",
                        "id": "ESP32_WIFI_SW_COEXIST_ENABLE",
                        "name": "ESP32_WIFI_SW_COEXIST_ENABLE",
                        "range": null,
                        "title": "Software controls WiFi/Bluetooth coexistence",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Set the number of WiFi static RX buffers. Each buffer takes approximately 1.6KB of RAM.\nThe static rx buffers are allocated when esp_wifi_init is called, they are not freed\nuntil esp_wifi_deinit is called.\n\nWiFi hardware use these buffers to receive all 802.11 frames.\nA higher number may allow higher throughput but increases memory use. If ESP32_WIFI_AMPDU_RX_ENABLED\nis enabled, this value is recommended to set equal or bigger than ESP32_WIFI_RX_BA_WIN in order to\nachieve better throughput and compatibility with both stations and APs.",
                        "id": "ESP32_WIFI_STATIC_RX_BUFFER_NUM",
                        "name": "ESP32_WIFI_STATIC_RX_BUFFER_NUM",
                        "range": [
                            2,
                            25
                        ],
                        "title": "Max number of WiFi static RX buffers",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Set the number of WiFi dynamic RX buffers, 0 means unlimited RX buffers will be allocated\n(provided sufficient free RAM). The size of each dynamic RX buffer depends on the size of\nthe received data frame.\n\nFor each received data frame, the WiFi driver makes a copy to an RX buffer and then delivers\nit to the high layer TCP/IP stack. The dynamic RX buffer is freed after the higher layer has\nsuccessfully received the data frame.\n\nFor some applications, WiFi data frames may be received faster than the application can\nprocess them. In these cases we may run out of memory if RX buffer number is unlimited (0).\n\nIf a dynamic RX buffer limit is set, it should be at least the number of static RX buffers.",
                        "id": "ESP32_WIFI_DYNAMIC_RX_BUFFER_NUM",
                        "name": "ESP32_WIFI_DYNAMIC_RX_BUFFER_NUM",
                        "range": [
                            0,
                            128
                        ],
                        "title": "Max number of WiFi dynamic RX buffers",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_WIFI_TX_BUFFER>",
                                "help": null,
                                "id": "ESP32_WIFI_STATIC_TX_BUFFER",
                                "name": "ESP32_WIFI_STATIC_TX_BUFFER",
                                "range": null,
                                "title": "Static",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!SPIRAM_USE_MALLOC && <choice ESP32_WIFI_TX_BUFFER>",
                                "help": null,
                                "id": "ESP32_WIFI_DYNAMIC_TX_BUFFER",
                                "name": "ESP32_WIFI_DYNAMIC_TX_BUFFER",
                                "range": null,
                                "title": "Dynamic",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Select type of WiFi TX buffers:\n\nIf \"Static\" is selected, WiFi TX buffers are allocated when WiFi is initialized and released\nwhen WiFi is de-initialized. The size of each static TX buffer is fixed to about 1.6KB.\n\nIf \"Dynamic\" is selected, each WiFi TX buffer is allocated as needed when a data frame is\ndelivered to the Wifi driver from the TCP/IP stack. The buffer is freed after the data frame\nhas been sent by the WiFi driver. The size of each dynamic TX buffer depends on the length\nof each data frame sent by the TCP/IP layer.\n\nIf PSRAM is enabled, \"Static\" should be selected to guarantee enough WiFi TX buffers.\nIf PSRAM is disabled, \"Dynamic\" should be selected to improve the utilization of RAM.",
                        "id": "component-config-wi-fi-type-of-wifi-tx-buffers",
                        "name": "ESP32_WIFI_TX_BUFFER",
                        "title": "Type of WiFi TX buffers",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP32_WIFI_TX_BUFFER_TYPE",
                        "name": "ESP32_WIFI_TX_BUFFER_TYPE",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP32_WIFI_STATIC_TX_BUFFER",
                        "help": "Set the number of WiFi static TX buffers. Each buffer takes approximately 1.6KB of RAM.\nThe static RX buffers are allocated when esp_wifi_init() is called, they are not released\nuntil esp_wifi_deinit() is called.\n\nFor each transmitted data frame from the higher layer TCP/IP stack, the WiFi driver makes a\ncopy of it in a TX buffer.  For some applications especially UDP applications, the upper\nlayer can deliver frames faster than WiFi layer can transmit. In these cases, we may run out\nof TX buffers.",
                        "id": "ESP32_WIFI_STATIC_TX_BUFFER_NUM",
                        "name": "ESP32_WIFI_STATIC_TX_BUFFER_NUM",
                        "range": null,
                        "title": "Max number of WiFi static TX buffers",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP32_SPIRAM_SUPPORT || ESP32S2_SPIRAM_SUPPORT || ESP32S3_SPIRAM_SUPPORT",
                        "help": "Set the number of WiFi cache TX buffer number.\n\nFor each TX packet from uplayer, such as LWIP etc, WiFi driver needs to allocate a static TX\nbuffer and makes a copy of uplayer packet. If WiFi driver fails to allocate the static TX buffer,\nit caches the uplayer packets to a dedicated buffer queue, this option is used to configure the\nsize of the cached TX queue.",
                        "id": "ESP32_WIFI_CACHE_TX_BUFFER_NUM",
                        "name": "ESP32_WIFI_CACHE_TX_BUFFER_NUM",
                        "range": null,
                        "title": "Max number of WiFi cache TX buffers",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP32_WIFI_DYNAMIC_TX_BUFFER",
                        "help": "Set the number of WiFi dynamic TX buffers. The size of each dynamic TX buffer is not fixed,\nit depends on the size of each transmitted data frame.\n\nFor each transmitted frame from the higher layer TCP/IP stack, the WiFi driver makes a copy\nof it in a TX buffer. For some applications, especially UDP applications, the upper layer\ncan deliver frames faster than WiFi layer can transmit. In these cases, we may run out of TX\nbuffers.",
                        "id": "ESP32_WIFI_DYNAMIC_TX_BUFFER_NUM",
                        "name": "ESP32_WIFI_DYNAMIC_TX_BUFFER_NUM",
                        "range": [
                            1,
                            128
                        ],
                        "title": "Max number of WiFi dynamic TX buffers",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Select this option to enable CSI(Channel State Information) feature. CSI takes about\nCONFIG_ESP32_WIFI_STATIC_RX_BUFFER_NUM KB of RAM. If CSI is not used, it is better to disable\nthis feature in order to save memory.",
                        "id": "ESP32_WIFI_CSI_ENABLED",
                        "name": "ESP32_WIFI_CSI_ENABLED",
                        "range": null,
                        "title": "WiFi CSI(Channel State Information)",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ESP32_WIFI_AMPDU_TX_ENABLED",
                                "help": "Set the size of WiFi Block Ack TX window. Generally a bigger value means higher throughput but\nmore memory. Most of time we should NOT change the default value unless special reason, e.g.\ntest the maximum UDP TX throughput with iperf etc. For iperf test in shieldbox, the recommended\nvalue is 9~12.",
                                "id": "ESP32_WIFI_TX_BA_WIN",
                                "name": "ESP32_WIFI_TX_BA_WIN",
                                "range": [
                                    2,
                                    32
                                ],
                                "title": "WiFi AMPDU TX BA window size",
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "help": "Select this option to enable AMPDU TX feature",
                        "id": "ESP32_WIFI_AMPDU_TX_ENABLED",
                        "name": "ESP32_WIFI_AMPDU_TX_ENABLED",
                        "range": null,
                        "title": "WiFi AMPDU TX",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ESP32_WIFI_AMPDU_RX_ENABLED",
                                "help": "Set the size of WiFi Block Ack RX window. Generally a bigger value means higher throughput and better\ncompatibility but more memory. Most of time we should NOT change the default value unless special\nreason, e.g. test the maximum UDP RX throughput with iperf etc. For iperf test in shieldbox, the\nrecommended value is 9~12. If PSRAM is used and WiFi memory is prefered to allocat in PSRAM first,\nthe default and minimum value should be 16 to achieve better throughput and compatibility with both\nstations and APs.",
                                "id": "ESP32_WIFI_RX_BA_WIN",
                                "name": "ESP32_WIFI_RX_BA_WIN",
                                "range": [
                                    2,
                                    32
                                ],
                                "title": "WiFi AMPDU RX BA window size",
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "help": "Select this option to enable AMPDU RX feature",
                        "id": "ESP32_WIFI_AMPDU_RX_ENABLED",
                        "name": "ESP32_WIFI_AMPDU_RX_ENABLED",
                        "range": null,
                        "title": "WiFi AMPDU RX",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP32_SPIRAM_SUPPORT || ESP32S2_SPIRAM_SUPPORT || ESP32S3_SPIRAM_SUPPORT",
                        "help": "Select this option to enable AMSDU TX feature",
                        "id": "ESP32_WIFI_AMSDU_TX_ENABLED",
                        "name": "ESP32_WIFI_AMSDU_TX_ENABLED",
                        "range": null,
                        "title": "WiFi AMSDU TX",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Select this option to enable WiFi NVS flash",
                        "id": "ESP32_WIFI_NVS_ENABLED",
                        "name": "ESP32_WIFI_NVS_ENABLED",
                        "range": null,
                        "title": "WiFi NVS flash",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_WIFI_TASK_CORE_ID>",
                                "help": null,
                                "id": "ESP32_WIFI_TASK_PINNED_TO_CORE_0",
                                "name": "ESP32_WIFI_TASK_PINNED_TO_CORE_0",
                                "range": null,
                                "title": "Core 0",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP32_WIFI_TASK_CORE_ID>",
                                "help": null,
                                "id": "ESP32_WIFI_TASK_PINNED_TO_CORE_1",
                                "name": "ESP32_WIFI_TASK_PINNED_TO_CORE_1",
                                "range": null,
                                "title": "Core 1",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!FREERTOS_UNICORE",
                        "help": "Pinned WiFi task to core 0 or core 1.",
                        "id": "component-config-wi-fi-wifi-task-core-id",
                        "name": "ESP32_WIFI_TASK_CORE_ID",
                        "title": "WiFi Task Core ID",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "ESP-MESH utilizes beacon frames to detect and resolve root node conflicts (see documentation). However the\ndefault length of a beacon frame can simultaneously hold only five root node identifier structures,\nmeaning that a root node conflict of up to five nodes can be detected at one time. In the occurence of\nmore root nodes conflict involving more than five root nodes, the conflict resolution process will detect\nfive of the root nodes, resolve the conflict, and re-detect more root nodes. This process will repeat\nuntil all root node conflicts are resolved. However this process can generally take a very long time.\n\nTo counter this situation, the beacon frame length can be increased such that more root nodes can be\ndetected simultaneously. Each additional root node will require 36 bytes and should be added ontop of the\ndefault beacon frame length of\n752 bytes. For example, if you want to detect 10 root nodes simultaneously, you need to set the beacon\nframe length as\n932 (752+36*5).\n\nSetting a longer beacon length also assists with debugging as the conflicting root nodes can be identified\nmore quickly.",
                        "id": "ESP32_WIFI_SOFTAP_BEACON_MAX_LEN",
                        "name": "ESP32_WIFI_SOFTAP_BEACON_MAX_LEN",
                        "range": [
                            752,
                            1256
                        ],
                        "title": "Max length of WiFi SoftAP Beacon",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Set the number of WiFi management short buffer.",
                        "id": "ESP32_WIFI_MGMT_SBUF_NUM",
                        "name": "ESP32_WIFI_MGMT_SBUF_NUM",
                        "range": [
                            6,
                            32
                        ],
                        "title": "WiFi mgmt short buffer number",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Select this option to place frequently called Wi-Fi library functions in IRAM.\nWhen this option is disabled, more than 10Kbytes of IRAM memory will be saved\nbut Wi-Fi throughput will be reduced.",
                        "id": "ESP32_WIFI_IRAM_OPT",
                        "name": "ESP32_WIFI_IRAM_OPT",
                        "range": null,
                        "title": "WiFi IRAM speed optimization",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Select this option to place frequently called Wi-Fi library RX functions in IRAM.\nWhen this option is disabled, more than 17Kbytes of IRAM memory will be saved\nbut Wi-Fi performance will be reduced.",
                        "id": "ESP32_WIFI_RX_IRAM_OPT",
                        "name": "ESP32_WIFI_RX_IRAM_OPT",
                        "range": null,
                        "title": "WiFi RX IRAM speed optimization",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "WPA_MBEDTLS_CRYPTO",
                        "help": "Select this option to allow the device to establish a WPA3-Personal connection with eligible AP's.\nPMF (Protected Management Frames) is a prerequisite feature for a WPA3 connection, it needs to be\nexplicitly configured before attempting connection. Please refer to the Wi-Fi Driver API Guide for details.",
                        "id": "ESP32_WIFI_ENABLE_WPA3_SAE",
                        "name": "ESP32_WIFI_ENABLE_WPA3_SAE",
                        "range": null,
                        "title": "Enable WPA3-Personal",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ESP_WIFI_SLP_IRAM_OPT",
                                "help": "The minimum timeout for waiting to receive data, unit: milliseconds.",
                                "id": "ESP_WIFI_SLP_DEFAULT_MIN_ACTIVE_TIME",
                                "name": "ESP_WIFI_SLP_DEFAULT_MIN_ACTIVE_TIME",
                                "range": null,
                                "title": "Minimum active time",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "ESP_WIFI_SLP_IRAM_OPT",
                                "help": "The maximum time that wifi keep alive, unit: seconds.",
                                "id": "ESP_WIFI_SLP_DEFAULT_MAX_ACTIVE_TIME",
                                "name": "ESP_WIFI_SLP_DEFAULT_MAX_ACTIVE_TIME",
                                "range": null,
                                "title": "Maximum keep alive time",
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "help": "Select this option to place called Wi-Fi library TBTT process and receive beacon functions in IRAM.\nSome functions can be put in IRAM either by ESP32_WIFI_IRAM_OPT and ESP32_WIFI_RX_IRAM_OPT, or this one.\nIf already enabled ESP32_WIFI_IRAM_OPT, the other 7.3KB IRAM memory would be taken by this option.\nIf already enabled ESP32_WIFI_RX_IRAM_OPT, the other 1.3KB IRAM memory would be taken by this option.\nIf neither of them are enabled, the other 7.4KB IRAM memory would be taken by this option.\nWi-Fi power-save mode average current would be reduced if this option is enabled.",
                        "id": "ESP_WIFI_SLP_IRAM_OPT",
                        "name": "ESP_WIFI_SLP_IRAM_OPT",
                        "range": null,
                        "title": "WiFi SLP IRAM speed optimization",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "ESP_WIFI_FTM_ENABLE",
                                "help": null,
                                "id": "ESP_WIFI_FTM_INITIATOR_SUPPORT",
                                "name": "ESP_WIFI_FTM_INITIATOR_SUPPORT",
                                "range": null,
                                "title": "FTM Initiator support",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "ESP_WIFI_FTM_ENABLE",
                                "help": null,
                                "id": "ESP_WIFI_FTM_RESPONDER_SUPPORT",
                                "name": "ESP_WIFI_FTM_RESPONDER_SUPPORT",
                                "range": null,
                                "title": "FTM Responder support",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "IDF_TARGET_ESP32S2 || IDF_TARGET_ESP32C3 || IDF_TARGET_ESP32S3",
                        "help": "Enable feature Fine Timing Measurement for calculating WiFi Round-Trip-Time (RTT).",
                        "id": "ESP_WIFI_FTM_ENABLE",
                        "name": "ESP_WIFI_FTM_ENABLE",
                        "range": null,
                        "title": "WiFi FTM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Select this option to enable power_management for station when disconnected.\nChip will do modem-sleep when rf module is not in use any more.",
                        "id": "ESP_WIFI_STA_DISCONNECTED_PM_ENABLE",
                        "name": "ESP_WIFI_STA_DISCONNECTED_PM_ENABLE",
                        "range": null,
                        "title": "Power Management for station at disconnected",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!BT_ENABLED && (IDF_TARGET_ESP32S2 || IDF_TARGET_ESP32C3)",
                        "help": "If enabled, HW External coexistence arbitration is managed by GPIO pins.\nIt can support three types of wired combinations so far which are 1-wired/2-wired/3-wired.\nUser can select GPIO pins in application code with configure interfaces.\n\nThis function depends on BT-off\nbecause currently we don't support external coex and internal coex simultaneously.",
                        "id": "ESP_WIFI_EXTERNAL_COEXIST_ENABLE",
                        "name": "ESP_WIFI_EXTERNAL_COEXIST_ENABLE",
                        "range": null,
                        "title": "WiFi External Coexistence",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ESP32C3 || IDF_TARGET_ESP32S3",
                        "help": "Select this option to enable GCMP support. GCMP support is compulsory for WiFi Suite-B support.",
                        "id": "ESP_WIFI_GCMP_SUPPORT",
                        "name": "ESP_WIFI_GCMP_SUPPORT",
                        "range": null,
                        "title": "WiFi GCMP Support(GCMP128 and GCMP256)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Select this option to enable GMAC support. GMAC support is compulsory for WiFi 192 bit certification.",
                        "id": "ESP_WIFI_GMAC_SUPPORT",
                        "name": "ESP_WIFI_GMAC_SUPPORT",
                        "range": null,
                        "title": "WiFi GMAC Support(GMAC128 and GMAC256)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "WiFi module can be compiled without SoftAP to save code size.",
                        "id": "ESP_WIFI_SOFTAP_SUPPORT",
                        "name": "ESP_WIFI_SOFTAP_SUPPORT",
                        "range": null,
                        "title": "WiFi SoftAP Support",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-wi-fi",
                "title": "Wi-Fi",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "!SPIRAM_ALLOW_STACK_EXTERNAL_MEMORY && <choice ESP_COREDUMP_TO_FLASH_OR_UART>",
                                "help": null,
                                "id": "ESP_COREDUMP_ENABLE_TO_FLASH",
                                "name": "ESP_COREDUMP_ENABLE_TO_FLASH",
                                "range": null,
                                "title": "Flash",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_COREDUMP_TO_FLASH_OR_UART>",
                                "help": null,
                                "id": "ESP_COREDUMP_ENABLE_TO_UART",
                                "name": "ESP_COREDUMP_ENABLE_TO_UART",
                                "range": null,
                                "title": "UART",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_COREDUMP_TO_FLASH_OR_UART>",
                                "help": null,
                                "id": "ESP_COREDUMP_ENABLE_TO_NONE",
                                "name": "ESP_COREDUMP_ENABLE_TO_NONE",
                                "range": null,
                                "title": "None",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Select place to store core dump: flash, uart or none (to disable core dumps generation).\n\nCore dumps to Flash are not available if PSRAM is used for task stacks.\n\nIf core dump is configured to be stored in flash and custom partition table is used add\ncorresponding entry to your CSV. For examples, please see predefined partition table CSV descriptions\nin the components/partition_table directory.",
                        "id": "component-config-core-dump-data-destination",
                        "name": "ESP_COREDUMP_TO_FLASH_OR_UART",
                        "title": "Data destination",
                        "type": "choice"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP_COREDUMP_DATA_FORMAT>",
                                "help": null,
                                "id": "ESP_COREDUMP_DATA_FORMAT_BIN",
                                "name": "ESP_COREDUMP_DATA_FORMAT_BIN",
                                "range": null,
                                "title": "Binary format",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_COREDUMP_DATA_FORMAT>",
                                "help": null,
                                "id": "ESP_COREDUMP_DATA_FORMAT_ELF",
                                "name": "ESP_COREDUMP_DATA_FORMAT_ELF",
                                "range": null,
                                "title": "ELF format",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!ESP_COREDUMP_ENABLE_TO_NONE",
                        "help": "Select the data format for core dump.",
                        "id": "component-config-core-dump-core-dump-data-format",
                        "name": "ESP_COREDUMP_DATA_FORMAT",
                        "title": "Core dump data format",
                        "type": "choice"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP_COREDUMP_CHECKSUM>",
                                "help": null,
                                "id": "ESP_COREDUMP_CHECKSUM_CRC32",
                                "name": "ESP_COREDUMP_CHECKSUM_CRC32",
                                "range": null,
                                "title": "Use CRC32 for integrity verification",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "ESP_COREDUMP_DATA_FORMAT_ELF && IDF_TARGET_ESP32 && <choice ESP_COREDUMP_CHECKSUM>",
                                "help": null,
                                "id": "ESP_COREDUMP_CHECKSUM_SHA256",
                                "name": "ESP_COREDUMP_CHECKSUM_SHA256",
                                "range": null,
                                "title": "Use SHA256 for integrity verification",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!ESP_COREDUMP_ENABLE_TO_NONE",
                        "help": "Select the integrity check for the core dump.",
                        "id": "component-config-core-dump-core-dump-data-integrity-check",
                        "name": "ESP_COREDUMP_CHECKSUM",
                        "title": "Core dump data integrity check",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_COREDUMP_ENABLE_TO_FLASH",
                        "help": "When enabled, if any data are found on the flash core dump partition,\nthey will be checked by calculating their checksum.",
                        "id": "ESP_COREDUMP_CHECK_BOOT",
                        "name": "ESP_COREDUMP_CHECK_BOOT",
                        "range": null,
                        "title": "Check core dump data integrity on boot",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enables/disable core dump module.",
                        "id": "ESP_COREDUMP_ENABLE",
                        "name": "ESP_COREDUMP_ENABLE",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_COREDUMP_ENABLE",
                        "help": "Maximum number of tasks snapshots in core dump.",
                        "id": "ESP_COREDUMP_MAX_TASKS_NUM",
                        "name": "ESP_COREDUMP_MAX_TASKS_NUM",
                        "range": null,
                        "title": "Maximum number of tasks",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_COREDUMP_ENABLE_TO_UART",
                        "help": "Config delay (in ms) before printing core dump to UART.\nDelay can be interrupted by pressing Enter key.",
                        "id": "ESP_COREDUMP_UART_DELAY",
                        "name": "ESP_COREDUMP_UART_DELAY",
                        "range": null,
                        "title": "Delay before print to UART",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_COREDUMP_ENABLE && IDF_TARGET_ARCH_RISCV",
                        "help": "Size of the memory to be reserved for core dump stack. If 0 core dump process will run on\nthe stack of crashed task/ISR, otherwise special stack will be allocated.\nTo ensure that core dump itself will not overflow task/ISR stack set this to the value above 800.\nNOTE: It eats DRAM.",
                        "id": "ESP_COREDUMP_STACK_SIZE",
                        "name": "ESP_COREDUMP_STACK_SIZE",
                        "range": null,
                        "title": "Reserved stack size",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "ESP_COREDUMP_DATA_FORMAT_ELF && ESP_COREDUMP_ENABLE_TO_FLASH && IDF_TARGET_ARCH_RISCV",
                        "help": "Size of the buffer that would be reserved for extracting backtrace info summary.\nThis buffer will contain the stack dump of the crashed task. This dump is useful in generating backtrace",
                        "id": "ESP_COREDUMP_SUMMARY_STACKDUMP_SIZE",
                        "name": "ESP_COREDUMP_SUMMARY_STACKDUMP_SIZE",
                        "range": null,
                        "title": "Size of the stack dump buffer",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice ESP_COREDUMP_DECODE>",
                                "help": null,
                                "id": "ESP_COREDUMP_DECODE_INFO",
                                "name": "ESP_COREDUMP_DECODE_INFO",
                                "range": null,
                                "title": "Decode and show summary (info_corefile)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice ESP_COREDUMP_DECODE>",
                                "help": null,
                                "id": "ESP_COREDUMP_DECODE_DISABLE",
                                "name": "ESP_COREDUMP_DECODE_DISABLE",
                                "range": null,
                                "title": "Don't decode",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "ESP_COREDUMP_ENABLE_TO_UART",
                        "help": null,
                        "id": "component-config-core-dump-handling-of-uart-core-dumps-in-idf-monitor",
                        "name": "ESP_COREDUMP_DECODE",
                        "title": "Handling of UART core dumps in IDF Monitor",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "ESP_COREDUMP_DECODE",
                        "name": "ESP_COREDUMP_DECODE",
                        "range": null,
                        "title": null,
                        "type": "string"
                    }
                ],
                "depends_on": null,
                "id": "component-config-core-dump",
                "title": "Core dump",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This version of FreeRTOS normally takes control of all cores of\nthe CPU. Select this if you only want to start it on the first core.\nThis is needed when e.g. another process needs complete control\nover the second core.\n\n# This invisible config value sets the value of tskNO_AFFINITY in task.h.\n# Intended to be used as a constant from other Kconfig files.\n# Value is (32-bit) INT_MAX.",
                        "id": "FREERTOS_UNICORE",
                        "name": "FREERTOS_UNICORE",
                        "range": null,
                        "title": "Run FreeRTOS only on first core",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "FREERTOS_NO_AFFINITY",
                        "name": "FREERTOS_NO_AFFINITY",
                        "range": null,
                        "title": null,
                        "type": "hex"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "FREERTOS_TICK_SUPPORT_CORETIMER",
                        "name": "FREERTOS_TICK_SUPPORT_CORETIMER",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "FREERTOS_TICK_SUPPORT_SYSTIMER",
                        "name": "FREERTOS_TICK_SUPPORT_SYSTIMER",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "FREERTOS_TICK_SUPPORT_CORETIMER && <choice FREERTOS_CORETIMER>",
                                "help": "Select this to use timer 0",
                                "id": "FREERTOS_CORETIMER_0",
                                "name": "FREERTOS_CORETIMER_0",
                                "range": null,
                                "title": "Timer 0 (int 6, level 1)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "FREERTOS_TICK_SUPPORT_CORETIMER && <choice FREERTOS_CORETIMER>",
                                "help": "Select this to use timer 1",
                                "id": "FREERTOS_CORETIMER_1",
                                "name": "FREERTOS_CORETIMER_1",
                                "range": null,
                                "title": "Timer 1 (int 15, level 3)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "FREERTOS_TICK_SUPPORT_SYSTIMER && <choice FREERTOS_CORETIMER>",
                                "help": "Select this to use systimer with the 1 interrupt priority.",
                                "id": "FREERTOS_CORETIMER_SYSTIMER_LVL1",
                                "name": "FREERTOS_CORETIMER_SYSTIMER_LVL1",
                                "range": null,
                                "title": "SYSTIMER 0 (level 1)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "FREERTOS_TICK_SUPPORT_SYSTIMER && <choice FREERTOS_CORETIMER>",
                                "help": "Select this to use systimer with the 3 interrupt priority.",
                                "id": "FREERTOS_CORETIMER_SYSTIMER_LVL3",
                                "name": "FREERTOS_CORETIMER_SYSTIMER_LVL3",
                                "range": null,
                                "title": "SYSTIMER 0 (level 3)",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "FreeRTOS needs a timer with an associated interrupt to use as\nthe main tick source to increase counters, run timers and do\npre-emptive multitasking with. There are multiple timers available\nto do this, with different interrupt priorities. Check",
                        "id": "component-config-freertos-xtensa-timer-to-use-as-the-freertos-tick-source",
                        "name": "FREERTOS_CORETIMER",
                        "title": "Xtensa timer to use as the FreeRTOS tick source",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "FREERTOS_SYSTICK_USES_SYSTIMER",
                        "name": "FREERTOS_SYSTICK_USES_SYSTIMER",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "FREERTOS_SYSTICK_USES_CCOUNT",
                        "name": "FREERTOS_SYSTICK_USES_CCOUNT",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "FREERTOS_UNICORE",
                        "help": "On most platforms there are instructions can speedup the ready task\nsearching. Enabling this option the FreeRTOS with this instructions\nsupport will be built.",
                        "id": "FREERTOS_OPTIMIZED_SCHEDULER",
                        "name": "FREERTOS_OPTIMIZED_SCHEDULER",
                        "range": null,
                        "title": "Enable FreeRTOS p\u013aatform optimized scheduler",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Select the tick rate at which FreeRTOS does pre-emptive context switching.",
                        "id": "FREERTOS_HZ",
                        "name": "FREERTOS_HZ",
                        "range": [
                            1,
                            1000
                        ],
                        "title": "Tick rate (Hz)",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Some functions in FreeRTOS have not been thoroughly tested yet when moving to\nthe SMP implementation of FreeRTOS. When this option is enabled, these fuctions\nwill throw an assert().",
                        "id": "FREERTOS_ASSERT_ON_UNTESTED_FUNCTION",
                        "name": "FREERTOS_ASSERT_ON_UNTESTED_FUNCTION",
                        "range": null,
                        "title": "Halt when an SMP-untested function is called",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice FREERTOS_CHECK_STACKOVERFLOW>",
                                "help": "Do not check for stack overflows (configCHECK_FOR_STACK_OVERFLOW=0)",
                                "id": "FREERTOS_CHECK_STACKOVERFLOW_NONE",
                                "name": "FREERTOS_CHECK_STACKOVERFLOW_NONE",
                                "range": null,
                                "title": "No checking",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice FREERTOS_CHECK_STACKOVERFLOW>",
                                "help": "Check for stack overflows on each context switch by checking if\nthe stack pointer is in a valid range. Quick but does not detect\nstack overflows that happened between context switches\n(configCHECK_FOR_STACK_OVERFLOW=1)",
                                "id": "FREERTOS_CHECK_STACKOVERFLOW_PTRVAL",
                                "name": "FREERTOS_CHECK_STACKOVERFLOW_PTRVAL",
                                "range": null,
                                "title": "Check by stack pointer value",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice FREERTOS_CHECK_STACKOVERFLOW>",
                                "help": "Places some magic bytes at the end of the stack area and on each\ncontext switch, check if these bytes are still intact. More thorough\nthan just checking the pointer, but also slightly slower.\n(configCHECK_FOR_STACK_OVERFLOW=2)",
                                "id": "FREERTOS_CHECK_STACKOVERFLOW_CANARY",
                                "name": "FREERTOS_CHECK_STACKOVERFLOW_CANARY",
                                "range": null,
                                "title": "Check using canary bytes",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "FreeRTOS can check for stack overflows in threads and trigger an user function\ncalled vApplicationStackOverflowHook when this happens.",
                        "id": "component-config-freertos-check-for-stack-overflow",
                        "name": "FREERTOS_CHECK_STACKOVERFLOW",
                        "title": "Check for stack overflow",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "FreeRTOS can check if a stack has overflown its bounds by checking either the value of\nthe stack pointer or by checking the integrity of canary bytes. (See FREERTOS_CHECK_STACKOVERFLOW\nfor more information.) These checks only happen on a context switch, and the situation that caused\nthe stack overflow may already be long gone by then. This option will use the last debug memory\nwatchpoint to allow breaking into the debugger (or panic'ing) as soon as any\nof the last 32 bytes on the stack of a task are overwritten. The side effect is that using gdb, you\neffectively have one hardware watchpoint less because the last one is overwritten as soon as a task\nswitch happens.\n\nAnother consequence is that due to alignment requirements of the watchpoint, the usable stack size\ndecreases by up to 60 bytes. This is because the watchpoint region has to be aligned to its size and the\nsize for the stack watchpoint in IDF is 32 bytes.\n\nThis check only triggers if the stack overflow writes within 32 bytes near the end of the stack, rather\nthan overshooting further, so it is worth combining this approach with one of the other stack overflow\ncheck methods.\n\nWhen this watchpoint is hit, gdb will stop with a SIGTRAP message. When no JTAG OCD is attached, esp-idf\nwill panic on an unhandled debug exception.",
                        "id": "FREERTOS_WATCHPOINT_END_OF_STACK",
                        "name": "FREERTOS_WATCHPOINT_END_OF_STACK",
                        "range": null,
                        "title": "Set a debug watchpoint as a stack overflow check",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "If this option is enabled, interrupt stack frame will be modified to\npoint to the code of the interrupted task as its return address.\nThis helps the debugger (or the panic handler) show a backtrace from\nthe interrupt to the task which was interrupted. This also works for\nnested interrupts: higer level interrupt stack can be traced back to the\nlower level interrupt.\nThis option adds 4 instructions to the interrupt dispatching code.",
                        "id": "FREERTOS_INTERRUPT_BACKTRACE",
                        "name": "FREERTOS_INTERRUPT_BACKTRACE",
                        "range": null,
                        "title": "Enable backtrace from interrupt to task context",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "FreeRTOS has the ability to store per-thread pointers in the task\ncontrol block. This controls the number of pointers available.\n\nThis value must be at least 1. Index 0 is reserved for use by the pthreads API\nthread-local-storage. Other indexes can be used for any desired purpose.",
                        "id": "FREERTOS_THREAD_LOCAL_STORAGE_POINTERS",
                        "name": "FREERTOS_THREAD_LOCAL_STORAGE_POINTERS",
                        "range": [
                            1,
                            256
                        ],
                        "title": "Number of thread local storage pointers",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "!COMPILER_OPTIMIZATION_ASSERTIONS_DISABLE && <choice FREERTOS_ASSERT>",
                                "help": "If a FreeRTOS configASSERT() fails, FreeRTOS will abort() and\nhalt execution. The panic handler can be configured to handle\nthe outcome of an abort() in different ways.\n\nIf assertions are disabled for the entire project, they are also\ndisabled in FreeRTOS and this option is unavailable.",
                                "id": "FREERTOS_ASSERT_FAIL_ABORT",
                                "name": "FREERTOS_ASSERT_FAIL_ABORT",
                                "range": null,
                                "title": "abort() on failed assertions",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice FREERTOS_ASSERT>",
                                "help": "If a FreeRTOS assertion fails, print it out and continue.",
                                "id": "FREERTOS_ASSERT_FAIL_PRINT_CONTINUE",
                                "name": "FREERTOS_ASSERT_FAIL_PRINT_CONTINUE",
                                "range": null,
                                "title": "Print and continue failed assertions",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice FREERTOS_ASSERT>",
                                "help": "FreeRTOS configASSERT() will not be compiled into the binary.",
                                "id": "FREERTOS_ASSERT_DISABLE",
                                "name": "FREERTOS_ASSERT_DISABLE",
                                "range": null,
                                "title": "Disable FreeRTOS assertions",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Failed FreeRTOS configASSERT() assertions can be configured to\nbehave in different ways.\n\nBy default these behave the same as the global project assert settings.",
                        "id": "component-config-freertos-freertos-assertions",
                        "name": "FREERTOS_ASSERT",
                        "title": "FreeRTOS assertions",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "The idle task has its own stack, sized in bytes. The default size is enough for most uses. Size can be\nreduced to 768 bytes if no (or simple) FreeRTOS idle hooks are used and pthread local storage or FreeRTOS\nlocal storage cleanup callbacks are not used.\n\nThe stack size may need to be increased above the default if the app installs idle or thread local storage\ncleanup hooks that use a lot of stack memory.",
                        "id": "FREERTOS_IDLE_TASK_STACKSIZE",
                        "name": "FREERTOS_IDLE_TASK_STACKSIZE",
                        "range": [
                            768,
                            32768
                        ],
                        "title": "Idle Task stack size",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "The interrupt handlers have their own stack. The size of the stack can be defined here.\nEach processor has its own stack, so the total size occupied will be twice this.",
                        "id": "FREERTOS_ISR_STACKSIZE",
                        "name": "FREERTOS_ISR_STACKSIZE",
                        "range": [
                            2096,
                            32768
                        ],
                        "title": "ISR stack size",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "FreeRTOS offers a number of hooks/callback functions that are called when a timer\ntick happens, the idle thread runs etc. esp-idf replaces these by runtime registerable\nhooks using the esp_register_freertos_xxx_hook system, but for legacy reasons the old\nhooks can also still be enabled. Please enable this only if you have code that for some\nreason can't be migrated to the esp_register_freertos_xxx_hook system.",
                        "id": "FREERTOS_LEGACY_HOOKS",
                        "name": "FREERTOS_LEGACY_HOOKS",
                        "range": null,
                        "title": "Use FreeRTOS legacy hooks",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Changes the maximum task name length. Each task allocated will\ninclude this many bytes for a task name. Using a shorter value\nsaves a small amount of RAM, a longer value allows more complex\nnames.\n\nFor most uses, the default of 16 is OK.",
                        "id": "FREERTOS_MAX_TASK_NAME_LEN",
                        "name": "FREERTOS_MAX_TASK_NAME_LEN",
                        "range": [
                            1,
                            256
                        ],
                        "title": "Maximum task name length",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "FREERTOS_SUPPORT_STATIC_ALLOCATION",
                        "name": "FREERTOS_SUPPORT_STATIC_ALLOCATION",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enable this option to make FreeRTOS call the static task clean up hook when a task is deleted.\n\nBear in mind that if this option is enabled you will need to implement the following function::\n\n    void vPortCleanUpTCB ( void *pxTCB ) {\n        // place clean up code here\n    }",
                        "id": "FREERTOS_ENABLE_STATIC_TASK_CLEAN_UP",
                        "name": "FREERTOS_ENABLE_STATIC_TASK_CLEAN_UP",
                        "range": null,
                        "title": "Enable static task clean up hook",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "The timer service task (primarily) makes use of existing FreeRTOS features, allowing timer\nfunctionality to be added to an application with minimal impact on the size of the application's\nexecutable binary.\n\nUse this constant to define the priority that the timer task will run at.",
                        "id": "FREERTOS_TIMER_TASK_PRIORITY",
                        "name": "FREERTOS_TIMER_TASK_PRIORITY",
                        "range": [
                            1,
                            25
                        ],
                        "title": "FreeRTOS timer task priority",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "The timer service task (primarily) makes use of existing FreeRTOS features, allowing timer\nfunctionality to be added to an application with minimal impact on the size of the application's\nexecutable binary.\n\nUse this constant to define the size (in bytes) of the stack allocated for the timer task.",
                        "id": "FREERTOS_TIMER_TASK_STACK_DEPTH",
                        "name": "FREERTOS_TIMER_TASK_STACK_DEPTH",
                        "range": [
                            1536,
                            32768
                        ],
                        "title": "FreeRTOS timer task stack size",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "FreeRTOS provides a set of timer related API functions. Many of these functions use a standard\nFreeRTOS queue to send commands to the timer service task. The queue used for this purpose is\ncalled the 'timer command queue'. The 'timer command queue' is private to the FreeRTOS timer\nimplementation, and cannot be accessed directly.\n\nFor most uses the default value of 10 is OK.",
                        "id": "FREERTOS_TIMER_QUEUE_LENGTH",
                        "name": "FREERTOS_TIMER_QUEUE_LENGTH",
                        "range": [
                            5,
                            20
                        ],
                        "title": "FreeRTOS timer queue length",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "FreeRTOS uses the queue registry as a means for kernel aware debuggers to locate queues, semaphores,\nand mutexes. The registry allows for a textual name to be associated with a queue for easy identification\nwithin a debugging GUI. A value of 0 will disable queue registry functionality, and a value larger than 0\nwill specify the number of queues/semaphores/mutexes that the registry can hold.",
                        "id": "FREERTOS_QUEUE_REGISTRY_SIZE",
                        "name": "FREERTOS_QUEUE_REGISTRY_SIZE",
                        "range": [
                            0,
                            20
                        ],
                        "title": "FreeRTOS queue registry size",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "FREERTOS_USE_STATS_FORMATTING_FUNCTIONS",
                                        "help": "If enabled, this will include an extra column when vTaskList is called\nto display the CoreID the task is pinned to (0,1) or -1 if not pinned.",
                                        "id": "FREERTOS_VTASKLIST_INCLUDE_COREID",
                                        "name": "FREERTOS_VTASKLIST_INCLUDE_COREID",
                                        "range": null,
                                        "title": "Enable display of xCoreID in vTaskList",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "FREERTOS_USE_TRACE_FACILITY",
                                "help": "If enabled, configUSE_STATS_FORMATTING_FUNCTIONS will be defined as 1 in\nFreeRTOS. This will allow the usage of stats formatting functions such\nas vTaskList().",
                                "id": "FREERTOS_USE_STATS_FORMATTING_FUNCTIONS",
                                "name": "FREERTOS_USE_STATS_FORMATTING_FUNCTIONS",
                                "range": null,
                                "title": "Enable FreeRTOS stats formatting functions",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "If enabled, configUSE_TRACE_FACILITY will be defined as 1 in FreeRTOS.\nThis will allow the usage of trace facility functions such as\nuxTaskGetSystemState().",
                        "id": "FREERTOS_USE_TRACE_FACILITY",
                        "name": "FREERTOS_USE_TRACE_FACILITY",
                        "range": null,
                        "title": "Enable FreeRTOS trace facility",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice FREERTOS_RUN_TIME_STATS_CLK>",
                                        "help": "ESP Timer will be used as the clock source for FreeRTOS run time stats.\nThe ESP Timer runs at a frequency of 1MHz regardless of Dynamic\nFrequency Scaling. Therefore the ESP Timer will overflow in\napproximately 4290 seconds.",
                                        "id": "FREERTOS_RUN_TIME_STATS_USING_ESP_TIMER",
                                        "name": "FREERTOS_RUN_TIME_STATS_USING_ESP_TIMER",
                                        "range": null,
                                        "title": "Use ESP TIMER for run time stats",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "FREERTOS_SYSTICK_USES_CCOUNT && <choice FREERTOS_RUN_TIME_STATS_CLK>",
                                        "help": "CPU Clock will be used as the clock source for the generation of run\ntime stats. The CPU Clock has a frequency dependent on\nESP32_DEFAULT_CPU_FREQ_MHZ and Dynamic Frequency Scaling (DFS).\nTherefore the CPU Clock frequency can fluctuate between 80 to 240MHz.\nRun time stats generated using the CPU Clock represents the number of\nCPU cycles each task is allocated and DOES NOT reflect the amount of\ntime each task runs for (as CPU clock frequency can change). If the CPU\nclock consistently runs at the maximum frequency of 240MHz, it will\noverflow in approximately 17 seconds.",
                                        "id": "FREERTOS_RUN_TIME_STATS_USING_CPU_CLK",
                                        "name": "FREERTOS_RUN_TIME_STATS_USING_CPU_CLK",
                                        "range": null,
                                        "title": "Use CPU Clock for run time stats",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "FREERTOS_GENERATE_RUN_TIME_STATS",
                                "help": "Choose the clock source for FreeRTOS run time stats. Options are CPU0's\nCPU Clock or the ESP Timer. Both clock sources are 32 bits. The CPU\nClock can run at a higher frequency hence provide a finer resolution\nbut will overflow much quicker. Note that run time stats are only valid\nuntil the clock source overflows.",
                                "id": "component-config-freertos-enable-freertos-to-collect-run-time-stats-choose-the-clock-source-for-run-time-stats",
                                "name": "FREERTOS_RUN_TIME_STATS_CLK",
                                "title": "Choose the clock source for run time stats",
                                "type": "choice"
                            }
                        ],
                        "depends_on": null,
                        "help": "If enabled, configGENERATE_RUN_TIME_STATS will be defined as 1 in\nFreeRTOS. This will allow FreeRTOS to collect information regarding the\nusage of processor time amongst FreeRTOS tasks. Run time stats are\ngenerated using either the ESP Timer or the CPU Clock as the clock\nsource (Note that run time stats are only valid until the clock source\noverflows). The function vTaskGetRunTimeStats() will also be available\nif FREERTOS_USE_STATS_FORMATTING_FUNCTIONS and\nFREERTOS_USE_TRACE_FACILITY are enabled. vTaskGetRunTimeStats() will\ndisplay the run time of each task as a % of the total run time of all\nCPUs (task run time / no of CPUs) / (total run time / 100 )",
                        "id": "FREERTOS_GENERATE_RUN_TIME_STATS",
                        "name": "FREERTOS_GENERATE_RUN_TIME_STATS",
                        "range": null,
                        "title": "Enable FreeRTOS to collect run time stats",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "FREERTOS_USE_TICKLESS_IDLE",
                                "help": "FreeRTOS will enter light sleep mode if no tasks need to run for this number\nof ticks.",
                                "id": "FREERTOS_IDLE_TIME_BEFORE_SLEEP",
                                "name": "FREERTOS_IDLE_TIME_BEFORE_SLEEP",
                                "range": [
                                    2,
                                    4294967295
                                ],
                                "title": "Minimum number of ticks to enter sleep mode for",
                                "type": "int"
                            }
                        ],
                        "depends_on": "PM_ENABLE",
                        "help": "If power management support is enabled, FreeRTOS will be able to put\nthe system into light sleep mode when no tasks need to run for a number\nof ticks. This number can be set using FREERTOS_IDLE_TIME_BEFORE_SLEEP option.\nThis feature is also known as \"automatic light sleep\".\n\nNote that timers created using esp_timer APIs may prevent the system from\nentering sleep mode, even when no tasks need to run.\nTo skip unnecessary wake-up initialize a timer with the \"skip_unhandled_events\" option as true.\n\nIf disabled, automatic light sleep support will be disabled.",
                        "id": "FREERTOS_USE_TICKLESS_IDLE",
                        "name": "FREERTOS_USE_TICKLESS_IDLE",
                        "range": null,
                        "title": "Tickless idle support",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "COMPILER_OPTIMIZATION_DEFAULT",
                        "help": "If enabled, all FreeRTOS task functions will be enclosed in a wrapper function.\nIf a task function mistakenly returns (i.e. does not delete), the call flow will\nreturn to the wrapper function. The wrapper function will then log an error and\nabort the application. This option is also required for GDB backtraces and C++\nexceptions to work correctly inside top-level task functions.",
                        "id": "FREERTOS_TASK_FUNCTION_WRAPPER",
                        "name": "FREERTOS_TASK_FUNCTION_WRAPPER",
                        "range": null,
                        "title": "Enclose all task functions in a wrapper function",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "If enabled, assert that when a mutex semaphore is given, the task giving the\nsemaphore is the task which is currently holding the mutex.",
                        "id": "FREERTOS_CHECK_MUTEX_GIVEN_BY_OWNER",
                        "name": "FREERTOS_CHECK_MUTEX_GIVEN_BY_OWNER",
                        "range": null,
                        "title": "Check that mutex semaphore is given by owner task",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "If enabled, context of port*_CRITICAL calls (ISR or Non-ISR)\nwould be checked to be in compliance with Vanilla FreeRTOS.\ne.g Calling port*_CRITICAL from ISR context would cause assert failure",
                        "id": "FREERTOS_CHECK_PORT_CRITICAL_COMPLIANCE",
                        "name": "FREERTOS_CHECK_PORT_CRITICAL_COMPLIANCE",
                        "range": null,
                        "title": "Tests compliance with Vanilla FreeRTOS port*_CRITICAL calls",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "When enabled the selected Non-ISR FreeRTOS functions will be placed into Flash memory instead of IRAM.\nThis saves up to 8KB of IRAM depending on which functions are used.",
                        "id": "FREERTOS_PLACE_FUNCTIONS_INTO_FLASH",
                        "name": "FREERTOS_PLACE_FUNCTIONS_INTO_FLASH",
                        "range": null,
                        "title": "Place FreeRTOS functions into Flash",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Hidden option, gets selected by CONFIG_ESPxx_DEBUG_OCDAWARE",
                        "id": "FREERTOS_DEBUG_OCDAWARE",
                        "name": "FREERTOS_DEBUG_OCDAWARE",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ESP32",
                        "help": "When enabled, the usage of float type is allowed inside Level 1\nISRs.",
                        "id": "FREERTOS_FPU_IN_ISR",
                        "name": "FREERTOS_FPU_IN_ISR",
                        "range": null,
                        "title": "Allow use of float inside Level 1 ISR (EXPERIMENTAL)",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "FREERTOS_ENABLE_TASK_SNAPSHOT && !ESP_PANIC_HANDLER_IRAM",
                                "help": "When enabled, the functions related to snapshots, such as vTaskGetSnapshot or uxTaskGetSnapshotAll,\nwill be placed in flash. Note that if enabled, these functions cannot be called when cache is disabled.",
                                "id": "FREERTOS_PLACE_SNAPSHOT_FUNS_INTO_FLASH",
                                "name": "FREERTOS_PLACE_SNAPSHOT_FUNS_INTO_FLASH",
                                "range": null,
                                "title": "Place task snapshot functions into flash",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "When enabled, the functions related to snapshots, such as vTaskGetSnapshot or uxTaskGetSnapshotAll,\nare compiled and linked.",
                        "id": "FREERTOS_ENABLE_TASK_SNAPSHOT",
                        "name": "FREERTOS_ENABLE_TASK_SNAPSHOT",
                        "range": null,
                        "title": "Enable task snapshot functions",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-freertos",
                "title": "FreeRTOS",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice HAL_DEFAULT_ASSERTION_LEVEL>",
                                "help": null,
                                "id": "HAL_ASSERTION_EQUALS_SYSTEM",
                                "name": "HAL_ASSERTION_EQUALS_SYSTEM",
                                "range": null,
                                "title": "Same as system assertion level",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "COMPILER_OPTIMIZATION_ASSERTION_LEVEL >= 0 && <choice HAL_DEFAULT_ASSERTION_LEVEL>",
                                "help": null,
                                "id": "HAL_ASSERTION_DISABLE",
                                "name": "HAL_ASSERTION_DISABLE",
                                "range": null,
                                "title": "Disabled",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "COMPILER_OPTIMIZATION_ASSERTION_LEVEL >= 1 && <choice HAL_DEFAULT_ASSERTION_LEVEL>",
                                "help": null,
                                "id": "HAL_ASSERTION_SILIENT",
                                "name": "HAL_ASSERTION_SILIENT",
                                "range": null,
                                "title": "Silent",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "COMPILER_OPTIMIZATION_ASSERTION_LEVEL >= 2 && <choice HAL_DEFAULT_ASSERTION_LEVEL>",
                                "help": null,
                                "id": "HAL_ASSERTION_ENABLE",
                                "name": "HAL_ASSERTION_ENABLE",
                                "range": null,
                                "title": "Enabled",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Set the assert behavior / level for HAL component.\nHAL component assert level can be set separately,\nbut the level can't exceed the system assertion level.\ne.g. If the system assertion is disabled, then the HAL\nassertion can't be enabled either. If the system assertion\nis enable, then the HAL assertion can still be disabled\nby this Kconfig option.",
                        "id": "component-config-hardware-abstraction-layer-hal-and-low-level-ll--default-hal-assertion-level",
                        "name": "HAL_DEFAULT_ASSERTION_LEVEL",
                        "title": "Default HAL assertion level",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "HAL_DEFAULT_ASSERTION_LEVEL",
                        "name": "HAL_DEFAULT_ASSERTION_LEVEL",
                        "range": null,
                        "title": null,
                        "type": "int"
                    }
                ],
                "depends_on": null,
                "id": "component-config-hardware-abstraction-layer-hal-and-low-level-ll-",
                "title": "Hardware Abstraction Layer (HAL) and Low Level (LL)",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice HEAP_CORRUPTION_DETECTION>",
                                "help": null,
                                "id": "HEAP_POISONING_DISABLED",
                                "name": "HEAP_POISONING_DISABLED",
                                "range": null,
                                "title": "Basic (no poisoning)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice HEAP_CORRUPTION_DETECTION>",
                                "help": null,
                                "id": "HEAP_POISONING_LIGHT",
                                "name": "HEAP_POISONING_LIGHT",
                                "range": null,
                                "title": "Light impact",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice HEAP_CORRUPTION_DETECTION>",
                                "help": null,
                                "id": "HEAP_POISONING_COMPREHENSIVE",
                                "name": "HEAP_POISONING_COMPREHENSIVE",
                                "range": null,
                                "title": "Comprehensive",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enable heap poisoning features to detect heap corruption caused by out-of-bounds access to heap memory.\n\nSee the \"Heap Memory Debugging\" page of the IDF documentation\nfor a description of each level of heap corruption detection.",
                        "id": "component-config-heap-memory-debugging-heap-corruption-detection",
                        "name": "HEAP_CORRUPTION_DETECTION",
                        "title": "Heap corruption detection",
                        "type": "choice"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice HEAP_TRACING_DEST>",
                                "help": null,
                                "id": "HEAP_TRACING_OFF",
                                "name": "HEAP_TRACING_OFF",
                                "range": null,
                                "title": "Disabled",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice HEAP_TRACING_DEST>",
                                "help": null,
                                "id": "HEAP_TRACING_STANDALONE",
                                "name": "HEAP_TRACING_STANDALONE",
                                "range": null,
                                "title": "Standalone",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice HEAP_TRACING_DEST>",
                                "help": null,
                                "id": "HEAP_TRACING_TOHOST",
                                "name": "HEAP_TRACING_TOHOST",
                                "range": null,
                                "title": "Host-based",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enables the heap tracing API defined in esp_heap_trace.h.\n\nThis function causes a moderate increase in IRAM code side and a minor increase in heap function\n(malloc/free/realloc) CPU overhead, even when the tracing feature is not used.\nSo it's best to keep it disabled unless tracing is being used.",
                        "id": "component-config-heap-memory-debugging-heap-tracing",
                        "name": "HEAP_TRACING_DEST",
                        "title": "Heap tracing",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enables/disables heap tracing API.",
                        "id": "HEAP_TRACING",
                        "name": "HEAP_TRACING",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "HEAP_TRACING",
                        "help": "Number of stack frames to save when tracing heap operation callers.\n\nMore stack frames uses more memory in the heap trace buffer (and slows down allocation), but\ncan provide useful information.",
                        "id": "HEAP_TRACING_STACK_DEPTH",
                        "name": "HEAP_TRACING_STACK_DEPTH",
                        "range": null,
                        "title": "Heap tracing stack depth",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "!HEAP_POISONING_DISABLED",
                        "help": "Enables tracking the task responsible for each heap allocation.\n\nThis function depends on heap poisoning being enabled and adds four more bytes of overhead for each block\nallocated.",
                        "id": "HEAP_TASK_TRACKING",
                        "name": "HEAP_TASK_TRACKING",
                        "range": null,
                        "title": "Enable heap task tracking",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "When enabled, if a memory allocation operation fails it will cause a system abort.",
                        "id": "HEAP_ABORT_WHEN_ALLOCATION_FAILS",
                        "name": "HEAP_ABORT_WHEN_ALLOCATION_FAILS",
                        "range": null,
                        "title": "Abort if memory allocation fails",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-heap-memory-debugging",
                "title": "Heap memory debugging",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "IEEE802154_ENABLED",
                        "name": "IEEE802154_ENABLED",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "IEEE802154_ENABLED",
                        "help": "Override the shipped lib802154.a for internal builds.",
                        "id": "IEEE802154_LIB_FROM_INTERNAL_SRC",
                        "name": "IEEE802154_LIB_FROM_INTERNAL_SRC",
                        "range": null,
                        "title": "Build IEEE 802.15.4 libraries from source",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-ieee-802-15-4",
                "title": "IEEE 802.15.4",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>",
                                "help": null,
                                "id": "LOG_DEFAULT_LEVEL_NONE",
                                "name": "LOG_DEFAULT_LEVEL_NONE",
                                "range": null,
                                "title": "No output",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>",
                                "help": null,
                                "id": "LOG_DEFAULT_LEVEL_ERROR",
                                "name": "LOG_DEFAULT_LEVEL_ERROR",
                                "range": null,
                                "title": "Error",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>",
                                "help": null,
                                "id": "LOG_DEFAULT_LEVEL_WARN",
                                "name": "LOG_DEFAULT_LEVEL_WARN",
                                "range": null,
                                "title": "Warning",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>",
                                "help": null,
                                "id": "LOG_DEFAULT_LEVEL_INFO",
                                "name": "LOG_DEFAULT_LEVEL_INFO",
                                "range": null,
                                "title": "Info",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>",
                                "help": null,
                                "id": "LOG_DEFAULT_LEVEL_DEBUG",
                                "name": "LOG_DEFAULT_LEVEL_DEBUG",
                                "range": null,
                                "title": "Debug",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>",
                                "help": null,
                                "id": "LOG_DEFAULT_LEVEL_VERBOSE",
                                "name": "LOG_DEFAULT_LEVEL_VERBOSE",
                                "range": null,
                                "title": "Verbose",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Specify how much output to see in logs by default.\nYou can set lower verbosity level at runtime using\nesp_log_level_set function.\n\nBy default, this setting limits which log statements\nare compiled into the program. For example, selecting\n\"Warning\" would mean that changing log level to \"Debug\"\nat runtime will not be possible. To allow increasing log\nlevel above the default at runtime, see the next option.",
                        "id": "component-config-log-output-default-log-verbosity",
                        "name": "LOG_DEFAULT_LEVEL",
                        "title": "Default log verbosity",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "LOG_DEFAULT_LEVEL",
                        "name": "LOG_DEFAULT_LEVEL",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice LOG_MAXIMUM_LEVEL>",
                                "help": null,
                                "id": "LOG_MAXIMUM_EQUALS_DEFAULT",
                                "name": "LOG_MAXIMUM_EQUALS_DEFAULT",
                                "range": null,
                                "title": "Same as default",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LOG_DEFAULT_LEVEL < 1 && <choice LOG_MAXIMUM_LEVEL>",
                                "help": null,
                                "id": "LOG_MAXIMUM_LEVEL_ERROR",
                                "name": "LOG_MAXIMUM_LEVEL_ERROR",
                                "range": null,
                                "title": "Error",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LOG_DEFAULT_LEVEL < 2 && <choice LOG_MAXIMUM_LEVEL>",
                                "help": null,
                                "id": "LOG_MAXIMUM_LEVEL_WARN",
                                "name": "LOG_MAXIMUM_LEVEL_WARN",
                                "range": null,
                                "title": "Warning",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LOG_DEFAULT_LEVEL < 3 && <choice LOG_MAXIMUM_LEVEL>",
                                "help": null,
                                "id": "LOG_MAXIMUM_LEVEL_INFO",
                                "name": "LOG_MAXIMUM_LEVEL_INFO",
                                "range": null,
                                "title": "Info",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LOG_DEFAULT_LEVEL < 4 && <choice LOG_MAXIMUM_LEVEL>",
                                "help": null,
                                "id": "LOG_MAXIMUM_LEVEL_DEBUG",
                                "name": "LOG_MAXIMUM_LEVEL_DEBUG",
                                "range": null,
                                "title": "Debug",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LOG_DEFAULT_LEVEL < 5 && <choice LOG_MAXIMUM_LEVEL>",
                                "help": null,
                                "id": "LOG_MAXIMUM_LEVEL_VERBOSE",
                                "name": "LOG_MAXIMUM_LEVEL_VERBOSE",
                                "range": null,
                                "title": "Verbose",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "This config option sets the highest log verbosity that it's possible to select\nat runtime by calling esp_log_level_set(). This level may be higher than\nthe default verbosity level which is set when the app starts up.\n\nThis can be used enable debugging output only at a critical point, for a particular\ntag, or to minimize startup time but then enable more logs once the firmware has\nloaded.\n\nNote that increasing the maximum available log level will increase the firmware\nbinary size.\n\nThis option only applies to logging from the app, the bootloader log level is\nfixed at compile time to the separate \"Bootloader log verbosity\" setting.",
                        "id": "component-config-log-output-maximum-log-verbosity",
                        "name": "LOG_MAXIMUM_LEVEL",
                        "title": "Maximum log verbosity",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "LOG_MAXIMUM_LEVEL",
                        "name": "LOG_MAXIMUM_LEVEL",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enable ANSI terminal color codes in bootloader output.\n\nIn order to view these, your terminal program must support ANSI color codes.",
                        "id": "LOG_COLORS",
                        "name": "LOG_COLORS",
                        "range": null,
                        "title": "Use ANSI terminal colors in log output",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice LOG_TIMESTAMP_SOURCE>",
                                "help": null,
                                "id": "LOG_TIMESTAMP_SOURCE_RTOS",
                                "name": "LOG_TIMESTAMP_SOURCE_RTOS",
                                "range": null,
                                "title": "Milliseconds Since Boot",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice LOG_TIMESTAMP_SOURCE>",
                                "help": null,
                                "id": "LOG_TIMESTAMP_SOURCE_SYSTEM",
                                "name": "LOG_TIMESTAMP_SOURCE_SYSTEM",
                                "range": null,
                                "title": "System Time",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Choose what sort of timestamp is displayed in the log output:\n\n- Milliseconds since boot is calulated from the RTOS tick count multiplied\n  by the tick period. This time will reset after a software reboot.\n  e.g. (90000)\n\n- System time is taken from POSIX time functions which use the ESP32's\n  RTC and FRC1 timers to maintain an accurate time. The system time is\n  initialized to 0 on startup, it can be set with an SNTP sync, or with\n  POSIX time functions. This time will not reset after a software reboot.\n  e.g. (00:01:30.000)\n\n- NOTE: Currently this will not get used in logging from binary blobs\n  (i.e WiFi & Bluetooth libraries), these will always print\n  milliseconds since boot.",
                        "id": "component-config-log-output-log-timestamps",
                        "name": "LOG_TIMESTAMP_SOURCE",
                        "title": "Log Timestamps",
                        "type": "choice"
                    }
                ],
                "depends_on": null,
                "id": "component-config-log-output",
                "title": "Log output",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "The default name this device will report to other devices on the network.\nCould be updated at runtime with esp_netif_set_hostname()",
                        "id": "LWIP_LOCAL_HOSTNAME",
                        "name": "LWIP_LOCAL_HOSTNAME",
                        "range": null,
                        "title": "Local netif hostname",
                        "type": "string"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "If this feature is enabled, standard POSIX APIs: if_indextoname(), if_nametoindex()\ncould be used to convert network interface index to name\ninstead of IDF specific esp-netif APIs (such as esp_netif_get_netif_impl_name())",
                        "id": "LWIP_NETIF_API",
                        "name": "LWIP_NETIF_API",
                        "range": null,
                        "title": "Enable usage of standard POSIX APIs in LWIP",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "If Enable tcpip\u3000core locking,Creates a global mutex that is held\nduring TCPIP thread operations.Can be locked by client code to perform\nlwIP operations without changing into TCPIP thread using callbacks.\nSee LOCK_TCPIP_CORE() and UNLOCK_TCPIP_CORE().\n\nIf disable tcpip\u3000core locking,TCP IP will perform tasks through context switching\uff0e",
                        "id": "LWIP_TCPIP_CORE_LOCKING",
                        "name": "LWIP_TCPIP_CORE_LOCKING",
                        "range": null,
                        "title": "Enable tcpip core locking",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "If this feature is enabled, standard API such as gethostbyname\nsupport .local addresses by sending one shot multicast mDNS\nquery",
                        "id": "LWIP_DNS_SUPPORT_MDNS_QUERIES",
                        "name": "LWIP_DNS_SUPPORT_MDNS_QUERIES",
                        "range": null,
                        "title": "Enable mDNS queries in resolving host name",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "If this feature is enabled, all traffic from layer2(WIFI Driver) will be\ncopied to a new buffer before sending it to layer3(LWIP stack), freeing\nthe layer2 buffer.\nPlease be notified that the total layer2 receiving buffer is fixed and\nESP32 currently supports 25 layer2 receiving buffer, when layer2 buffer\nruns out of memory, then the incoming packets will be dropped in hardware.\nThe layer3 buffer is allocated from the heap, so the total layer3 receiving\nbuffer depends on the available heap size, when heap runs out of memory,\nno copy will be sent to layer3 and packet will be dropped in layer2.\nPlease make sure you fully understand the impact of this feature before\nenabling it.",
                        "id": "LWIP_L2_TO_L3_COPY",
                        "name": "LWIP_L2_TO_L3_COPY",
                        "range": null,
                        "title": "Enable copy between Layer2 and Layer3 packets",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "If this feature is enabled, some functions relating to RX/TX in LWIP will be\nput into IRAM, it can improve UDP/TCP throughput by >10% for single core mode,\nit doesn't help too much for dual core mode. On the other hand, it needs about\n10KB IRAM for these optimizations.\n\nIf this feature is disabled, all lwip functions will be put into FLASH.",
                        "id": "LWIP_IRAM_OPTIMIZATION",
                        "name": "LWIP_IRAM_OPTIMIZATION",
                        "range": null,
                        "title": "Enable LWIP IRAM optimization",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "If this feature is enabled, IGMP and MLD6 timers will be activated only\nwhen joining groups or receiving QUERY packets.\n\nThis feature will reduce the power consumption for applications which do not\nuse IGMP and MLD6.",
                        "id": "LWIP_TIMERS_ONDEMAND",
                        "name": "LWIP_TIMERS_ONDEMAND",
                        "range": null,
                        "title": "Enable LWIP Timers on demand",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Sockets take up a certain amount of memory, and allowing fewer\nsockets to be open at the same time conserves memory. Specify\nthe maximum amount of sockets here. The valid value is from 1\nto 16.",
                        "id": "LWIP_MAX_SOCKETS",
                        "name": "LWIP_MAX_SOCKETS",
                        "range": [
                            1,
                            16
                        ],
                        "title": "Max number of open sockets",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This option is deprecated. Use VFS_SUPPORT_SELECT instead, which is\nthe inverse of this option.\n\nThe virtual filesystem layer of select() redirects sockets to\nlwip_select() and non-socket file descriptors to their respective driver\nimplementations. If this option is enabled then all calls of select()\nwill be redirected to lwip_select(), therefore, select can be used\nfor sockets only.",
                        "id": "LWIP_USE_ONLY_LWIP_SELECT",
                        "name": "LWIP_USE_ONLY_LWIP_SELECT",
                        "range": null,
                        "title": "Support LWIP socket select() only (DEPRECATED)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enabling this option allows SO_LINGER processing.\nl_onoff = 1,l_linger can set the timeout.\n\nIf l_linger=0, When a connection is closed, TCP will terminate the connection.\nThis means that TCP will discard any data packets stored in the socket send buffer\nand send an RST to the peer.\n\nIf l_linger!=0,Then closesocket() calls to block the process until\nthe remaining data packets has been sent or timed out.",
                        "id": "LWIP_SO_LINGER",
                        "name": "LWIP_SO_LINGER",
                        "range": null,
                        "title": "Enable SO_LINGER processing",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "LWIP_SO_REUSE",
                                "help": "Enabling this option means that any incoming broadcast or multicast\npacket will be copied to all of the local sockets that it matches\n(may be more than one if SO_REUSEADDR is set on the socket.)\n\nThis increases memory overhead as the packets need to be copied,\nhowever they are only copied per matching socket. You can safely\ndisable it if you don't plan to receive broadcast or multicast\ntraffic on more than one socket at a time.",
                                "id": "LWIP_SO_REUSE_RXTOALL",
                                "name": "LWIP_SO_REUSE_RXTOALL",
                                "range": null,
                                "title": "SO_REUSEADDR copies broadcast/multicast to all matches",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enabling this option allows binding to a port which remains in\nTIME_WAIT.",
                        "id": "LWIP_SO_REUSE",
                        "name": "LWIP_SO_REUSE",
                        "range": null,
                        "title": "Enable SO_REUSEADDR option",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enabling this option allows checking for available data on a netconn.",
                        "id": "LWIP_SO_RCVBUF",
                        "name": "LWIP_SO_RCVBUF",
                        "range": null,
                        "title": "Enable SO_RCVBUF option",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enabling this option allows checking for the destination address\nof a received IPv4 Packet.",
                        "id": "LWIP_NETBUF_RECVINFO",
                        "name": "LWIP_NETBUF_RECVINFO",
                        "range": null,
                        "title": "Enable IP_PKTINFO option",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enabling this option allows fragmenting outgoing IP4 packets if their size\nexceeds MTU.",
                        "id": "LWIP_IP4_FRAG",
                        "name": "LWIP_IP4_FRAG",
                        "range": null,
                        "title": "Enable fragment outgoing IP4 packets",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "LWIP_IPV6",
                        "help": "Enabling this option allows fragmenting outgoing IP6 packets if their size\nexceeds MTU.",
                        "id": "LWIP_IP6_FRAG",
                        "name": "LWIP_IP6_FRAG",
                        "range": null,
                        "title": "Enable fragment outgoing IP6 packets",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enabling this option allows reassemblying incoming fragmented IP4 packets.",
                        "id": "LWIP_IP4_REASSEMBLY",
                        "name": "LWIP_IP4_REASSEMBLY",
                        "range": null,
                        "title": "Enable reassembly incoming fragmented IP4 packets",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "LWIP_IPV6",
                        "help": "Enabling this option allows reassemblying incoming fragmented IP6 packets.",
                        "id": "LWIP_IP6_REASSEMBLY",
                        "name": "LWIP_IP6_REASSEMBLY",
                        "range": null,
                        "title": "Enable reassembly incoming fragmented IP6 packets",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "LWIP_IP_FORWARD",
                                "help": "Enabling this option allows Network Address and Port Translation.",
                                "id": "LWIP_IPV4_NAPT",
                                "name": "LWIP_IPV4_NAPT",
                                "range": null,
                                "title": "Enable NAT (new/experimental)",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enabling this option allows packets forwarding across multiple interfaces.",
                        "id": "LWIP_IP_FORWARD",
                        "name": "LWIP_IP_FORWARD",
                        "range": null,
                        "title": "Enable IP forwarding",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enabling this option allows LWIP statistics",
                        "id": "LWIP_STATS",
                        "name": "LWIP_STATS",
                        "range": null,
                        "title": "Enable LWIP statistics",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enabling this option allows ARP table to be updated.\n\nIf this option is enabled, the incoming IP packets cause the ARP table to be\nupdated with the source MAC and IP addresses supplied in the packet.\nYou may want to disable this if you do not trust LAN peers to have the\ncorrect addresses, or as a limited approach to attempt to handle\nspoofing. If disabled, lwIP will need to make a new ARP request if\nthe peer is not already in the ARP table, adding a little latency.\nThe peer *is* in the ARP table if it requested our address before.\nAlso notice that this slows down input processing of every IP packet!\n\nThere are two known issues in real application if this feature is enabled:\n- The LAN peer may have bug to update the ARP table after the ARP entry is aged out.\nIf the ARP entry on the LAN peer is aged out but failed to be updated, all IP packets\nsent from LWIP to the LAN peer will be dropped by LAN peer.\n- The LAN peer may not be trustful, the LAN peer may send IP packets to LWIP with\ntwo different MACs, but the same IP address. If this happens, the LWIP has problem\nto receive IP packets from LAN peer.\n\nSo the recommendation is to disable this option.\nHere the LAN peer means the other side to which the ESP station or soft-AP is connected.",
                        "id": "LWIP_ETHARP_TRUST_IP_MAC",
                        "name": "LWIP_ETHARP_TRUST_IP_MAC",
                        "range": null,
                        "title": "Enable LWIP ARP trust",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "LWIP_ESP_GRATUITOUS_ARP",
                                "help": "Set the timer interval for gratuitous ARP. The default value is 60s",
                                "id": "LWIP_GARP_TMR_INTERVAL",
                                "name": "LWIP_GARP_TMR_INTERVAL",
                                "range": null,
                                "title": "GARP timer interval(seconds)",
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enable this option allows to send gratuitous ARP periodically.\n\nThis option solve the compatibility issues.If the ARP table of the AP is old, and the AP\ndoesn't send ARP request to update it's ARP table, this will lead to the STA sending IP packet fail.\nThus we send gratuitous ARP periodically to let AP update it's ARP table.",
                        "id": "LWIP_ESP_GRATUITOUS_ARP",
                        "name": "LWIP_ESP_GRATUITOUS_ARP",
                        "range": null,
                        "title": "Send gratuitous ARP periodically",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Set TCPIP task receive mail box size. Generally bigger value means higher throughput\nbut more memory. The value should be bigger than UDP/TCP mail box size.",
                        "id": "LWIP_TCPIP_RECVMBOX_SIZE",
                        "name": "LWIP_TCPIP_RECVMBOX_SIZE",
                        "range": [
                            6,
                            64
                        ],
                        "title": "TCPIP task receive mail box size",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enabling this option performs a check (via ARP request) if the offered IP address\nis not already in use by another host on the network.",
                        "id": "LWIP_DHCP_DOES_ARP_CHECK",
                        "name": "LWIP_DHCP_DOES_ARP_CHECK",
                        "range": null,
                        "title": "DHCP: Perform ARP check on any offered address",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This option could be used to disable DHCP client identification with its MAC address.\n(Client id is used by DHCP servers to uniquely identify clients and are included\nin the DHCP packets as an option 61)\nSet this option to \"y\" in order to exclude option 61 from DHCP packets.",
                        "id": "LWIP_DHCP_DISABLE_CLIENT_ID",
                        "name": "LWIP_DHCP_DISABLE_CLIENT_ID",
                        "range": null,
                        "title": "DHCP: Disable Use of HW address as client identification",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This option could be used to disable DHCP client vendor class identification.\nSet this option to \"y\" in order to exclude option 60 from DHCP packets.",
                        "id": "LWIP_DHCP_DISABLE_VENDOR_CLASS_ID",
                        "name": "LWIP_DHCP_DISABLE_VENDOR_CLASS_ID",
                        "range": null,
                        "title": "DHCP: Disable Use of vendor class identification",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "When this option is enabled, DHCP client tries to re-obtain last valid IP address obtained from DHCP\nserver. Last valid DHCP configuration is stored in nvs and restored after reset/power-up. If IP is still\navailable, there is no need for sending discovery message to DHCP server and save some time.",
                        "id": "LWIP_DHCP_RESTORE_LAST_IP",
                        "name": "LWIP_DHCP_RESTORE_LAST_IP",
                        "range": null,
                        "title": "DHCP: Restore last IP obtained from DHCP server",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Set total length of outgoing DHCP option msg. Generally bigger value means it can carry more\noptions and values. If your code meets LWIP_ASSERT due to option value is too long.\nPlease increase the LWIP_DHCP_OPTIONS_LEN value.",
                        "id": "LWIP_DHCP_OPTIONS_LEN",
                        "name": "LWIP_DHCP_OPTIONS_LEN",
                        "range": [
                            68,
                            255
                        ],
                        "title": "DHCP total option length",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "LWIP_DHCPS",
                                        "help": "The DHCP server is calculating lease time multiplying the sent\nand received times by this number of seconds per unit.\nThe default is 60, that equals one minute.",
                                        "id": "LWIP_DHCPS_LEASE_UNIT",
                                        "name": "LWIP_DHCPS_LEASE_UNIT",
                                        "range": [
                                            1,
                                            3600
                                        ],
                                        "title": "Multiplier for lease time, in seconds",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "LWIP_DHCPS",
                                        "help": "The maximum number of DHCP clients that are connected to the server.\nAfter this number is exceeded, DHCP server removes of the oldest device\nfrom it's address pool, without notification.",
                                        "id": "LWIP_DHCPS_MAX_STATION_NUM",
                                        "name": "LWIP_DHCPS_MAX_STATION_NUM",
                                        "range": [
                                            1,
                                            64
                                        ],
                                        "title": "Maximum number of stations",
                                        "type": "int"
                                    }
                                ],
                                "depends_on": null,
                                "help": "Enabling this option allows the device to run the DHCP server\n(to dynamically assign IPv4 addresses to clients).",
                                "id": "LWIP_DHCPS",
                                "name": "LWIP_DHCPS",
                                "range": null,
                                "title": "DHCPS: Enable IPv4 Dynamic Host Configuration Protocol Server (DHCPS)",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-lwip-dhcp-server",
                        "title": "DHCP server",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "LWIP_AUTOIP",
                                "help": "DHCP client will send this many probes before self-assigning a\nlink local address.\n\nFrom LWIP help: \"This can be set as low as 1 to get an AutoIP\naddress very quickly, but you should be prepared to handle a\nchanging IP address when DHCP overrides AutoIP.\" (In the case of\nESP-IDF, this means multiple SYSTEM_EVENT_STA_GOT_IP events.)",
                                "id": "LWIP_AUTOIP_TRIES",
                                "name": "LWIP_AUTOIP_TRIES",
                                "range": null,
                                "title": "DHCP Probes before self-assigning IPv4 LL address",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_AUTOIP",
                                "help": "If the AUTOIP functionality detects this many IP conflicts while\nself-assigning an address, it will go into a rate limited mode.",
                                "id": "LWIP_AUTOIP_MAX_CONFLICTS",
                                "name": "LWIP_AUTOIP_MAX_CONFLICTS",
                                "range": null,
                                "title": "Max IP conflicts before rate limiting",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_AUTOIP",
                                "help": "If rate limiting self-assignment requests, wait this long between\neach request.",
                                "id": "LWIP_AUTOIP_RATE_LIMIT_INTERVAL",
                                "name": "LWIP_AUTOIP_RATE_LIMIT_INTERVAL",
                                "range": null,
                                "title": "Rate limited interval (seconds)",
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enabling this option allows the device to self-assign an address\nin the 169.256/16 range if none is assigned statically or via DHCP.\n\nSee RFC 3927.",
                        "id": "LWIP_AUTOIP",
                        "is_menuconfig": true,
                        "name": "LWIP_AUTOIP",
                        "range": null,
                        "title": "Enable IPV4 Link-Local Addressing (AUTOIP)",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "LWIP_IPV6",
                                "help": "Enabling this option allows the devices to IPV6 stateless address autoconfiguration (SLAAC).\n\nSee RFC 4862.",
                                "id": "LWIP_IPV6_AUTOCONFIG",
                                "name": "LWIP_IPV6_AUTOCONFIG",
                                "range": null,
                                "title": "Enable IPV6 stateless address autoconfiguration (SLAAC)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_IPV6",
                                "help": "The maximum number of IPv6 addresses on each interface. Any additional\naddresses will be discarded.",
                                "id": "LWIP_IPV6_NUM_ADDRESSES",
                                "name": "LWIP_IPV6_NUM_ADDRESSES",
                                "range": null,
                                "title": "Number of IPv6 addresses on each network interface",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_IPV6",
                                "help": "Forwarding IPv6 packets between interfaces is only required when acting as\na router.",
                                "id": "LWIP_IPV6_FORWARD",
                                "name": "LWIP_IPV6_FORWARD",
                                "range": null,
                                "title": "Enable IPv6 forwarding between interfaces",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enable IPv6 function. If not use IPv6 function, set this option to n.\nIf disabling LWIP_IPV6 then some other components (coap and asio) will\nno longer be available.",
                        "id": "LWIP_IPV6",
                        "name": "LWIP_IPV6",
                        "range": null,
                        "title": "Enable IPv6",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "LWIP_IPV6_AUTOCONFIG",
                        "help": "Use IPv6 Router Advertisement Recursive DNS Server Option (as per RFC 6106) to\ncopy a defined maximum number of DNS servers to the DNS module.\nSet this option to a number of desired DNS servers advertised in the RA protocol.\nThis feature is disabled when set to 0.",
                        "id": "LWIP_IPV6_RDNSS_MAX_DNS_SERVERS",
                        "name": "LWIP_IPV6_RDNSS_MAX_DNS_SERVERS",
                        "range": null,
                        "title": "Use IPv6 Router Advertisement Recursive DNS Server Option",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "LWIP_IPV6_AUTOCONFIG",
                        "help": "Enable DHCPv6 for IPv6 stateless address autoconfiguration.\nNote that the dhcpv6 client has to be started using dhcp6_enable_stateless(netif);\nNote that the stateful address autoconfiguration is not supported.",
                        "id": "LWIP_IPV6_DHCP6",
                        "name": "LWIP_IPV6_DHCP6",
                        "range": null,
                        "title": "Enable DHCPv6 stateless address autoconfiguration",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enable callbacks when the network interface is up/down and addresses are changed.",
                        "id": "LWIP_NETIF_STATUS_CALLBACK",
                        "name": "LWIP_NETIF_STATUS_CALLBACK",
                        "range": null,
                        "title": "Enable status callback for network interfaces",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "LWIP_NETIF_LOOPBACK",
                                "help": "Configure the maximum number of packets which can be queued for\nloopback on a given interface. Reducing this number may cause packets\nto be dropped, but will avoid filling memory with queued packet data.",
                                "id": "LWIP_LOOPBACK_MAX_PBUFS",
                                "name": "LWIP_LOOPBACK_MAX_PBUFS",
                                "range": [
                                    0,
                                    16
                                ],
                                "title": "Max queued loopback packets per interface",
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enabling this option means that if a packet is sent with a destination\naddress equal to the interface's own IP address, it will \"loop back\" and\nbe received by this interface.",
                        "id": "LWIP_NETIF_LOOPBACK",
                        "is_menuconfig": true,
                        "name": "LWIP_NETIF_LOOPBACK",
                        "range": null,
                        "title": "Support per-interface loopback",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "The maximum number of simultaneously active TCP\nconnections. The practical maximum limit is\ndetermined by available heap memory at runtime.\n\nChanging this value by itself does not substantially\nchange the memory usage of LWIP, except for preventing\nnew TCP connections after the limit is reached.",
                                "id": "LWIP_MAX_ACTIVE_TCP",
                                "name": "LWIP_MAX_ACTIVE_TCP",
                                "range": [
                                    1,
                                    1024
                                ],
                                "title": "Maximum active TCP Connections",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "The maximum number of simultaneously listening TCP\nconnections. The practical maximum limit is\ndetermined by available heap memory at runtime.\n\nChanging this value by itself does not substantially\nchange the memory usage of LWIP, except for preventing\nnew listening TCP connections after the limit is reached.",
                                "id": "LWIP_MAX_LISTENING_TCP",
                                "name": "LWIP_MAX_LISTENING_TCP",
                                "range": [
                                    1,
                                    1024
                                ],
                                "title": "Maximum listening TCP Connections",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Speed up the TCP retransmission interval. If disabled,\nit is recommended to change the number of SYN retransmissions to 6,\nand TCP initial rto time to 3000.",
                                "id": "LWIP_TCP_HIGH_SPEED_RETRANSMISSION",
                                "name": "LWIP_TCP_HIGH_SPEED_RETRANSMISSION",
                                "range": null,
                                "title": "TCP high speed retransmissions",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Set maximum number of retransmissions of data segments.",
                                "id": "LWIP_TCP_MAXRTX",
                                "name": "LWIP_TCP_MAXRTX",
                                "range": [
                                    3,
                                    12
                                ],
                                "title": "Maximum number of retransmissions of data segments",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Set maximum number of retransmissions of SYN segments.",
                                "id": "LWIP_TCP_SYNMAXRTX",
                                "name": "LWIP_TCP_SYNMAXRTX",
                                "range": [
                                    3,
                                    12
                                ],
                                "title": "Maximum number of retransmissions of SYN segments",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Set maximum segment size for TCP transmission.\n\nCan be set lower to save RAM, the default value 1460(ipv4)/1440(ipv6) will give best throughput.\nIPv4 TCP_MSS Range: 576 <= TCP_MSS <= 1460\nIPv6 TCP_MSS Range: 1220<= TCP_mSS <= 1440",
                                "id": "LWIP_TCP_MSS",
                                "name": "LWIP_TCP_MSS",
                                "range": [
                                    536,
                                    1460
                                ],
                                "title": "Maximum Segment Size (MSS)",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Set TCP timer interval in milliseconds.\n\nCan be used to speed connections on bad networks.\nA lower value will redeliver unacked packets faster.",
                                "id": "LWIP_TCP_TMR_INTERVAL",
                                "name": "LWIP_TCP_TMR_INTERVAL",
                                "range": null,
                                "title": "TCP timer interval(ms)",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Set maximum segment lifetime in in milliseconds.",
                                "id": "LWIP_TCP_MSL",
                                "name": "LWIP_TCP_MSL",
                                "range": null,
                                "title": "Maximum segment lifetime (MSL)",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Set default send buffer size for new TCP sockets.\n\nPer-socket send buffer size can be changed at runtime\nwith lwip_setsockopt(s, TCP_SNDBUF, ...).\n\nThis value must be at least 2x the MSS size, and the default\nis 4x the default MSS size.\n\nSetting a smaller default SNDBUF size can save some RAM, but\nwill decrease performance.",
                                "id": "LWIP_TCP_SND_BUF_DEFAULT",
                                "name": "LWIP_TCP_SND_BUF_DEFAULT",
                                "range": [
                                    2440,
                                    65535
                                ],
                                "title": "Default send buffer size",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Set default TCP receive window size for new TCP sockets.\n\nPer-socket receive window size can be changed at runtime\nwith lwip_setsockopt(s, TCP_WINDOW, ...).\n\nSetting a smaller default receive window size can save some RAM,\nbut will significantly decrease performance.",
                                "id": "LWIP_TCP_WND_DEFAULT",
                                "name": "LWIP_TCP_WND_DEFAULT",
                                "range": [
                                    2440,
                                    65535
                                ],
                                "title": "Default receive window size",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Set TCP receive mail box size. Generally bigger value means higher throughput\nbut more memory. The recommended value is: LWIP_TCP_WND_DEFAULT/TCP_MSS + 2, e.g. if\nLWIP_TCP_WND_DEFAULT=14360, TCP_MSS=1436, then the recommended receive mail box size is\n(14360/1436 + 2) = 12.\n\nTCP receive mail box is a per socket mail box, when the application receives packets\nfrom TCP socket, LWIP core firstly posts the packets to TCP receive mail box and the\napplication then fetches the packets from mail box. It means LWIP can caches maximum\nLWIP_TCP_RECCVMBOX_SIZE packets for each TCP socket, so the maximum possible cached TCP packets\nfor all TCP sockets is LWIP_TCP_RECCVMBOX_SIZE multiples the maximum TCP socket number. In other\nwords, the bigger LWIP_TCP_RECVMBOX_SIZE means more memory.\nOn the other hand, if the receiv mail box is too small, the mail box may be full. If the\nmail box is full, the LWIP drops the packets. So generally we need to make sure the TCP\nreceive mail box is big enough to avoid packet drop between LWIP core and application.",
                                "id": "LWIP_TCP_RECVMBOX_SIZE",
                                "name": "LWIP_TCP_RECVMBOX_SIZE",
                                "range": [
                                    6,
                                    64
                                ],
                                "title": "Default TCP receive mail box size",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Queue incoming out-of-order segments for later use.\n\nDisable this option to save some RAM during TCP sessions, at the expense\nof increased retransmissions if segments arrive out of order.",
                                "id": "LWIP_TCP_QUEUE_OOSEQ",
                                "name": "LWIP_TCP_QUEUE_OOSEQ",
                                "range": null,
                                "title": "Queue incoming out-of-order segments",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "TCP will support sending selective acknowledgements (SACKs).",
                                "id": "LWIP_TCP_SACK_OUT",
                                "name": "LWIP_TCP_SACK_OUT",
                                "range": null,
                                "title": "Support sending selective acknowledgements",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "This option is enabled when the following scenario happen:\nnetwork dropped and reconnected, IP changes is like: 192.168.0.2->0.0.0.0->192.168.0.2\n\nDisable this option to keep consistent with the original LWIP code behavior.",
                                "id": "LWIP_TCP_KEEP_CONNECTION_WHEN_IP_CHANGES",
                                "name": "LWIP_TCP_KEEP_CONNECTION_WHEN_IP_CHANGES",
                                "range": null,
                                "title": "Keep TCP connections when IP changed",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice LWIP_TCP_OVERSIZE>",
                                        "help": null,
                                        "id": "LWIP_TCP_OVERSIZE_MSS",
                                        "name": "LWIP_TCP_OVERSIZE_MSS",
                                        "range": null,
                                        "title": "MSS",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice LWIP_TCP_OVERSIZE>",
                                        "help": null,
                                        "id": "LWIP_TCP_OVERSIZE_QUARTER_MSS",
                                        "name": "LWIP_TCP_OVERSIZE_QUARTER_MSS",
                                        "range": null,
                                        "title": "25% MSS",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice LWIP_TCP_OVERSIZE>",
                                        "help": null,
                                        "id": "LWIP_TCP_OVERSIZE_DISABLE",
                                        "name": "LWIP_TCP_OVERSIZE_DISABLE",
                                        "range": null,
                                        "title": "Disabled",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "help": "Allows enabling \"oversize\" allocation of TCP transmission pbufs ahead of time,\nwhich can reduce the length of pbuf chains used for transmission.\n\nThis will not make a difference to sockets where Nagle's algorithm\nis disabled.\n\nDefault value of MSS is fine for most applications, 25% MSS may save\nsome RAM when only transmitting small amounts of data. Disabled will\nhave worst performance and fragmentation characteristics, but uses\nleast RAM overall.",
                                "id": "component-config-lwip-tcp-pre-allocate-transmit-pbuf-size",
                                "name": "LWIP_TCP_OVERSIZE",
                                "title": "Pre-allocate transmit PBUF size",
                                "type": "choice"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "LWIP_WND_SCALE",
                                        "help": "Enable this feature to support TCP window scaling.",
                                        "id": "LWIP_TCP_RCV_SCALE",
                                        "name": "LWIP_TCP_RCV_SCALE",
                                        "range": null,
                                        "title": "Set TCP receiving window scaling factor",
                                        "type": "int"
                                    }
                                ],
                                "depends_on": "SPIRAM_TRY_ALLOCATE_WIFI_LWIP",
                                "help": "Enable this feature to support TCP window scaling.",
                                "id": "LWIP_WND_SCALE",
                                "name": "LWIP_WND_SCALE",
                                "range": null,
                                "title": "Support TCP window scale",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Set default TCP rto time for a reasonable initial rto.\nIn bad network environment, recommend set value of rto time to 1500.",
                                "id": "LWIP_TCP_RTO_TIME",
                                "name": "LWIP_TCP_RTO_TIME",
                                "range": null,
                                "title": "Default TCP rto time",
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-lwip-tcp",
                        "title": "TCP",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "The maximum number of active UDP \"connections\" (ie\nUDP sockets sending/receiving data).\nThe practical maximum limit is determined by available\nheap memory at runtime.",
                                "id": "LWIP_MAX_UDP_PCBS",
                                "name": "LWIP_MAX_UDP_PCBS",
                                "range": [
                                    1,
                                    1024
                                ],
                                "title": "Maximum active UDP control blocks",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Set UDP receive mail box size. The recommended value is 6.\n\nUDP receive mail box is a per socket mail box, when the application receives packets\nfrom UDP socket, LWIP core firstly posts the packets to UDP receive mail box and the\napplication then fetches the packets from mail box. It means LWIP can caches maximum\nUDP_RECCVMBOX_SIZE packets for each UDP socket, so the maximum possible cached UDP packets\nfor all UDP sockets is UDP_RECCVMBOX_SIZE multiples the maximum UDP socket number. In other\nwords, the bigger UDP_RECVMBOX_SIZE means more memory.\nOn the other hand, if the receiv mail box is too small, the mail box may be full. If the\nmail box is full, the LWIP drops the packets. So generally we need to make sure the UDP\nreceive mail box is big enough to avoid packet drop between LWIP core and application.",
                                "id": "LWIP_UDP_RECVMBOX_SIZE",
                                "name": "LWIP_UDP_RECVMBOX_SIZE",
                                "range": [
                                    6,
                                    64
                                ],
                                "title": "Default UDP receive mail box size",
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-lwip-udp",
                        "title": "UDP",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable checksum checking for received IP messages",
                                "id": "LWIP_CHECKSUM_CHECK_IP",
                                "name": "LWIP_CHECKSUM_CHECK_IP",
                                "range": null,
                                "title": "Enable LWIP IP checksums",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable checksum checking for received UDP messages",
                                "id": "LWIP_CHECKSUM_CHECK_UDP",
                                "name": "LWIP_CHECKSUM_CHECK_UDP",
                                "range": null,
                                "title": "Enable LWIP UDP checksums",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable checksum checking for received ICMP messages",
                                "id": "LWIP_CHECKSUM_CHECK_ICMP",
                                "name": "LWIP_CHECKSUM_CHECK_ICMP",
                                "range": null,
                                "title": "Enable LWIP ICMP checksums",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-lwip-checksums",
                        "title": "Checksums",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Configure TCP/IP task stack size, used by LWIP to process multi-threaded TCP/IP operations.\nSetting this stack too small will result in stack overflow crashes.",
                        "id": "LWIP_TCPIP_TASK_STACK_SIZE",
                        "name": "LWIP_TCPIP_TASK_STACK_SIZE",
                        "range": [
                            2048,
                            65536
                        ],
                        "title": "TCP/IP Task Stack Size",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice LWIP_TCPIP_TASK_AFFINITY>",
                                "help": null,
                                "id": "LWIP_TCPIP_TASK_AFFINITY_NO_AFFINITY",
                                "name": "LWIP_TCPIP_TASK_AFFINITY_NO_AFFINITY",
                                "range": null,
                                "title": "No affinity",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice LWIP_TCPIP_TASK_AFFINITY>",
                                "help": null,
                                "id": "LWIP_TCPIP_TASK_AFFINITY_CPU0",
                                "name": "LWIP_TCPIP_TASK_AFFINITY_CPU0",
                                "range": null,
                                "title": "CPU0",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!FREERTOS_UNICORE && <choice LWIP_TCPIP_TASK_AFFINITY>",
                                "help": null,
                                "id": "LWIP_TCPIP_TASK_AFFINITY_CPU1",
                                "name": "LWIP_TCPIP_TASK_AFFINITY_CPU1",
                                "range": null,
                                "title": "CPU1",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Allows setting LwIP tasks affinity, i.e. whether the task is pinned to\nCPU0, pinned to CPU1, or allowed to run on any CPU.\nCurrently this applies to \"TCP/IP\" task and \"Ping\" task.",
                        "id": "component-config-lwip-tcp-ip-task-affinity",
                        "name": "LWIP_TCPIP_TASK_AFFINITY",
                        "title": "TCP/IP task affinity",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "LWIP_TCPIP_TASK_AFFINITY",
                        "name": "LWIP_TCPIP_TASK_AFFINITY",
                        "range": null,
                        "title": null,
                        "type": "hex"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "LWIP_PPP_SUPPORT && LWIP_IPV6",
                                "help": "Enable IPV6 support in PPP for the local link between the DTE (processor) and DCE (modem).\nThere are some modems which do not support the IPV6 addressing in the local link.\nIf they are requested for IPV6CP negotiation, they may time out.\nThis would in turn fail the configuration for the whole link.\nIf your modem is not responding correctly to PPP Phase Network, try to disable IPV6 support.",
                                "id": "LWIP_PPP_ENABLE_IPV6",
                                "name": "LWIP_PPP_ENABLE_IPV6",
                                "range": null,
                                "title": "Enable IPV6 support for PPP connections (IPV6CP)",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enable PPP stack. Now only PPP over serial is possible.\n\nPPP over serial support is experimental and unsupported.",
                        "id": "LWIP_PPP_SUPPORT",
                        "is_menuconfig": true,
                        "name": "LWIP_PPP_SUPPORT",
                        "range": null,
                        "title": "Enable PPP support (new/experimental)",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": "LWIP_IPV6",
                        "help": "Config max number of IPv6 packets to queue during MAC resolution.",
                        "id": "LWIP_IPV6_MEMP_NUM_ND6_QUEUE",
                        "name": "LWIP_IPV6_MEMP_NUM_ND6_QUEUE",
                        "range": [
                            3,
                            20
                        ],
                        "title": "Max number of IPv6 packets to queue during MAC resolution",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "LWIP_IPV6",
                        "help": "Config max number of entries in IPv6 neighbor cache",
                        "id": "LWIP_IPV6_ND6_NUM_NEIGHBORS",
                        "name": "LWIP_IPV6_ND6_NUM_NEIGHBORS",
                        "range": [
                            3,
                            10
                        ],
                        "title": "Max number of entries in IPv6 neighbor cache",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "LWIP_PPP_SUPPORT",
                        "help": "Enable to set a callback which is called on change of the internal PPP state machine.",
                        "id": "LWIP_PPP_NOTIFY_PHASE_SUPPORT",
                        "name": "LWIP_PPP_NOTIFY_PHASE_SUPPORT",
                        "range": null,
                        "title": "Enable Notify Phase Callback",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "LWIP_PPP_SUPPORT",
                        "help": "Enable Password Authentication Protocol (PAP) support",
                        "id": "LWIP_PPP_PAP_SUPPORT",
                        "name": "LWIP_PPP_PAP_SUPPORT",
                        "range": null,
                        "title": "Enable PAP support",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "LWIP_PPP_SUPPORT",
                        "help": "Enable Challenge Handshake Authentication Protocol (CHAP) support",
                        "id": "LWIP_PPP_CHAP_SUPPORT",
                        "name": "LWIP_PPP_CHAP_SUPPORT",
                        "range": null,
                        "title": "Enable CHAP support",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "LWIP_PPP_SUPPORT",
                        "help": "Enable Microsoft version of the Challenge-Handshake Authentication Protocol (MSCHAP) support",
                        "id": "LWIP_PPP_MSCHAP_SUPPORT",
                        "name": "LWIP_PPP_MSCHAP_SUPPORT",
                        "range": null,
                        "title": "Enable MSCHAP support",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "LWIP_PPP_SUPPORT",
                        "help": "Enable Microsoft Point-to-Point Encryption (MPPE) support",
                        "id": "LWIP_PPP_MPPE_SUPPORT",
                        "name": "LWIP_PPP_MPPE_SUPPORT",
                        "range": null,
                        "title": "Enable MPPE support",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "LWIP_ENABLE_LCP_ECHO",
                                "help": "Interval in seconds between keepalive LCP echo requests, 0 to disable.",
                                "id": "LWIP_LCP_ECHOINTERVAL",
                                "name": "LWIP_LCP_ECHOINTERVAL",
                                "range": null,
                                "title": "Echo interval (s)",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_ENABLE_LCP_ECHO",
                                "help": "Number of consecutive unanswered echo requests before failure is indicated.",
                                "id": "LWIP_LCP_MAXECHOFAILS",
                                "name": "LWIP_LCP_MAXECHOFAILS",
                                "range": null,
                                "title": "Maximum echo failures",
                                "type": "int"
                            }
                        ],
                        "depends_on": "LWIP_PPP_SUPPORT",
                        "help": "Enable LCP echo keepalive requests",
                        "id": "LWIP_ENABLE_LCP_ECHO",
                        "name": "LWIP_ENABLE_LCP_ECHO",
                        "range": null,
                        "title": "Enable LCP ECHO",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "LWIP_PPP_SUPPORT",
                        "help": "Enable PPP debug log output",
                        "id": "LWIP_PPP_DEBUG_ON",
                        "name": "LWIP_PPP_DEBUG_ON",
                        "range": null,
                        "title": "Enable PPP debug log output",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "LWIP_SLIP_SUPPORT",
                                "help": "Enable SLIP debug log output",
                                "id": "LWIP_SLIP_DEBUG_ON",
                                "name": "LWIP_SLIP_DEBUG_ON",
                                "range": null,
                                "title": "Enable SLIP debug log output",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enable SLIP stack. Now only SLIP over serial is possible.\n\nSLIP over serial support is experimental and unsupported.",
                        "id": "LWIP_SLIP_SUPPORT",
                        "is_menuconfig": true,
                        "name": "LWIP_SLIP_SUPPORT",
                        "range": null,
                        "title": "Enable SLIP support (new/experimental)",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable ICMP module for check network stability",
                                "id": "LWIP_ICMP",
                                "name": "LWIP_ICMP",
                                "range": null,
                                "title": "ICMP: Enable ICMP",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_ICMP6 || LWIP_ICMP",
                                "help": null,
                                "id": "LWIP_MULTICAST_PING",
                                "name": "LWIP_MULTICAST_PING",
                                "range": null,
                                "title": "Respond to multicast pings",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_ICMP",
                                "help": null,
                                "id": "LWIP_BROADCAST_PING",
                                "name": "LWIP_BROADCAST_PING",
                                "range": null,
                                "title": "Respond to broadcast pings",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-lwip-icmp",
                        "title": "ICMP",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "The maximum number of simultaneously active LWIP\nRAW protocol control blocks. The practical maximum\nlimit is determined by available heap memory at runtime.",
                                "id": "LWIP_MAX_RAW_PCBS",
                                "name": "LWIP_MAX_RAW_PCBS",
                                "range": [
                                    1,
                                    1024
                                ],
                                "title": "Maximum LWIP RAW PCBs",
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-lwip-lwip-raw-api",
                        "title": "LWIP RAW API",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Set maximum number of NTP servers used by LwIP SNTP module.\nFirst argument of sntp_setserver/sntp_setservername functions\nis limited to this value.",
                                "id": "LWIP_SNTP_MAX_SERVERS",
                                "name": "LWIP_SNTP_MAX_SERVERS",
                                "range": [
                                    1,
                                    16
                                ],
                                "title": "Maximum number of NTP servers",
                                "type": "int"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "LWIP_DHCP_GET_NTP_SRV",
                                        "help": "Set maximum number of NTP servers aquired via DHCP-offer.\nShould be less or equal to \"Maximum number of NTP servers\", any extra servers would be just ignored.",
                                        "id": "LWIP_DHCP_MAX_NTP_SERVERS",
                                        "name": "LWIP_DHCP_MAX_NTP_SERVERS",
                                        "range": null,
                                        "title": "Maximum number of NTP servers aquired via DHCP",
                                        "type": "int"
                                    }
                                ],
                                "depends_on": null,
                                "help": "If enabled, LWIP will add 'NTP' to Parameter-Request Option sent via DHCP-request.\nDHCP server might reply with an NTP server address in option 42.\nSNTP callback for such replies should be set accordingly (see sntp_servermode_dhcp() func.)",
                                "id": "LWIP_DHCP_GET_NTP_SRV",
                                "name": "LWIP_DHCP_GET_NTP_SRV",
                                "range": null,
                                "title": "Request NTP servers from DHCP",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "This option allows you to set the time update period via SNTP.\nDefault is 1 hour. Must not be below 15 seconds by specification.\n(SNTPv4 RFC 4330 enforces a minimum update time of 15 seconds).",
                                "id": "LWIP_SNTP_UPDATE_DELAY",
                                "name": "LWIP_SNTP_UPDATE_DELAY",
                                "range": [
                                    15000,
                                    4294967295
                                ],
                                "title": "Request interval to update time (ms)",
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-lwip-sntp",
                        "title": "SNTP",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": "!COMPILER_OPTIMIZATION_ASSERTIONS_DISABLE",
                        "help": "Enable this option keeps LWIP assertion checks enabled.\nIt is recommended to keep this option enabled.\n\nIf asserts are disabled for the entire project, they are also disabled\nfor LWIP and this option is ignored.",
                        "id": "LWIP_ESP_LWIP_ASSERT",
                        "name": "LWIP_ESP_LWIP_ASSERT",
                        "range": null,
                        "title": "Enable LWIP ASSERT checks",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice LWIP_HOOK_TCP_ISN>",
                                        "help": null,
                                        "id": "LWIP_HOOK_TCP_ISN_NONE",
                                        "name": "LWIP_HOOK_TCP_ISN_NONE",
                                        "range": null,
                                        "title": "No hook declared",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice LWIP_HOOK_TCP_ISN>",
                                        "help": null,
                                        "id": "LWIP_HOOK_TCP_ISN_DEFAULT",
                                        "name": "LWIP_HOOK_TCP_ISN_DEFAULT",
                                        "range": null,
                                        "title": "Default implementation",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice LWIP_HOOK_TCP_ISN>",
                                        "help": null,
                                        "id": "LWIP_HOOK_TCP_ISN_CUSTOM",
                                        "name": "LWIP_HOOK_TCP_ISN_CUSTOM",
                                        "range": null,
                                        "title": "Custom implementation",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "help": "Enables to define a TCP ISN hook to randomize initial sequence\nnumber in TCP connection.\nThe default TCP ISN algorithm used in IDF (standardized in RFC 6528)\nproduces ISN by combining an MD5 of the new TCP id and a stable\nsecret with the current time.\nThis is because the lwIP implementation (`tcp_next_iss`) is not\nvery strong, as it does not take into consideration any platform\nspecific entropy source.\n\nSet to LWIP_HOOK_TCP_ISN_CUSTOM to provide custom implementation.\nSet to LWIP_HOOK_TCP_ISN_NONE to use lwIP implementation.",
                                "id": "component-config-lwip-hooks-tcp-isn-hook",
                                "name": "LWIP_HOOK_TCP_ISN",
                                "title": "TCP ISN Hook",
                                "type": "choice"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice LWIP_HOOK_IP6_ROUTE>",
                                        "help": null,
                                        "id": "LWIP_HOOK_IP6_ROUTE_NONE",
                                        "name": "LWIP_HOOK_IP6_ROUTE_NONE",
                                        "range": null,
                                        "title": "No hook declared",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice LWIP_HOOK_IP6_ROUTE>",
                                        "help": null,
                                        "id": "LWIP_HOOK_IP6_ROUTE_DEFAULT",
                                        "name": "LWIP_HOOK_IP6_ROUTE_DEFAULT",
                                        "range": null,
                                        "title": "Default (weak) implementation",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice LWIP_HOOK_IP6_ROUTE>",
                                        "help": null,
                                        "id": "LWIP_HOOK_IP6_ROUTE_CUSTOM",
                                        "name": "LWIP_HOOK_IP6_ROUTE_CUSTOM",
                                        "range": null,
                                        "title": "Custom implementation",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "LWIP_IPV6",
                                "help": "Enables custom IPv6 route hook.\nSetting this to \"default\" provides weak implementation\nstub that could be overwritten in application code.\nSetting this to \"custom\" provides hook's declaration\nonly and expects the application to implement it.",
                                "id": "component-config-lwip-hooks-ipv6-route-hook",
                                "name": "LWIP_HOOK_IP6_ROUTE",
                                "title": "IPv6 route Hook",
                                "type": "choice"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice LWIP_HOOK_ND6_GET_GW>",
                                        "help": null,
                                        "id": "LWIP_HOOK_ND6_GET_GW_NONE",
                                        "name": "LWIP_HOOK_ND6_GET_GW_NONE",
                                        "range": null,
                                        "title": "No hook declared",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice LWIP_HOOK_ND6_GET_GW>",
                                        "help": null,
                                        "id": "LWIP_HOOK_ND6_GET_GW_DEFAULT",
                                        "name": "LWIP_HOOK_ND6_GET_GW_DEFAULT",
                                        "range": null,
                                        "title": "Default (weak) implementation",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice LWIP_HOOK_ND6_GET_GW>",
                                        "help": null,
                                        "id": "LWIP_HOOK_ND6_GET_GW_CUSTOM",
                                        "name": "LWIP_HOOK_ND6_GET_GW_CUSTOM",
                                        "range": null,
                                        "title": "Custom implementation",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "LWIP_IPV6",
                                "help": "Enables custom IPv6 route hook.\nSetting this to \"default\" provides weak implementation\nstub that could be overwritten in application code.\nSetting this to \"custom\" provides hook's declaration\nonly and expects the application to implement it.",
                                "id": "component-config-lwip-hooks-ipv6-get-gateway-hook",
                                "name": "LWIP_HOOK_ND6_GET_GW",
                                "title": "IPv6 get gateway Hook",
                                "type": "choice"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice LWIP_HOOK_NETCONN_EXTERNAL_RESOLVE>",
                                        "help": null,
                                        "id": "LWIP_HOOK_NETCONN_EXT_RESOLVE_NONE",
                                        "name": "LWIP_HOOK_NETCONN_EXT_RESOLVE_NONE",
                                        "range": null,
                                        "title": "No hook declared",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice LWIP_HOOK_NETCONN_EXTERNAL_RESOLVE>",
                                        "help": null,
                                        "id": "LWIP_HOOK_NETCONN_EXT_RESOLVE_DEFAULT",
                                        "name": "LWIP_HOOK_NETCONN_EXT_RESOLVE_DEFAULT",
                                        "range": null,
                                        "title": "Default (weak) implementation",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice LWIP_HOOK_NETCONN_EXTERNAL_RESOLVE>",
                                        "help": null,
                                        "id": "LWIP_HOOK_NETCONN_EXT_RESOLVE_CUSTOM",
                                        "name": "LWIP_HOOK_NETCONN_EXT_RESOLVE_CUSTOM",
                                        "range": null,
                                        "title": "Custom implementation",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "help": "Enables custom DNS resolve hook.\nSetting this to \"default\" provides weak implementation\nstub that could be overwritten in application code.\nSetting this to \"custom\" provides hook's declaration\nonly and expects the application to implement it.",
                                "id": "component-config-lwip-hooks-netconn-external-resolve-hook",
                                "name": "LWIP_HOOK_NETCONN_EXTERNAL_RESOLVE",
                                "title": "Netconn external resolve Hook",
                                "type": "choice"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-lwip-hooks",
                        "title": "Hooks",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "LWIP_DEBUG",
                                "help": "Enabling this option routes all enabled LWIP debugs through ESP_LOGD.",
                                "id": "LWIP_DEBUG_ESP_LOG",
                                "name": "LWIP_DEBUG_ESP_LOG",
                                "range": null,
                                "title": "Route LWIP debugs through ESP_LOG interface",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_DEBUG",
                                "help": null,
                                "id": "LWIP_NETIF_DEBUG",
                                "name": "LWIP_NETIF_DEBUG",
                                "range": null,
                                "title": "Enable netif debug messages",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_DEBUG",
                                "help": null,
                                "id": "LWIP_PBUF_DEBUG",
                                "name": "LWIP_PBUF_DEBUG",
                                "range": null,
                                "title": "Enable pbuf debug messages",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_DEBUG",
                                "help": null,
                                "id": "LWIP_ETHARP_DEBUG",
                                "name": "LWIP_ETHARP_DEBUG",
                                "range": null,
                                "title": "Enable etharp debug messages",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_DEBUG",
                                "help": null,
                                "id": "LWIP_API_LIB_DEBUG",
                                "name": "LWIP_API_LIB_DEBUG",
                                "range": null,
                                "title": "Enable api lib debug messages",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_DEBUG",
                                "help": null,
                                "id": "LWIP_SOCKETS_DEBUG",
                                "name": "LWIP_SOCKETS_DEBUG",
                                "range": null,
                                "title": "Enable socket debug messages",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_DEBUG",
                                "help": null,
                                "id": "LWIP_IP_DEBUG",
                                "name": "LWIP_IP_DEBUG",
                                "range": null,
                                "title": "Enable IP debug messages",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_DEBUG && LWIP_ICMP",
                                "help": null,
                                "id": "LWIP_ICMP_DEBUG",
                                "name": "LWIP_ICMP_DEBUG",
                                "range": null,
                                "title": "Enable ICMP debug messages",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_DEBUG",
                                "help": null,
                                "id": "LWIP_DHCP_STATE_DEBUG",
                                "name": "LWIP_DHCP_STATE_DEBUG",
                                "range": null,
                                "title": "Enable DHCP state tracking",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_DEBUG",
                                "help": null,
                                "id": "LWIP_DHCP_DEBUG",
                                "name": "LWIP_DHCP_DEBUG",
                                "range": null,
                                "title": "Enable DHCP debug messages",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_DEBUG",
                                "help": null,
                                "id": "LWIP_IP6_DEBUG",
                                "name": "LWIP_IP6_DEBUG",
                                "range": null,
                                "title": "Enable IP6 debug messages",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_DEBUG",
                                "help": null,
                                "id": "LWIP_ICMP6_DEBUG",
                                "name": "LWIP_ICMP6_DEBUG",
                                "range": null,
                                "title": "Enable ICMP6 debug messages",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_DEBUG",
                                "help": null,
                                "id": "LWIP_TCP_DEBUG",
                                "name": "LWIP_TCP_DEBUG",
                                "range": null,
                                "title": "Enable TCP debug messages",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "LWIP_DEBUG",
                                "help": null,
                                "id": "LWIP_SNTP_DEBUG",
                                "name": "LWIP_SNTP_DEBUG",
                                "range": null,
                                "title": "Enable SNTP debug messages",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enabling this option allows different kinds of lwIP debug output.\n\nAll lwIP debug features increase the size of the final binary.",
                        "id": "LWIP_DEBUG",
                        "is_menuconfig": true,
                        "name": "LWIP_DEBUG",
                        "range": null,
                        "title": "Enable LWIP Debug",
                        "type": "menu"
                    }
                ],
                "depends_on": null,
                "id": "component-config-lwip",
                "title": "LWIP",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice MBEDTLS_MEM_ALLOC_MODE>",
                                "help": null,
                                "id": "MBEDTLS_INTERNAL_MEM_ALLOC",
                                "name": "MBEDTLS_INTERNAL_MEM_ALLOC",
                                "range": null,
                                "title": "Internal memory",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "(SPIRAM_USE_CAPS_ALLOC || SPIRAM_USE_MALLOC) && <choice MBEDTLS_MEM_ALLOC_MODE>",
                                "help": null,
                                "id": "MBEDTLS_EXTERNAL_MEM_ALLOC",
                                "name": "MBEDTLS_EXTERNAL_MEM_ALLOC",
                                "range": null,
                                "title": "External SPIRAM",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice MBEDTLS_MEM_ALLOC_MODE>",
                                "help": null,
                                "id": "MBEDTLS_DEFAULT_MEM_ALLOC",
                                "name": "MBEDTLS_DEFAULT_MEM_ALLOC",
                                "range": null,
                                "title": "Default alloc mode",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice MBEDTLS_MEM_ALLOC_MODE>",
                                "help": null,
                                "id": "MBEDTLS_CUSTOM_MEM_ALLOC",
                                "name": "MBEDTLS_CUSTOM_MEM_ALLOC",
                                "range": null,
                                "title": "Custom alloc mode",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "ESP32_IRAM_AS_8BIT_ACCESSIBLE_MEMORY && <choice MBEDTLS_MEM_ALLOC_MODE>",
                                "help": "Allows to use IRAM memory region as 8bit accessible region.\n\nTLS input and output buffers will be allocated in IRAM section which is 32bit aligned\nmemory. Every unaligned (8bit or 16bit) access will result in an exception\nand incur penalty of certain clock cycles per unaligned read/write.",
                                "id": "MBEDTLS_IRAM_8BIT_MEM_ALLOC",
                                "name": "MBEDTLS_IRAM_8BIT_MEM_ALLOC",
                                "range": null,
                                "title": "Internal IRAM",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Allocation strategy for mbedTLS, essentially provides ability to\nallocate all required dynamic allocations from,\n\n- Internal DRAM memory only\n- External SPIRAM memory only\n- Either internal or external memory based on default malloc()\n  behavior in ESP-IDF\n- Custom allocation mode, by overwriting calloc()/free() using\n  mbedtls_platform_set_calloc_free() function\n- Internal IRAM memory wherever applicable else internal DRAM\n\nRecommended mode here is always internal (*), since that is most preferred\nfrom security perspective. But if application requirement does not\nallow sufficient free internal memory then alternate mode can be\nselected.\n\n(*) In case of ESP32-S2/ESP32-S3, hardware allows encryption of external\nSPIRAM contents provided hardware flash encryption feature is enabled.\nIn that case, using external SPIRAM allocation strategy is also safe choice\nfrom security perspective.",
                        "id": "component-config-mbedtls-memory-allocation-strategy",
                        "name": "MBEDTLS_MEM_ALLOC_MODE",
                        "title": "Memory allocation strategy",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": "!MBEDTLS_ASYMMETRIC_CONTENT_LEN",
                        "help": "Maximum TLS message length (in bytes) supported by mbedTLS.\n\n16384 is the default and this value is required to comply\nfully with TLS standards.\n\nHowever you can set a lower value in order to save RAM. This\nis safe if the other end of the connection supports Maximum\nFragment Length Negotiation Extension (max_fragment_length,\nsee RFC6066) or you know for certain that it will never send a\nmessage longer than a certain number of bytes.\n\nIf the value is set too low, symptoms are a failed TLS\nhandshake or a return value of MBEDTLS_ERR_SSL_INVALID_RECORD\n(-0x7200).",
                        "id": "MBEDTLS_SSL_MAX_CONTENT_LEN",
                        "name": "MBEDTLS_SSL_MAX_CONTENT_LEN",
                        "range": null,
                        "title": "TLS maximum message content length",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ASYMMETRIC_CONTENT_LEN",
                                "help": "This defines maximum incoming fragment length, overriding default\nmaximum content length (MBEDTLS_SSL_MAX_CONTENT_LEN).",
                                "id": "MBEDTLS_SSL_IN_CONTENT_LEN",
                                "name": "MBEDTLS_SSL_IN_CONTENT_LEN",
                                "range": [
                                    512,
                                    16384
                                ],
                                "title": "TLS maximum incoming fragment length",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ASYMMETRIC_CONTENT_LEN",
                                "help": "This defines maximum outgoing fragment length, overriding default\nmaximum content length (MBEDTLS_SSL_MAX_CONTENT_LEN).",
                                "id": "MBEDTLS_SSL_OUT_CONTENT_LEN",
                                "name": "MBEDTLS_SSL_OUT_CONTENT_LEN",
                                "range": [
                                    512,
                                    16384
                                ],
                                "title": "TLS maximum outgoing fragment length",
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "help": "If enabled, this option allows customizing TLS in/out fragment length\nin asymmetric way. Please note that enabling this with default values\nsaves 12KB of dynamic memory per TLS connection.",
                        "id": "MBEDTLS_ASYMMETRIC_CONTENT_LEN",
                        "name": "MBEDTLS_ASYMMETRIC_CONTENT_LEN",
                        "range": null,
                        "title": "Asymmetric in/out fragment length",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_DYNAMIC_BUFFER",
                                "help": "Free peer certificate after its usage in handshake process.",
                                "id": "MBEDTLS_DYNAMIC_FREE_PEER_CERT",
                                "name": "MBEDTLS_DYNAMIC_FREE_PEER_CERT",
                                "range": null,
                                "title": "Free SSL peer certificate after its usage",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_DYNAMIC_FREE_CONFIG_DATA",
                                        "help": "Free CA certificate after its usage in the handshake process.\nThis option will decrease the heap footprint for the TLS handshake, but may lead to a problem:\nIf the respective ssl object needs to perform the TLS handshake again,\nthe CA certificate should once again be registered to the ssl object.",
                                        "id": "MBEDTLS_DYNAMIC_FREE_CA_CERT",
                                        "name": "MBEDTLS_DYNAMIC_FREE_CA_CERT",
                                        "range": null,
                                        "title": "Free SSL CA certificate after its usage",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "MBEDTLS_DYNAMIC_BUFFER",
                                "help": "Free private key and DHM data after its usage in handshake process.\n\nThe option will decrease heap cost when handshake, but also lead to problem:\n\nBecasue all certificate, private key and DHM data are freed so users should register\ncertificate and private key to ssl config object again.",
                                "id": "MBEDTLS_DYNAMIC_FREE_CONFIG_DATA",
                                "name": "MBEDTLS_DYNAMIC_FREE_CONFIG_DATA",
                                "range": null,
                                "title": "Free private key and DHM data after its usage",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!MBEDTLS_SSL_PROTO_DTLS && !MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH",
                        "help": "Using dynamic TX/RX buffer. After enabling this option, mbedTLS will\nallocate TX buffer when need to send data and then free it if all data\nis sent, allocate RX buffer when need to receive data and then free it\nwhen all data is used or read by upper layer.\n\nBy default, when SSL is initialized, mbedTLS also allocate TX and\nRX buffer with the default value of \"MBEDTLS_SSL_OUT_CONTENT_LEN\" or\n\"MBEDTLS_SSL_IN_CONTENT_LEN\", so to save more heap, users can set\nthe options to be an appropriate value.",
                        "id": "MBEDTLS_DYNAMIC_BUFFER",
                        "name": "MBEDTLS_DYNAMIC_BUFFER",
                        "range": null,
                        "title": "Using dynamic TX/RX buffer",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice MBEDTLS_DEBUG_LEVEL>",
                                        "help": null,
                                        "id": "MBEDTLS_DEBUG_LEVEL_WARN",
                                        "name": "MBEDTLS_DEBUG_LEVEL_WARN",
                                        "range": null,
                                        "title": "Warning",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice MBEDTLS_DEBUG_LEVEL>",
                                        "help": null,
                                        "id": "MBEDTLS_DEBUG_LEVEL_INFO",
                                        "name": "MBEDTLS_DEBUG_LEVEL_INFO",
                                        "range": null,
                                        "title": "Info",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice MBEDTLS_DEBUG_LEVEL>",
                                        "help": null,
                                        "id": "MBEDTLS_DEBUG_LEVEL_DEBUG",
                                        "name": "MBEDTLS_DEBUG_LEVEL_DEBUG",
                                        "range": null,
                                        "title": "Debug",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice MBEDTLS_DEBUG_LEVEL>",
                                        "help": null,
                                        "id": "MBEDTLS_DEBUG_LEVEL_VERBOSE",
                                        "name": "MBEDTLS_DEBUG_LEVEL_VERBOSE",
                                        "range": null,
                                        "title": "Verbose",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "MBEDTLS_DEBUG",
                                "help": "Set mbedTLS debugging level",
                                "id": "component-config-mbedtls-enable-mbedtls-debugging-set-mbedtls-debugging-level",
                                "name": "MBEDTLS_DEBUG_LEVEL",
                                "title": "Set mbedTLS debugging level",
                                "type": "choice"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enable mbedTLS debugging functions at compile time.\n\nIf this option is enabled, you can include\n\"mbedtls/esp_debug.h\" and call mbedtls_esp_enable_debug_log()\nat runtime in order to enable mbedTLS debug output via the ESP\nlog mechanism.",
                        "id": "MBEDTLS_DEBUG",
                        "name": "MBEDTLS_DEBUG",
                        "range": null,
                        "title": "Enable mbedTLS debugging",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "MBEDTLS_DEBUG_LEVEL",
                        "name": "MBEDTLS_DEBUG_LEVEL",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "This enables the SSL buffer to be resized automatically\nbased on the negotiated maximum fragment length in each direction.",
                                "id": "MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH",
                                "name": "MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH",
                                "range": null,
                                "title": "Variable SSL buffer length",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECDH_C && MBEDTLS_ECP_RESTARTABLE",
                                "help": "Use the legacy ECDH context format.\nDefine this option only if you enable MBEDTLS_ECP_RESTARTABLE or if you\nwant to access ECDH context fields directly.",
                                "id": "MBEDTLS_ECDH_LEGACY_CONTEXT",
                                "name": "MBEDTLS_ECDH_LEGACY_CONTEXT",
                                "range": null,
                                "title": "Use a backward compatible ECDH context (Experimental)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enables users to configure the set of trusted certificates\nthrough a callback instead of a linked list.\n\nSee mbedTLS documentation for required API and more details.",
                                "id": "MBEDTLS_X509_TRUSTED_CERT_CALLBACK",
                                "name": "MBEDTLS_X509_TRUSTED_CERT_CALLBACK",
                                "range": null,
                                "title": "Enable trusted certificate callbacks",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable serialization of the TLS context structures\nThis is a local optimization in handling a single, potentially long-lived connection.\n\nSee mbedTLS documentation for required API and more details.\nDisabling this option will save some code size.",
                                "id": "MBEDTLS_SSL_CONTEXT_SERIALIZATION",
                                "name": "MBEDTLS_SSL_CONTEXT_SERIALIZATION",
                                "range": null,
                                "title": "Enable serialization of the TLS context structures",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "!MBEDTLS_DYNAMIC_FREE_PEER_CERT",
                                "help": "Keep the peer's certificate after completion of the handshake.\nDisabling this option will save about 4kB of heap and some code size.\n\nSee mbedTLS documentation for required API and more details.",
                                "id": "MBEDTLS_SSL_KEEP_PEER_CERTIFICATE",
                                "name": "MBEDTLS_SSL_KEEP_PEER_CERTIFICATE",
                                "range": null,
                                "title": "Keep peer certificate after handshake completion",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "MBEDTLS_SSL_DTLS_CONNECTION_ID",
                                                "help": "Maximum length of CIDs used for incoming DTLS messages",
                                                "id": "MBEDTLS_SSL_CID_IN_LEN_MAX",
                                                "name": "MBEDTLS_SSL_CID_IN_LEN_MAX",
                                                "range": null,
                                                "title": "Maximum length of CIDs used for incoming DTLS messages",
                                                "type": "int"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "MBEDTLS_SSL_DTLS_CONNECTION_ID",
                                                "help": "Maximum length of CIDs used for outgoing DTLS messages",
                                                "id": "MBEDTLS_SSL_CID_OUT_LEN_MAX",
                                                "name": "MBEDTLS_SSL_CID_OUT_LEN_MAX",
                                                "range": null,
                                                "title": "Maximum length of CIDs used for outgoing DTLS messages",
                                                "type": "int"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "MBEDTLS_SSL_DTLS_CONNECTION_ID",
                                                "help": "Controls the use of record plaintext padding when\nusing the Connection ID extension in DTLS 1.2.\n\nThe padding will always be chosen so that the length of the\npadded plaintext is a multiple of the value of this option.\n\nNotes:\n    A value of 1 means that no padding will be used for outgoing records.\n    On systems lacking division instructions, a power of two should be preferred.",
                                                "id": "MBEDTLS_SSL_CID_PADDING_GRANULARITY",
                                                "name": "MBEDTLS_SSL_CID_PADDING_GRANULARITY",
                                                "range": null,
                                                "title": "Record plaintext padding (for DTLS 1.2)",
                                                "type": "int"
                                            }
                                        ],
                                        "depends_on": "MBEDTLS_SSL_PROTO_DTLS",
                                        "help": "Enable support for the DTLS Connection ID extension which allows to\nidentify DTLS connections across changes in the underlying transport.\nThe Connection ID extension is still in draft state.\nRefer: version draft-ietf-tls-dtls-connection-id-05",
                                        "id": "MBEDTLS_SSL_DTLS_CONNECTION_ID",
                                        "name": "MBEDTLS_SSL_DTLS_CONNECTION_ID",
                                        "range": null,
                                        "title": "Support for the DTLS Connection ID extension",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_SSL_PROTO_DTLS",
                                        "help": "Enable support for negotiation of DTLS-SRTP (RFC 5764) through the use_srtp extension.\n\nSee mbedTLS documentation for required API and more details.\nDisabling this option will save some code size.",
                                        "id": "MBEDTLS_SSL_DTLS_SRTP",
                                        "name": "MBEDTLS_SSL_DTLS_SRTP",
                                        "range": null,
                                        "title": "Enable support for negotiation of DTLS-SRTP (RFC 5764)",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "id": "component-config-mbedtls-mbedtls-v2-28-x-related-dtls-based-configurations",
                                "title": "DTLS-based configurations",
                                "type": "menu"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-mbedtls-mbedtls-v2-28-x-related",
                        "title": "mbedTLS v2.28.x related",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice MBEDTLS_DEFAULT_CERTIFICATE_BUNDLE>",
                                                "help": null,
                                                "id": "MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_FULL",
                                                "name": "MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_FULL",
                                                "range": null,
                                                "title": "Use the full default certificate bundle",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice MBEDTLS_DEFAULT_CERTIFICATE_BUNDLE>",
                                                "help": "Use only the most common certificates from the default bundles, reducing the size with 50%,\nwhile still having around 99% coverage.",
                                                "id": "MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_CMN",
                                                "name": "MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_CMN",
                                                "range": null,
                                                "title": "Use only the most common certificates from the default bundles",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice MBEDTLS_DEFAULT_CERTIFICATE_BUNDLE>",
                                                "help": null,
                                                "id": "MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_NONE",
                                                "name": "MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_NONE",
                                                "range": null,
                                                "title": "Do not use the default certificate bundle",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "MBEDTLS_CERTIFICATE_BUNDLE",
                                        "help": null,
                                        "id": "component-config-mbedtls-certificate-bundle-enable-trusted-root-certificate-bundle-default-certificate-bundle-options",
                                        "name": "MBEDTLS_DEFAULT_CERTIFICATE_BUNDLE",
                                        "title": "Default certificate bundle options",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "MBEDTLS_CUSTOM_CERTIFICATE_BUNDLE",
                                                "help": "Name of the custom certificate directory or file. This path is evaluated\nrelative to the project root directory.",
                                                "id": "MBEDTLS_CUSTOM_CERTIFICATE_BUNDLE_PATH",
                                                "name": "MBEDTLS_CUSTOM_CERTIFICATE_BUNDLE_PATH",
                                                "range": null,
                                                "title": "Custom certificate bundle path",
                                                "type": "string"
                                            }
                                        ],
                                        "depends_on": "MBEDTLS_CERTIFICATE_BUNDLE",
                                        "help": null,
                                        "id": "MBEDTLS_CUSTOM_CERTIFICATE_BUNDLE",
                                        "name": "MBEDTLS_CUSTOM_CERTIFICATE_BUNDLE",
                                        "range": null,
                                        "title": "Add custom certificates to the default bundle",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_CERTIFICATE_BUNDLE",
                                        "help": null,
                                        "id": "MBEDTLS_CERTIFICATE_BUNDLE_MAX_CERTS",
                                        "name": "MBEDTLS_CERTIFICATE_BUNDLE_MAX_CERTS",
                                        "range": null,
                                        "title": "Maximum no of certificates allowed in certificate bundle",
                                        "type": "int"
                                    }
                                ],
                                "depends_on": null,
                                "help": "Enable support for large number of default root certificates\n\nWhen enabled this option allows user to store default as well\nas customer specific root certificates in compressed format rather\nthan storing full certificate. For the root certificates the public key and the subject name\nwill be stored.",
                                "id": "MBEDTLS_CERTIFICATE_BUNDLE",
                                "name": "MBEDTLS_CERTIFICATE_BUNDLE",
                                "range": null,
                                "title": "Enable trusted root certificate bundle",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-mbedtls-certificate-bundle",
                        "title": "Certificate Bundle",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enable \"non-blocking\" ECC operations that can return early and be resumed.",
                        "id": "MBEDTLS_ECP_RESTARTABLE",
                        "name": "MBEDTLS_ECP_RESTARTABLE",
                        "range": null,
                        "title": "Enable mbedTLS ecp restartable",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_AES_C || MBEDTLS_DES_C",
                        "help": "Enable the CMAC (Cipher-based Message Authentication Code) mode for\nblock ciphers.",
                        "id": "MBEDTLS_CMAC_C",
                        "name": "MBEDTLS_CMAC_C",
                        "range": null,
                        "title": "Enable CMAC mode for block ciphers",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "!IDF_TARGET_ESP32 && MBEDTLS_HARDWARE_AES",
                                "help": "Use an interrupt to coordinate long AES operations.\n\nThis allows other code to run on the CPU while an AES operation is pending.\nOtherwise the CPU busy-waits.",
                                "id": "MBEDTLS_AES_USE_INTERRUPT",
                                "name": "MBEDTLS_AES_USE_INTERRUPT",
                                "range": null,
                                "title": "Use interrupt for long AES operations",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32S2 && MBEDTLS_HARDWARE_AES",
                                "help": "Enable partially hardware accelerated GCM. GHASH calculation is still done\nin software.\n\nIf MBEDTLS_HARDWARE_GCM is disabled and MBEDTLS_HARDWARE_AES is enabled then\nmbedTLS will still use the hardware accelerated AES block operation, but\non a single block at a time.",
                                "id": "MBEDTLS_HARDWARE_GCM",
                                "name": "MBEDTLS_HARDWARE_GCM",
                                "range": null,
                                "title": "Enable partially hardware accelerated GCM",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!SPIRAM_CACHE_WORKAROUND_STRATEGY_DUPLDST",
                        "help": "Enable hardware accelerated AES encryption & decryption.\n\nNote that if the ESP32 CPU is running at 240MHz, hardware AES does not\noffer any speed boost over software AES.",
                        "id": "MBEDTLS_HARDWARE_AES",
                        "name": "MBEDTLS_HARDWARE_AES",
                        "range": null,
                        "title": "Enable hardware AES acceleration",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!SPIRAM_CACHE_WORKAROUND_STRATEGY_DUPLDST",
                        "help": "Enable hardware accelerated multiple precision integer operations.\n\nHardware accelerated multiplication, modulo multiplication,\nand modular exponentiation for up to SOC_RSA_MAX_BIT_LEN bit results.\n\nThese operations are used by RSA.",
                        "id": "MBEDTLS_HARDWARE_MPI",
                        "name": "MBEDTLS_HARDWARE_MPI",
                        "range": null,
                        "title": "Enable hardware MPI (bignum) acceleration",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!SPIRAM_CACHE_WORKAROUND_STRATEGY_DUPLDST",
                        "help": "Enable hardware accelerated SHA1, SHA256, SHA384 & SHA512 in mbedTLS.\n\nDue to a hardware limitation, on the ESP32 hardware acceleration is only\nguaranteed if SHA digests are calculated one at a time. If more\nthan one SHA digest is calculated at the same time, one will\nbe calculated fully in hardware and the rest will be calculated\n(at least partially calculated) in software. This happens automatically.\n\nSHA hardware acceleration is faster than software in some situations but\nslower in others. You should benchmark to find the best setting for you.",
                        "id": "MBEDTLS_HARDWARE_SHA",
                        "name": "MBEDTLS_HARDWARE_SHA",
                        "range": null,
                        "title": "Enable hardware SHA acceleration",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Use ROM MD5 in mbedTLS.",
                        "id": "MBEDTLS_ROM_MD5",
                        "name": "MBEDTLS_ROM_MD5",
                        "range": null,
                        "title": "Use MD5 implementation in ROM",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This option enables hardware acceleration for ECDSA sign function, only\nwhen using ATECC608A cryptoauth chip (integrated with ESP32-WROOM-32SE)",
                        "id": "MBEDTLS_ATCA_HW_ECDSA_SIGN",
                        "name": "MBEDTLS_ATCA_HW_ECDSA_SIGN",
                        "range": null,
                        "title": "Enable hardware ECDSA sign acceleration when using ATECC608A",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This option enables hardware acceleration for ECDSA sign function, only\nwhen using ATECC608A cryptoauth chip (integrated with ESP32-WROOM-32SE)",
                        "id": "MBEDTLS_ATCA_HW_ECDSA_VERIFY",
                        "name": "MBEDTLS_ATCA_HW_ECDSA_VERIFY",
                        "range": null,
                        "title": "Enable hardware ECDSA verify acceleration when using ATECC608A",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_HAVE_TIME",
                                "help": "Enables X.509 certificate expiry checks in mbedTLS.\n\nIf this option is disabled (default) then X.509 certificate\n\"valid from\" and \"valid to\" timestamp fields are ignored.\n\nIf this option is enabled, these fields are compared with the\ncurrent system date and time. The time is retrieved using the\nstandard time() and gmtime() functions. If the certificate is not\nvalid for the current system time then verification will fail with\ncode MBEDTLS_X509_BADCERT_FUTURE or MBEDTLS_X509_BADCERT_EXPIRED.\n\nEnabling this option requires adding functionality in the firmware\nto set the system clock to a valid timestamp before using TLS. The\nrecommended way to do this is via ESP-IDF's SNTP functionality, but\nany method can be used.\n\nIn the case where only a small number of certificates are trusted by\nthe device, please carefully consider the tradeoffs of enabling this\noption. There may be undesired consequences, for example if all\ntrusted certificates expire while the device is offline and a TLS\nconnection is required to update. Or if an issue with the SNTP\nserver means that the system time is invalid for an extended period\nafter a reset.",
                                "id": "MBEDTLS_HAVE_TIME_DATE",
                                "name": "MBEDTLS_HAVE_TIME_DATE",
                                "range": null,
                                "title": "Enable mbedtls certificate expiry check",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!ESP_TIME_FUNCS_USE_NONE",
                        "help": "Enable use of time.h functions (time() and gmtime()) by mbedTLS.\n\nThis option doesn't require the system time to be correct, but enables\nfunctionality that requires relative timekeeping - for example periodic\nexpiry of TLS session tickets or session cache entries.\n\nDisabling this option will save some firmware size, particularly if\nthe rest of the firmware doesn't call any standard timekeeeping\nfunctions.",
                        "id": "MBEDTLS_HAVE_TIME",
                        "name": "MBEDTLS_HAVE_TIME",
                        "range": null,
                        "title": "Enable mbedtls time support",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Standard ECDSA is \"fragile\" in the sense that lack of entropy when signing\nmay result in a compromise of the long-term signing key.",
                        "id": "MBEDTLS_ECDSA_DETERMINISTIC",
                        "name": "MBEDTLS_ECDSA_DETERMINISTIC",
                        "range": null,
                        "title": "Enable deterministic ECDSA",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enable MBEDTLS_SHA512_C adds support for SHA-384 and SHA-512.",
                        "id": "MBEDTLS_SHA512_C",
                        "name": "MBEDTLS_SHA512_C",
                        "range": null,
                        "title": "Enable the SHA-384 and SHA-512 cryptographic hash algorithms",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice MBEDTLS_TLS_MODE>",
                                "help": null,
                                "id": "MBEDTLS_TLS_SERVER_AND_CLIENT",
                                "name": "MBEDTLS_TLS_SERVER_AND_CLIENT",
                                "range": null,
                                "title": "Server & Client",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice MBEDTLS_TLS_MODE>",
                                "help": null,
                                "id": "MBEDTLS_TLS_SERVER_ONLY",
                                "name": "MBEDTLS_TLS_SERVER_ONLY",
                                "range": null,
                                "title": "Server",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice MBEDTLS_TLS_MODE>",
                                "help": null,
                                "id": "MBEDTLS_TLS_CLIENT_ONLY",
                                "name": "MBEDTLS_TLS_CLIENT_ONLY",
                                "range": null,
                                "title": "Client",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice MBEDTLS_TLS_MODE>",
                                "help": null,
                                "id": "MBEDTLS_TLS_DISABLED",
                                "name": "MBEDTLS_TLS_DISABLED",
                                "range": null,
                                "title": "None",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "mbedTLS can be compiled with protocol support for the TLS\nserver, TLS client, or both server and client.\n\nReducing the number of TLS roles supported saves code size.",
                        "id": "component-config-mbedtls-tls-protocol-role",
                        "name": "MBEDTLS_TLS_MODE",
                        "title": "TLS Protocol Role",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "MBEDTLS_TLS_SERVER",
                        "name": "MBEDTLS_TLS_SERVER",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "MBEDTLS_TLS_CLIENT",
                        "name": "MBEDTLS_TLS_CLIENT",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "MBEDTLS_TLS_ENABLED",
                        "name": "MBEDTLS_TLS_ENABLED",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_TLS_ENABLED",
                                        "help": "Enable to support symmetric key PSK (pre-shared-key) TLS key exchange modes.",
                                        "id": "MBEDTLS_KEY_EXCHANGE_PSK",
                                        "name": "MBEDTLS_KEY_EXCHANGE_PSK",
                                        "range": null,
                                        "title": "Enable PSK based ciphersuite modes",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_TLS_ENABLED",
                                        "help": "Enable to support Diffie-Hellman PSK (pre-shared-key) TLS authentication modes.",
                                        "id": "MBEDTLS_KEY_EXCHANGE_DHE_PSK",
                                        "name": "MBEDTLS_KEY_EXCHANGE_DHE_PSK",
                                        "range": null,
                                        "title": "Enable DHE-PSK based ciphersuite modes",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_ECDH_C && MBEDTLS_TLS_ENABLED",
                                        "help": "Enable to support Elliptic-Curve-Diffie-Hellman PSK (pre-shared-key) TLS authentication modes.",
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDHE_PSK",
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDHE_PSK",
                                        "range": null,
                                        "title": "Enable ECDHE-PSK based ciphersuite modes",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_TLS_ENABLED",
                                        "help": "Enable to support RSA PSK (pre-shared-key) TLS authentication modes.",
                                        "id": "MBEDTLS_KEY_EXCHANGE_RSA_PSK",
                                        "name": "MBEDTLS_KEY_EXCHANGE_RSA_PSK",
                                        "range": null,
                                        "title": "Enable RSA-PSK based ciphersuite modes",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "MBEDTLS_TLS_ENABLED",
                                "help": "Enable to show configuration for different types of pre-shared-key TLS authentatication methods.\n\nLeaving this options disabled will save code size if they are not used.",
                                "id": "MBEDTLS_PSK_MODES",
                                "name": "MBEDTLS_PSK_MODES",
                                "range": null,
                                "title": "Enable pre-shared-key ciphersuites",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_TLS_ENABLED",
                                "help": "Enable to support ciphersuites with prefix TLS-RSA-WITH-",
                                "id": "MBEDTLS_KEY_EXCHANGE_RSA",
                                "name": "MBEDTLS_KEY_EXCHANGE_RSA",
                                "range": null,
                                "title": "Enable RSA-only based ciphersuite modes",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_TLS_ENABLED",
                                "help": "Enable to support ciphersuites with prefix TLS-DHE-RSA-WITH-",
                                "id": "MBEDTLS_KEY_EXCHANGE_DHE_RSA",
                                "name": "MBEDTLS_KEY_EXCHANGE_DHE_RSA",
                                "range": null,
                                "title": "Enable DHE-RSA based ciphersuite modes",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_TLS_ENABLED",
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDHE-RSA-WITH-",
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDHE_RSA",
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDHE_RSA",
                                        "range": null,
                                        "title": "Enable ECDHE-RSA based ciphersuite modes",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_ECDSA_C && MBEDTLS_TLS_ENABLED",
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDHE-RSA-WITH-",
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA",
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA",
                                        "range": null,
                                        "title": "Enable ECDHE-ECDSA based ciphersuite modes",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_ECDSA_C && MBEDTLS_TLS_ENABLED",
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDHE-RSA-WITH-",
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA",
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA",
                                        "range": null,
                                        "title": "Enable ECDH-ECDSA based ciphersuite modes",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_TLS_ENABLED",
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDHE-RSA-WITH-",
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDH_RSA",
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDH_RSA",
                                        "range": null,
                                        "title": "Enable ECDH-RSA based ciphersuite modes",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "MBEDTLS_ECP_C && MBEDTLS_TLS_ENABLED",
                                "help": "Enable to show Elliptic Curve based ciphersuite mode options.\n\nDisabling all Elliptic Curve ciphersuites saves code size and\ncan give slightly faster TLS handshakes, provided the server supports\nRSA-only ciphersuite modes.",
                                "id": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE",
                                "name": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE",
                                "range": null,
                                "title": "Support Elliptic Curve based ciphersuites",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECJPAKE_C && MBEDTLS_ECP_DP_SECP256R1_ENABLED && MBEDTLS_TLS_ENABLED",
                                "help": "Enable to support ciphersuites with prefix TLS-ECJPAKE-WITH-",
                                "id": "MBEDTLS_KEY_EXCHANGE_ECJPAKE",
                                "name": "MBEDTLS_KEY_EXCHANGE_ECJPAKE",
                                "range": null,
                                "title": "Enable ECJPAKE based ciphersuite modes",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "MBEDTLS_TLS_ENABLED",
                        "id": "component-config-mbedtls-tls-key-exchange-methods",
                        "title": "TLS Key Exchange Methods",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_TLS_ENABLED",
                        "help": "The two main uses of renegotiation are (1) refresh keys on long-lived\nconnections and (2) client authentication after the initial handshake.\nIf you don't need renegotiation, disabling it will save code size and\nreduce the possibility of abuse/vulnerability.",
                        "id": "MBEDTLS_SSL_RENEGOTIATION",
                        "name": "MBEDTLS_SSL_RENEGOTIATION",
                        "range": null,
                        "title": "Support TLS renegotiation",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_TLS_ENABLED",
                        "help": "Support the legacy SSL 3.0 protocol. Most servers will speak a newer\nTLS protocol these days.",
                        "id": "MBEDTLS_SSL_PROTO_SSL3",
                        "name": "MBEDTLS_SSL_PROTO_SSL3",
                        "range": null,
                        "title": "Legacy SSL 3.0 support",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_TLS_ENABLED",
                        "help": null,
                        "id": "MBEDTLS_SSL_PROTO_TLS1",
                        "name": "MBEDTLS_SSL_PROTO_TLS1",
                        "range": null,
                        "title": "Support TLS 1.0 protocol",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_TLS_ENABLED",
                        "help": null,
                        "id": "MBEDTLS_SSL_PROTO_TLS1_1",
                        "name": "MBEDTLS_SSL_PROTO_TLS1_1",
                        "range": null,
                        "title": "Support TLS 1.1 protocol",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_TLS_ENABLED",
                        "help": null,
                        "id": "MBEDTLS_SSL_PROTO_TLS1_2",
                        "name": "MBEDTLS_SSL_PROTO_TLS1_2",
                        "range": null,
                        "title": "Support TLS 1.2 protocol",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_TLS_ENABLED",
                        "help": "Provisions for GM/T SSL 1.1 support",
                        "id": "MBEDTLS_SSL_PROTO_GMTSSL1_1",
                        "name": "MBEDTLS_SSL_PROTO_GMTSSL1_1",
                        "range": null,
                        "title": "Support GM/T SSL 1.1 protocol",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_SSL_PROTO_TLS1_1 || MBEDTLS_SSL_PROTO_TLS1_2",
                        "help": "Requires TLS 1.1 to be enabled for DTLS 1.0\nRequires TLS 1.2 to be enabled for DTLS 1.2",
                        "id": "MBEDTLS_SSL_PROTO_DTLS",
                        "name": "MBEDTLS_SSL_PROTO_DTLS",
                        "range": null,
                        "title": "Support DTLS protocol (all versions)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_TLS_ENABLED",
                        "help": "Disabling this option will save some code size if it is not needed.",
                        "id": "MBEDTLS_SSL_ALPN",
                        "name": "MBEDTLS_SSL_ALPN",
                        "range": null,
                        "title": "Support ALPN (Application Layer Protocol Negotiation)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_TLS_ENABLED",
                        "help": "Client support for RFC 5077 session tickets. See mbedTLS documentation for more details.\nDisabling this option will save some code size.",
                        "id": "MBEDTLS_CLIENT_SSL_SESSION_TICKETS",
                        "name": "MBEDTLS_CLIENT_SSL_SESSION_TICKETS",
                        "range": null,
                        "title": "TLS: Client Support for RFC 5077 SSL session tickets",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_TLS_ENABLED",
                        "help": "Disabling this avoids problems with mis-issued and/or misused (intermediate) CA and leaf certificates.\nDepending on your PKI use, disabling this can be a security risk.",
                        "id": "MBEDTLS_X509_CHECK_KEY_USAGE",
                        "name": "MBEDTLS_X509_CHECK_KEY_USAGE",
                        "range": null,
                        "title": "Enable verification of the keyUsage extension",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_TLS_ENABLED",
                        "help": "Disabling this avoids problems with mis-issued and/or misused certificates.\nDepending on your PKI use, disabling this can be a security risk.",
                        "id": "MBEDTLS_X509_CHECK_EXTENDED_KEY_USAGE",
                        "name": "MBEDTLS_X509_CHECK_EXTENDED_KEY_USAGE",
                        "range": null,
                        "title": "Enable verification of the extendedKeyUsage extension",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_TLS_ENABLED",
                        "help": "Server support for RFC 5077 session tickets. See mbedTLS documentation for more details.\nDisabling this option will save some code size.",
                        "id": "MBEDTLS_SERVER_SSL_SESSION_TICKETS",
                        "name": "MBEDTLS_SERVER_SSL_SESSION_TICKETS",
                        "range": null,
                        "title": "TLS: Server Support for RFC 5077 SSL session tickets",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "MBEDTLS_AES_C",
                                "name": "MBEDTLS_AES_C",
                                "range": null,
                                "title": "AES block cipher",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": null,
                                "id": "MBEDTLS_CAMELLIA_C",
                                "name": "MBEDTLS_CAMELLIA_C",
                                "range": null,
                                "title": "Camellia block cipher",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enables the DES block cipher to support 3DES-based TLS ciphersuites.\n\n3DES is vulnerable to the Sweet32 attack and should only be enabled\nif absolutely necessary.",
                                "id": "MBEDTLS_DES_C",
                                "name": "MBEDTLS_DES_C",
                                "range": null,
                                "title": "DES block cipher (legacy, insecure)",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice MBEDTLS_RC4_MODE>",
                                        "help": null,
                                        "id": "MBEDTLS_RC4_DISABLED",
                                        "name": "MBEDTLS_RC4_DISABLED",
                                        "range": null,
                                        "title": "Disabled",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice MBEDTLS_RC4_MODE>",
                                        "help": null,
                                        "id": "MBEDTLS_RC4_ENABLED_NO_DEFAULT",
                                        "name": "MBEDTLS_RC4_ENABLED_NO_DEFAULT",
                                        "range": null,
                                        "title": "Enabled, not in default ciphersuites",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice MBEDTLS_RC4_MODE>",
                                        "help": null,
                                        "id": "MBEDTLS_RC4_ENABLED",
                                        "name": "MBEDTLS_RC4_ENABLED",
                                        "range": null,
                                        "title": "Enabled",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": null,
                                "help": "ARCFOUR (RC4) stream cipher can be disabled entirely, enabled but not\nadded to default ciphersuites, or enabled completely.\n\nPlease consider the security implications before enabling RC4.",
                                "id": "component-config-mbedtls-symmetric-ciphers-rc4-stream-cipher-legacy-insecure-",
                                "name": "MBEDTLS_RC4_MODE",
                                "title": "RC4 Stream Cipher (legacy, insecure)",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enables the Blowfish block cipher (not used for TLS sessions.)\n\nThe Blowfish cipher is not used for mbedTLS TLS sessions but can be\nused for other purposes. Read up on the limitations of Blowfish (including\nSweet32) before enabling.",
                                "id": "MBEDTLS_BLOWFISH_C",
                                "name": "MBEDTLS_BLOWFISH_C",
                                "range": null,
                                "title": "Blowfish block cipher (read help)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enables the XTEA block cipher.",
                                "id": "MBEDTLS_XTEA_C",
                                "name": "MBEDTLS_XTEA_C",
                                "range": null,
                                "title": "XTEA block cipher",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_AES_C || MBEDTLS_CAMELLIA_C",
                                "help": "Enable Counter with CBC-MAC (CCM) modes for AES and/or Camellia ciphers.\n\nDisabling this option saves some code size.",
                                "id": "MBEDTLS_CCM_C",
                                "name": "MBEDTLS_CCM_C",
                                "range": null,
                                "title": "CCM (Counter with CBC-MAC) block cipher modes",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_AES_C || MBEDTLS_CAMELLIA_C",
                                "help": "Enable Galois/Counter Mode for AES and/or Camellia ciphers.\n\nThis option is generally faster than CCM.",
                                "id": "MBEDTLS_GCM_C",
                                "name": "MBEDTLS_GCM_C",
                                "range": null,
                                "title": "GCM (Galois/Counter) block cipher modes",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_AES_C",
                                "help": "Enable NIST key wrapping and key wrapping padding.",
                                "id": "MBEDTLS_NIST_KW_C",
                                "name": "MBEDTLS_NIST_KW_C",
                                "range": null,
                                "title": "NIST key wrapping (KW) and KW padding (KWP)",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-mbedtls-symmetric-ciphers",
                        "title": "Symmetric Ciphers",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enable the RIPEMD-160 hash algorithm.",
                        "id": "MBEDTLS_RIPEMD160_C",
                        "name": "MBEDTLS_RIPEMD160_C",
                        "range": null,
                        "title": "Enable RIPEMD-160 hash algorithm",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable decoding/parsing of PEM formatted certificates.\n\nIf your certificates are all in the simpler DER format, disabling\nthis option will save some code size.",
                                "id": "MBEDTLS_PEM_PARSE_C",
                                "name": "MBEDTLS_PEM_PARSE_C",
                                "range": null,
                                "title": "Read & Parse PEM formatted certificates",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable writing of PEM formatted certificates.\n\nIf writing certificate data only in DER format, disabling this\noption will save some code size.",
                                "id": "MBEDTLS_PEM_WRITE_C",
                                "name": "MBEDTLS_PEM_WRITE_C",
                                "range": null,
                                "title": "Write PEM formatted certificates",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Support for parsing X.509 Certifificate Revocation Lists.",
                                "id": "MBEDTLS_X509_CRL_PARSE_C",
                                "name": "MBEDTLS_X509_CRL_PARSE_C",
                                "range": null,
                                "title": "X.509 CRL parsing",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Support for parsing X.509 Certifificate Signing Requests",
                                "id": "MBEDTLS_X509_CSR_PARSE_C",
                                "name": "MBEDTLS_X509_CSR_PARSE_C",
                                "range": null,
                                "title": "X.509 CSR parsing",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-mbedtls-certificates",
                        "title": "Certificates",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "MBEDTLS_ECDH_C",
                                        "help": "Enable ECDSA. Needed to use ECDSA-xxx TLS ciphersuites.",
                                        "id": "MBEDTLS_ECDSA_C",
                                        "name": "MBEDTLS_ECDSA_C",
                                        "range": null,
                                        "title": "Elliptic Curve DSA",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "MBEDTLS_ECP_C",
                                "help": "Enable ECDH. Needed to use ECDHE-xxx TLS ciphersuites.",
                                "id": "MBEDTLS_ECDH_C",
                                "name": "MBEDTLS_ECDH_C",
                                "range": null,
                                "title": "Elliptic Curve Diffie-Hellman (ECDH)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECP_C",
                                "help": "Enable ECJPAKE. Needed to use ECJPAKE-xxx TLS ciphersuites.",
                                "id": "MBEDTLS_ECJPAKE_C",
                                "name": "MBEDTLS_ECJPAKE_C",
                                "range": null,
                                "title": "Elliptic curve J-PAKE",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECP_C",
                                "help": "Enable support for SECP192R1 Elliptic Curve.",
                                "id": "MBEDTLS_ECP_DP_SECP192R1_ENABLED",
                                "name": "MBEDTLS_ECP_DP_SECP192R1_ENABLED",
                                "range": null,
                                "title": "Enable SECP192R1 curve",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECP_C",
                                "help": "Enable support for SECP224R1 Elliptic Curve.",
                                "id": "MBEDTLS_ECP_DP_SECP224R1_ENABLED",
                                "name": "MBEDTLS_ECP_DP_SECP224R1_ENABLED",
                                "range": null,
                                "title": "Enable SECP224R1 curve",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECP_C",
                                "help": "Enable support for SECP256R1 Elliptic Curve.",
                                "id": "MBEDTLS_ECP_DP_SECP256R1_ENABLED",
                                "name": "MBEDTLS_ECP_DP_SECP256R1_ENABLED",
                                "range": null,
                                "title": "Enable SECP256R1 curve",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECP_C",
                                "help": "Enable support for SECP384R1 Elliptic Curve.",
                                "id": "MBEDTLS_ECP_DP_SECP384R1_ENABLED",
                                "name": "MBEDTLS_ECP_DP_SECP384R1_ENABLED",
                                "range": null,
                                "title": "Enable SECP384R1 curve",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECP_C",
                                "help": "Enable support for SECP521R1 Elliptic Curve.",
                                "id": "MBEDTLS_ECP_DP_SECP521R1_ENABLED",
                                "name": "MBEDTLS_ECP_DP_SECP521R1_ENABLED",
                                "range": null,
                                "title": "Enable SECP521R1 curve",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECP_C",
                                "help": "Enable support for SECP192K1 Elliptic Curve.",
                                "id": "MBEDTLS_ECP_DP_SECP192K1_ENABLED",
                                "name": "MBEDTLS_ECP_DP_SECP192K1_ENABLED",
                                "range": null,
                                "title": "Enable SECP192K1 curve",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECP_C",
                                "help": "Enable support for SECP224K1 Elliptic Curve.",
                                "id": "MBEDTLS_ECP_DP_SECP224K1_ENABLED",
                                "name": "MBEDTLS_ECP_DP_SECP224K1_ENABLED",
                                "range": null,
                                "title": "Enable SECP224K1 curve",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECP_C",
                                "help": "Enable support for SECP256K1 Elliptic Curve.",
                                "id": "MBEDTLS_ECP_DP_SECP256K1_ENABLED",
                                "name": "MBEDTLS_ECP_DP_SECP256K1_ENABLED",
                                "range": null,
                                "title": "Enable SECP256K1 curve",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECP_C",
                                "help": "support for DP Elliptic Curve.",
                                "id": "MBEDTLS_ECP_DP_BP256R1_ENABLED",
                                "name": "MBEDTLS_ECP_DP_BP256R1_ENABLED",
                                "range": null,
                                "title": "Enable BP256R1 curve",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECP_C",
                                "help": "support for DP Elliptic Curve.",
                                "id": "MBEDTLS_ECP_DP_BP384R1_ENABLED",
                                "name": "MBEDTLS_ECP_DP_BP384R1_ENABLED",
                                "range": null,
                                "title": "Enable BP384R1 curve",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECP_C",
                                "help": "support for DP Elliptic Curve.",
                                "id": "MBEDTLS_ECP_DP_BP512R1_ENABLED",
                                "name": "MBEDTLS_ECP_DP_BP512R1_ENABLED",
                                "range": null,
                                "title": "Enable BP512R1 curve",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECP_C",
                                "help": "Enable support for CURVE25519 Elliptic Curve.",
                                "id": "MBEDTLS_ECP_DP_CURVE25519_ENABLED",
                                "name": "MBEDTLS_ECP_DP_CURVE25519_ENABLED",
                                "range": null,
                                "title": "Enable CURVE25519 curve",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_ECP_C",
                                "help": "NIST 'modulo p' optimisations increase Elliptic Curve operation performance.\n\nDisabling this option saves some code size.\n\n# end of Elliptic Curve options",
                                "id": "MBEDTLS_ECP_NIST_OPTIM",
                                "name": "MBEDTLS_ECP_NIST_OPTIM",
                                "range": null,
                                "title": "NIST 'modulo p' optimisations",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": null,
                        "id": "MBEDTLS_ECP_C",
                        "is_menuconfig": true,
                        "name": "MBEDTLS_ECP_C",
                        "range": null,
                        "title": "Elliptic Curve Ciphers",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enable support for Poly1305 MAC algorithm.",
                        "id": "MBEDTLS_POLY1305_C",
                        "name": "MBEDTLS_POLY1305_C",
                        "range": null,
                        "title": "Poly1305 MAC algorithm",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_CHACHA20_C && MBEDTLS_POLY1305_C",
                                "help": "Enable support for ChaCha20-Poly1305 AEAD algorithm.",
                                "id": "MBEDTLS_CHACHAPOLY_C",
                                "name": "MBEDTLS_CHACHAPOLY_C",
                                "range": null,
                                "title": "ChaCha20-Poly1305 AEAD algorithm",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enable support for Chacha20 stream cipher.",
                        "id": "MBEDTLS_CHACHA20_C",
                        "name": "MBEDTLS_CHACHA20_C",
                        "range": null,
                        "title": "Chacha20 stream cipher",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enable support for the Hashed Message Authentication Code\n(HMAC)-based key derivation function (HKDF).",
                        "id": "MBEDTLS_HKDF_C",
                        "name": "MBEDTLS_HKDF_C",
                        "range": null,
                        "title": "HKDF algorithm (RFC 5869)",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_THREADING_C",
                                "help": "Enable threading alt to allow your own alternate threading implementation.",
                                "id": "MBEDTLS_THREADING_ALT",
                                "name": "MBEDTLS_THREADING_ALT",
                                "range": null,
                                "title": "Enable threading alternate implementation",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_THREADING_C",
                                "help": "Enable the pthread wrapper layer for the threading layer.",
                                "id": "MBEDTLS_THREADING_PTHREAD",
                                "name": "MBEDTLS_THREADING_PTHREAD",
                                "range": null,
                                "title": "Enable threading pthread implementation",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "If you do intend to use contexts between threads, you will need to enable\nthis layer to prevent race conditions.",
                        "id": "MBEDTLS_THREADING_C",
                        "name": "MBEDTLS_THREADING_C",
                        "range": null,
                        "title": "Enable the threading abstraction layer",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "MBEDTLS_HARDWARE_MPI",
                        "help": "Fallback to software implementation for RSA key lengths\nlarger than SOC_RSA_MAX_BIT_LEN. If this is not active\nthen the ESP will be unable to process keys greater\nthan SOC_RSA_MAX_BIT_LEN.",
                        "id": "MBEDTLS_LARGE_KEY_SOFTWARE_MPI",
                        "name": "MBEDTLS_LARGE_KEY_SOFTWARE_MPI",
                        "range": null,
                        "title": "Fallback to software implementation for larger MPI values",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "MBEDTLS_SECURITY_RISKS",
                                "help": "Allow the X.509 certificate parser to load certificates\nwith unsupported critical extensions",
                                "id": "MBEDTLS_ALLOW_UNSUPPORTED_CRITICAL_EXT",
                                "name": "MBEDTLS_ALLOW_UNSUPPORTED_CRITICAL_EXT",
                                "range": null,
                                "title": "X.509 CRT parsing with unsupported critical extensions",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": null,
                        "id": "MBEDTLS_SECURITY_RISKS",
                        "is_menuconfig": true,
                        "name": "MBEDTLS_SECURITY_RISKS",
                        "range": null,
                        "title": "Show configurations with potential security risks",
                        "type": "menu"
                    }
                ],
                "depends_on": null,
                "id": "component-config-mbedtls",
                "title": "mbedTLS",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice NEWLIB_STDOUT_LINE_ENDING>",
                                "help": null,
                                "id": "NEWLIB_STDOUT_LINE_ENDING_CRLF",
                                "name": "NEWLIB_STDOUT_LINE_ENDING_CRLF",
                                "range": null,
                                "title": "CRLF",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice NEWLIB_STDOUT_LINE_ENDING>",
                                "help": null,
                                "id": "NEWLIB_STDOUT_LINE_ENDING_LF",
                                "name": "NEWLIB_STDOUT_LINE_ENDING_LF",
                                "range": null,
                                "title": "LF",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice NEWLIB_STDOUT_LINE_ENDING>",
                                "help": null,
                                "id": "NEWLIB_STDOUT_LINE_ENDING_CR",
                                "name": "NEWLIB_STDOUT_LINE_ENDING_CR",
                                "range": null,
                                "title": "CR",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "This option allows configuring the desired line endings sent to UART\nwhen a newline ('\\n', LF) appears on stdout.\nThree options are possible:\n\nCRLF: whenever LF is encountered, prepend it with CR\n\nLF: no modification is applied, stdout is sent as is\n\nCR: each occurence of LF is replaced with CR\n\nThis option doesn't affect behavior of the UART driver (drivers/uart.h).",
                        "id": "component-config-newlib-line-ending-for-uart-output",
                        "name": "NEWLIB_STDOUT_LINE_ENDING",
                        "title": "Line ending for UART output",
                        "type": "choice"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice NEWLIB_STDIN_LINE_ENDING>",
                                "help": null,
                                "id": "NEWLIB_STDIN_LINE_ENDING_CRLF",
                                "name": "NEWLIB_STDIN_LINE_ENDING_CRLF",
                                "range": null,
                                "title": "CRLF",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice NEWLIB_STDIN_LINE_ENDING>",
                                "help": null,
                                "id": "NEWLIB_STDIN_LINE_ENDING_LF",
                                "name": "NEWLIB_STDIN_LINE_ENDING_LF",
                                "range": null,
                                "title": "LF",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice NEWLIB_STDIN_LINE_ENDING>",
                                "help": null,
                                "id": "NEWLIB_STDIN_LINE_ENDING_CR",
                                "name": "NEWLIB_STDIN_LINE_ENDING_CR",
                                "range": null,
                                "title": "CR",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "This option allows configuring which input sequence on UART produces\na newline ('\\n', LF) on stdin.\nThree options are possible:\n\nCRLF: CRLF is converted to LF\n\nLF: no modification is applied, input is sent to stdin as is\n\nCR: each occurence of CR is replaced with LF\n\nThis option doesn't affect behavior of the UART driver (drivers/uart.h).",
                        "id": "component-config-newlib-line-ending-for-uart-input",
                        "name": "NEWLIB_STDIN_LINE_ENDING",
                        "title": "Line ending for UART input",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "ESP32 ROM contains parts of newlib C library, including printf/scanf family\nof functions. These functions have been compiled with so-called \"nano\"\nformatting option. This option doesn't support 64-bit integer formats and C99\nfeatures, such as positional arguments.\n\nFor more details about \"nano\" formatting option, please see newlib readme file,\nsearch for '--enable-newlib-nano-formatted-io':\nhttps://sourceware.org/newlib/README\n\nIf this option is enabled, build system will use functions available in\nROM, reducing the application binary size. Functions available in ROM run\nfaster than functions which run from flash. Functions available in ROM can\nalso run when flash instruction cache is disabled.\n\nIf you need 64-bit integer formatting support or C99 features, keep this\noption disabled.",
                        "id": "NEWLIB_NANO_FORMAT",
                        "name": "NEWLIB_NANO_FORMAT",
                        "range": null,
                        "title": "Enable 'nano' formatting options for printf/scanf family",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-newlib",
                "title": "Newlib",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SECURE_FLASH_ENC_ENABLED",
                        "help": "This option enables encryption for NVS. When enabled, AES-XTS is used to encrypt\nthe complete NVS data, except the page headers. It requires XTS encryption keys\nto be stored in an encrypted partition. This means enabling flash encryption is\na pre-requisite for this feature.",
                        "id": "NVS_ENCRYPTION",
                        "name": "NVS_ENCRYPTION",
                        "range": null,
                        "title": "Enable NVS encryption",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_FLASH_ENC_ENABLED",
                        "help": "Enabling this will ignore \"encrypted\" flag for NVS partitions. NVS encryption\nscheme is different than hardware flash encryption and hence it is not recommended\nto have \"encrypted\" flag for NVS partitions. This was not being checked in pre v4.3\nIDF. Hence, if you have any devices where this flag is kept enabled in partition\ntable then enabling this config will allow to have same behavior as pre v4.3 IDF.",
                        "id": "NVS_COMPATIBLE_PRE_V4_3_ENCRYPTION_FLAG",
                        "name": "NVS_COMPATIBLE_PRE_V4_3_ENCRYPTION_FLAG",
                        "range": null,
                        "title": "NVS partition encrypted flag compatible with ESP-IDF before v4.3",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This option switches error checking type between assertions (y) or return codes (n).",
                        "id": "NVS_ASSERT_ERROR_CHECK",
                        "name": "NVS_ASSERT_ERROR_CHECK",
                        "range": null,
                        "title": "Use assertions for error checking",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-nvs",
                "title": "NVS",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice OPENTHREAD_RADIO_TYPE>",
                                        "help": "Select this to use the native 15.4 radio.",
                                        "id": "OPENTHREAD_RADIO_NATIVE",
                                        "name": "OPENTHREAD_RADIO_NATIVE",
                                        "range": null,
                                        "title": "Native 15.4 radio",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice OPENTHREAD_RADIO_TYPE>",
                                        "help": "Select this to connect to a Radio Co-Processor via UART.",
                                        "id": "OPENTHREAD_RADIO_SPINEL_UART",
                                        "name": "OPENTHREAD_RADIO_SPINEL_UART",
                                        "range": null,
                                        "title": "Connect via UART",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "OPENTHREAD_ENABLED",
                                "help": "Configure how OpenThread connects to the 15.4 radio",
                                "id": "component-config-openthread-openthread-config-the-thread-radio-type",
                                "name": "OPENTHREAD_RADIO_TYPE",
                                "title": "Config the Thread radio type",
                                "type": "choice"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice OPENTHREAD_DEVICE_TYPE>",
                                        "help": "Select this to enable Full Thread Device which can act as router and leader in a Thread network.",
                                        "id": "OPENTHREAD_FTD",
                                        "name": "OPENTHREAD_FTD",
                                        "range": null,
                                        "title": "Full Thread Device",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice OPENTHREAD_DEVICE_TYPE>",
                                        "help": "Select this to enable Minimal Thread Device which can only act as end device in a Thread network.\nThis will reduce the code size of the OpenThread stack.",
                                        "id": "OPENTHREAD_MTD",
                                        "name": "OPENTHREAD_MTD",
                                        "range": null,
                                        "title": "Minimal Thread Device",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice OPENTHREAD_DEVICE_TYPE>",
                                        "help": "Select this to enable Radio Only Device which cannot can only forward 15.4 packets to the host.\nThe OpenThread stack will be run on the host and OpenThread will have minimal footprint on the\nradio only device.",
                                        "id": "OPENTHREAD_RADIO",
                                        "name": "OPENTHREAD_RADIO",
                                        "range": null,
                                        "title": "Radio Only Device",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "OPENTHREAD_ENABLED",
                                "help": "OpenThread can be configured to different device types (FTD, MTD, Radio)",
                                "id": "component-config-openthread-openthread-config-the-thread-device-type",
                                "name": "OPENTHREAD_DEVICE_TYPE",
                                "title": "Config the Thread device type",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": "OPENTHREAD_ENABLED",
                                "help": "Select this option to enable Diag in OpenThread. This will enable diag mode and a series of diag commands\nin the OpenThread command line. These commands allow users to manipulate low-level features of the storage\nand 15.4 radio.",
                                "id": "OPENTHREAD_DIAG",
                                "name": "OPENTHREAD_DIAG",
                                "range": null,
                                "title": "Enable diag",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "OPENTHREAD_ENABLED",
                                "help": "Select this option to enable commissioner in OpenThread. This will enable the device to act as a\ncommissioner in the Thread network. A commissioner checks the pre-shared key from a joining device with\nthe Thread commissioning protocol and shares the network parameter with the joining device upon success.",
                                "id": "OPENTHREAD_COMMISSIONER",
                                "name": "OPENTHREAD_COMMISSIONER",
                                "range": null,
                                "title": "Enable Commissioner",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "OPENTHREAD_ENABLED",
                                "help": "Select this option to enable Joiner in OpenThread. This allows a device to join the Thread network with a\npre-shared key using the Thread commissioning protocol.",
                                "id": "OPENTHREAD_JOINER",
                                "name": "OPENTHREAD_JOINER",
                                "range": null,
                                "title": "Enable Joiner",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "OPENTHREAD_ENABLED",
                                "help": "Select this option to enable SRP Client in OpenThread. This allows a device to register SRP services to SRP\nServer.",
                                "id": "OPENTHREAD_SRP_CLIENT",
                                "name": "OPENTHREAD_SRP_CLIENT",
                                "range": null,
                                "title": "Enable SRP Client",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "OPENTHREAD_ENABLED",
                                "help": "Select this option to enable border router features in OpenThread.",
                                "id": "OPENTHREAD_BORDER_ROUTER",
                                "name": "OPENTHREAD_BORDER_ROUTER",
                                "range": null,
                                "title": "Enable Border Router",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "OPENTHREAD_ENABLED",
                                "help": "Override the shipped libopenthread_br.a and libopenthread_port.a, for internal builds.",
                                "id": "OPENTHREAD_ESP_LIB_FROM_INTERNAL_SRC",
                                "name": "OPENTHREAD_ESP_LIB_FROM_INTERNAL_SRC",
                                "range": null,
                                "title": "Build esp_openthread libraries from source",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "OPENTHREAD_ENABLED",
                                "help": null,
                                "id": "OPENTHREAD_NUM_MESSAGE_BUFFERS",
                                "name": "OPENTHREAD_NUM_MESSAGE_BUFFERS",
                                "range": null,
                                "title": "The number of openthread message buffers",
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "help": "Select this option to enable OpenThread and show the submenu with OpenThread configuration choices.",
                        "id": "OPENTHREAD_ENABLED",
                        "name": "OPENTHREAD_ENABLED",
                        "range": null,
                        "title": "OpenThread",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-openthread",
                "title": "OpenThread",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Priority used to create new tasks with default pthread parameters.",
                        "id": "PTHREAD_TASK_PRIO_DEFAULT",
                        "name": "PTHREAD_TASK_PRIO_DEFAULT",
                        "range": [
                            0,
                            255
                        ],
                        "title": "Default task priority",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Stack size used to create new tasks with default pthread parameters.",
                        "id": "PTHREAD_TASK_STACK_SIZE_DEFAULT",
                        "name": "PTHREAD_TASK_STACK_SIZE_DEFAULT",
                        "range": null,
                        "title": "Default task stack size",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Minimum allowed pthread stack size set in attributes passed to pthread_create",
                        "id": "PTHREAD_STACK_MIN",
                        "name": "PTHREAD_STACK_MIN",
                        "range": null,
                        "title": "Minimum allowed pthread stack size",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice PTHREAD_TASK_CORE_DEFAULT>",
                                "help": null,
                                "id": "PTHREAD_DEFAULT_CORE_NO_AFFINITY",
                                "name": "PTHREAD_DEFAULT_CORE_NO_AFFINITY",
                                "range": null,
                                "title": "No affinity",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice PTHREAD_TASK_CORE_DEFAULT>",
                                "help": null,
                                "id": "PTHREAD_DEFAULT_CORE_0",
                                "name": "PTHREAD_DEFAULT_CORE_0",
                                "range": null,
                                "title": "Core 0",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice PTHREAD_TASK_CORE_DEFAULT>",
                                "help": null,
                                "id": "PTHREAD_DEFAULT_CORE_1",
                                "name": "PTHREAD_DEFAULT_CORE_1",
                                "range": null,
                                "title": "Core 1",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "!FREERTOS_UNICORE",
                        "help": "The default core to which pthreads are pinned.",
                        "id": "component-config-pthreads-default-pthread-core-affinity",
                        "name": "PTHREAD_TASK_CORE_DEFAULT",
                        "title": "Default pthread core affinity",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": null,
                        "id": "PTHREAD_TASK_CORE_DEFAULT",
                        "name": "PTHREAD_TASK_CORE_DEFAULT",
                        "range": null,
                        "title": null,
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "The default name of pthreads.",
                        "id": "PTHREAD_TASK_NAME_DEFAULT",
                        "name": "PTHREAD_TASK_NAME_DEFAULT",
                        "range": null,
                        "title": "Default name of pthreads",
                        "type": "string"
                    }
                ],
                "depends_on": null,
                "id": "component-config-pthreads",
                "title": "PThreads",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SPI_FLASH_VERIFY_WRITE",
                                "help": "If this option is enabled, if SPI flash write verification fails then a log error line\nwill be written with the address, expected & actual values. This can be useful when\ndebugging hardware SPI flash problems.",
                                "id": "SPI_FLASH_LOG_FAILED_WRITE",
                                "name": "SPI_FLASH_LOG_FAILED_WRITE",
                                "range": null,
                                "title": "Log errors if verification fails",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SPI_FLASH_VERIFY_WRITE",
                                "help": "If this option is enabled, any SPI flash write which tries to set zero bits in the flash to\nones will log a warning. Such writes will not result in the requested data appearing identically\nin flash once written, as SPI NOR flash can only set bits to one when an entire sector is erased.\nAfter erasing, individual bits can only be written from one to zero.\n\nNote that some software (such as SPIFFS) which is aware of SPI NOR flash may write one bits as an\noptimisation, relying on the data in flash becoming a bitwise AND of the new data and any existing data.\nSuch software will log spurious warnings if this option is enabled.",
                                "id": "SPI_FLASH_WARN_SETTING_ZERO_TO_ONE",
                                "name": "SPI_FLASH_WARN_SETTING_ZERO_TO_ONE",
                                "range": null,
                                "title": "Log warning if writing zero bits to ones",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "If this option is enabled, any time SPI flash is written then the data will be read\nback and verified. This can catch hardware problems with SPI flash, or flash which\nwas not erased before verification.",
                        "id": "SPI_FLASH_VERIFY_WRITE",
                        "name": "SPI_FLASH_VERIFY_WRITE",
                        "range": null,
                        "title": "Verify SPI flash writes",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This option enables the following APIs:\n\n- spi_flash_reset_counters\n- spi_flash_dump_counters\n- spi_flash_get_counters\n\nThese APIs may be used to collect performance data for spi_flash APIs\nand to help understand behaviour of libraries which use SPI flash.",
                        "id": "SPI_FLASH_ENABLE_COUNTERS",
                        "name": "SPI_FLASH_ENABLE_COUNTERS",
                        "range": null,
                        "title": "Enable operation counters",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enable this flag to use patched versions of SPI flash ROM driver functions.\nThis option should be enabled, if any one of the following is true: (1) need to write\nto flash on ESP32-D2WD; (2) main SPI flash is connected to non-default pins; (3) main\nSPI flash chip is manufactured by ISSI.",
                        "id": "SPI_FLASH_ROM_DRIVER_PATCH",
                        "name": "SPI_FLASH_ROM_DRIVER_PATCH",
                        "range": null,
                        "title": "Enable SPI flash ROM driver patched functions",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ESP32S3 || IDF_TARGET_ESP32C3",
                        "help": "Enable this flag to use new SPI flash driver functions from ROM instead of ESP-IDF.\n\nIf keeping this as \"n\" in your project, you will have less free IRAM.\nBut you can use all of our flash features.\n\nIf making this as \"y\" in your project, you will increase free IRAM.\nBut you may miss out on some flash features and support for new flash chips.\n\nCurrently the ROM cannot support the following features:\n\n- SPI_FLASH_AUTO_SUSPEND (C3, S3)",
                        "id": "SPI_FLASH_ROM_IMPL",
                        "name": "SPI_FLASH_ROM_IMPL",
                        "range": null,
                        "title": "Use esp_flash implementation in ROM",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice SPI_FLASH_DANGEROUS_WRITE>",
                                "help": null,
                                "id": "SPI_FLASH_DANGEROUS_WRITE_ABORTS",
                                "name": "SPI_FLASH_DANGEROUS_WRITE_ABORTS",
                                "range": null,
                                "title": "Aborts",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice SPI_FLASH_DANGEROUS_WRITE>",
                                "help": null,
                                "id": "SPI_FLASH_DANGEROUS_WRITE_FAILS",
                                "name": "SPI_FLASH_DANGEROUS_WRITE_FAILS",
                                "range": null,
                                "title": "Fails",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice SPI_FLASH_DANGEROUS_WRITE>",
                                "help": null,
                                "id": "SPI_FLASH_DANGEROUS_WRITE_ALLOWED",
                                "name": "SPI_FLASH_DANGEROUS_WRITE_ALLOWED",
                                "range": null,
                                "title": "Allowed",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "SPI flash APIs can optionally abort or return a failure code\nif erasing or writing addresses that fall at the beginning\nof flash (covering the bootloader and partition table) or that\noverlap the app partition that contains the running app.\n\nIt is not recommended to ever write to these regions from an IDF app,\nand this check prevents logic errors or corrupted firmware memory from\ndamaging these regions.\n\nNote that this feature *does not* check calls to the esp_rom_xxx SPI flash\nROM functions. These functions should not be called directly from IDF\napplications.",
                        "id": "component-config-spi-flash-driver-writing-to-dangerous-flash-regions",
                        "name": "SPI_FLASH_DANGEROUS_WRITE",
                        "title": "Writing to dangerous flash regions",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "The implementation of SPI flash has been greatly changed in IDF v4.0.\nEnable this option to use the legacy implementation.",
                        "id": "SPI_FLASH_USE_LEGACY_IMPL",
                        "name": "SPI_FLASH_USE_LEGACY_IMPL",
                        "range": null,
                        "title": "Use the legacy implementation before IDF v4.0",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!SPI_FLASH_USE_LEGACY_IMPL && !IDF_TARGET_ESP32S2",
                        "help": "Each SPI bus needs a lock for arbitration among devices. This allows multiple\ndevices on a same bus, but may reduce the speed of esp_flash driver access to the\nmain flash chip.\n\nIf you only need to use esp_flash driver to access the main flash chip, disable\nthis option, and the lock will be bypassed on SPI1 bus. Otherwise if extra devices\nare needed to attach to SPI1 bus, enable this option.",
                        "id": "SPI_FLASH_SHARE_SPI1_BUS",
                        "name": "SPI_FLASH_SHARE_SPI1_BUS",
                        "range": null,
                        "title": "Support other devices attached to SPI1 bus",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Some flash chips can have very high \"max\" erase times, especially for block erase (32KB or 64KB).\nThis option allows to bypass \"block erase\" and always do sector erase commands.\nThis will be much slower overall in most cases, but improves latency for other code to run.",
                        "id": "SPI_FLASH_BYPASS_BLOCK_ERASE",
                        "name": "SPI_FLASH_BYPASS_BLOCK_ERASE",
                        "range": null,
                        "title": "Bypass a block erase and always do sector erase",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "SPI_FLASH_YIELD_DURING_ERASE",
                                "help": "If a duration of one erase command is large\nthen it will yield CPUs after finishing a current command.",
                                "id": "SPI_FLASH_ERASE_YIELD_DURATION_MS",
                                "name": "SPI_FLASH_ERASE_YIELD_DURATION_MS",
                                "range": null,
                                "title": "Duration of erasing to yield CPUs (ms)",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "SPI_FLASH_YIELD_DURING_ERASE",
                                "help": "Defines how many ticks will be before returning to continue a erasing.",
                                "id": "SPI_FLASH_ERASE_YIELD_TICKS",
                                "name": "SPI_FLASH_ERASE_YIELD_TICKS",
                                "range": null,
                                "title": "CPU release time (tick) for an erase operation",
                                "type": "int"
                            }
                        ],
                        "depends_on": null,
                        "help": "This allows to yield the CPUs between erase commands.\nPrevents starvation of other tasks.",
                        "id": "SPI_FLASH_YIELD_DURING_ERASE",
                        "name": "SPI_FLASH_YIELD_DURING_ERASE",
                        "range": null,
                        "title": "Enables yield operation during flash erase",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ESP32C3 && !SPI_FLASH_USE_LEGACY_IMPL && !SPI_FLASH_ROM_IMPL",
                        "help": "This option is default n before ESP32-C3, because it needs bootloader support.\n\nCAUTION: If you want to OTA to an app with this feature turned on, please make\nsure the bootloader has the support for it. (later than IDF v4.3)\n\nAuto-suspend feature only supported by XMC chip.\nIf you are using an official module, please contact Espressif Business support.\nAlso reading auto suspend part in `SPI Flash API` document before you enable this function.",
                        "id": "SPI_FLASH_AUTO_SUSPEND",
                        "name": "SPI_FLASH_AUTO_SUSPEND",
                        "range": null,
                        "title": "Auto suspend long erase/write operations (READ DOCS FIRST)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Flash write is broken down in terms of multiple (smaller) write operations.\nThis configuration options helps to set individual write chunk size, smaller\nvalue here ensures that cache (and non-IRAM resident interrupts) remains\ndisabled for shorter duration.",
                        "id": "SPI_FLASH_WRITE_CHUNK_SIZE",
                        "name": "SPI_FLASH_WRITE_CHUNK_SIZE",
                        "range": [
                            256,
                            8192
                        ],
                        "title": "Flash write chunk size",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "SPI Flash driver uses the flash size configured in bootloader header by default.\nEnable this option to override flash size with latest ESPTOOLPY_FLASHSIZE value from\nthe app header if the size in the bootloader header is incorrect.",
                        "id": "SPI_FLASH_SIZE_OVERRIDE",
                        "name": "SPI_FLASH_SIZE_OVERRIDE",
                        "range": null,
                        "title": "Override flash size in bootloader header by ESPTOOLPY_FLASHSIZE",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!SPI_FLASH_USE_LEGACY_IMPL",
                        "help": "This option is helpful if you are using a flash chip whose timeout is quite large or unpredictable.",
                        "id": "SPI_FLASH_CHECK_ERASE_TIMEOUT_DISABLED",
                        "name": "SPI_FLASH_CHECK_ERASE_TIMEOUT_DISABLED",
                        "range": null,
                        "title": "Flash timeout checkout disabled",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!SPI_FLASH_USE_LEGACY_IMPL",
                        "help": "This option allows the chip driver list to be customized, instead of using the default list provided by\nESP-IDF.\n\nWhen this option is enabled, the default list is no longer compiled or linked. Instead, the\n`default_registered_chips` structure must be provided by the user.\n\nSee example: custom_chip_driver under examples/storage for more details.",
                        "id": "SPI_FLASH_OVERRIDE_CHIP_DRIVER_LIST",
                        "name": "SPI_FLASH_OVERRIDE_CHIP_DRIVER_LIST",
                        "range": null,
                        "title": "Override default chip driver list",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable this to support auto detection of ISSI chips if chip vendor not directly\ngiven by ``chip_drv`` member of the chip struct. This adds support for variant\nchips, however will extend detecting time.",
                                "id": "SPI_FLASH_SUPPORT_ISSI_CHIP",
                                "name": "SPI_FLASH_SUPPORT_ISSI_CHIP",
                                "range": null,
                                "title": "ISSI",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable this to support auto detection of MXIC chips if chip vendor not directly\ngiven by ``chip_drv`` member of the chip struct. This adds support for variant\nchips, however will extend detecting time.",
                                "id": "SPI_FLASH_SUPPORT_MXIC_CHIP",
                                "name": "SPI_FLASH_SUPPORT_MXIC_CHIP",
                                "range": null,
                                "title": "MXIC",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable this to support auto detection of GD (GigaDevice) chips if chip vendor not\ndirectly given by ``chip_drv`` member of the chip struct. If you are using Wrover\nmodules, please don't disable this, otherwise your flash may not work in 4-bit\nmode.\n\nThis adds support for variant chips, however will extend detecting time and image\nsize. Note that the default chip driver supports the GD chips with product ID\n60H.",
                                "id": "SPI_FLASH_SUPPORT_GD_CHIP",
                                "name": "SPI_FLASH_SUPPORT_GD_CHIP",
                                "range": null,
                                "title": "GigaDevice",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable this to support auto detection of Winbond chips if chip vendor not directly\ngiven by ``chip_drv`` member of the chip struct. This adds support for variant\nchips, however will extend detecting time.",
                                "id": "SPI_FLASH_SUPPORT_WINBOND_CHIP",
                                "name": "SPI_FLASH_SUPPORT_WINBOND_CHIP",
                                "range": null,
                                "title": "Winbond",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable this to support auto detection of BOYA chips if chip vendor not directly\ngiven by ``chip_drv`` member of the chip struct. This adds support for variant\nchips, however will extend detecting time.",
                                "id": "SPI_FLASH_SUPPORT_BOYA_CHIP",
                                "name": "SPI_FLASH_SUPPORT_BOYA_CHIP",
                                "range": null,
                                "title": "BOYA",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": null,
                                "help": "Enable this to support auto detection of TH chips if chip vendor not directly\ngiven by ``chip_drv`` member of the chip struct. This adds support for variant\nchips, however will extend detecting time.",
                                "id": "SPI_FLASH_SUPPORT_TH_CHIP",
                                "name": "SPI_FLASH_SUPPORT_TH_CHIP",
                                "range": null,
                                "title": "TH",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32S3",
                                "help": "Enable this to support auto detection of Octal MXIC chips if chip vendor not directly\ngiven by ``chip_drv`` member of the chip struct. This adds support for variant\nchips, however will extend detecting time.",
                                "id": "SPI_FLASH_SUPPORT_MXIC_OPI_CHIP",
                                "name": "SPI_FLASH_SUPPORT_MXIC_OPI_CHIP",
                                "range": null,
                                "title": "mxic (opi)",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "id": "component-config-spi-flash-driver-auto-detect-flash-chips",
                        "title": "Auto-detect flash chips",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "This option enables flash read/write operations to encrypted partition/s. This option\nis kept enabled irrespective of state of flash encryption feature. However, in case\napplication is not using flash encryption feature and is in need of some additional\nmemory from IRAM region (~1KB) then this config can be disabled.",
                        "id": "SPI_FLASH_ENABLE_ENCRYPTED_READ_WRITE",
                        "name": "SPI_FLASH_ENABLE_ENCRYPTED_READ_WRITE",
                        "range": null,
                        "title": "Enable encrypted partition read/write operations",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-spi-flash-driver",
                "title": "SPI Flash driver",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "VFS_SUPPORT_IO",
                                "help": "If enabled, the following functions are provided by the VFS component.\n\nstat, link, unlink, rename, utime, access, truncate, rmdir, mkdir,\nopendir, closedir, readdir, readdir_r, seekdir, telldir, rewinddir\n\nFilesystem drivers can then be registered to handle these functions\nfor specific paths.\n\nDisabling this option can save memory when the support for these functions\nis not required.",
                                "id": "VFS_SUPPORT_DIR",
                                "name": "VFS_SUPPORT_DIR",
                                "range": null,
                                "title": "Provide directory related functions",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "VFS_SUPPORT_SELECT",
                                        "help": "Select() related functions might produce an unconveniently lot of\ndebug outputs when one sets the default log level to DEBUG or higher.\nIt is possible to suppress these debug outputs by enabling this\noption.",
                                        "id": "VFS_SUPPRESS_SELECT_DEBUG_OUTPUT",
                                        "name": "VFS_SUPPRESS_SELECT_DEBUG_OUTPUT",
                                        "range": null,
                                        "title": "Suppress select() related debug outputs",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "VFS_SUPPORT_IO && !LWIP_USE_ONLY_LWIP_SELECT",
                                "help": "If enabled, select function is provided by the VFS component, and can be used\non peripheral file descriptors (such as UART) and sockets at the same time.\n\nIf disabled, the default select implementation will be provided by LWIP for\nsockets only.\n\nDisabling this option can reduce code size if support for \"select\" on UART file\ndescriptors is not required.",
                                "id": "VFS_SUPPORT_SELECT",
                                "name": "VFS_SUPPORT_SELECT",
                                "range": null,
                                "title": "Provide select function",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "VFS_SUPPORT_IO",
                                "help": "Disabling this option can save memory when the support for termios.h is not required.",
                                "id": "VFS_SUPPORT_TERMIOS",
                                "name": "VFS_SUPPORT_TERMIOS",
                                "range": null,
                                "title": "Provide termios.h functions",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "VFS_SUPPORT_IO",
                                        "help": "Define maximum number of host filesystem mount points.",
                                        "id": "VFS_SEMIHOSTFS_MAX_MOUNT_POINTS",
                                        "name": "VFS_SEMIHOSTFS_MAX_MOUNT_POINTS",
                                        "range": null,
                                        "title": "Host FS: Maximum number of the host filesystem mount points",
                                        "type": "int"
                                    }
                                ],
                                "depends_on": "VFS_SUPPORT_IO",
                                "id": "component-config-virtual-file-system-provide-basic-i-o-functions-host-file-system-i-o-semihosting-",
                                "title": "Host File System I/O (Semihosting)",
                                "type": "menu"
                            }
                        ],
                        "depends_on": null,
                        "help": "If enabled, the following functions are provided by the VFS component.\n\nopen, close, read, write, pread, pwrite, lseek, fstat, fsync, ioctl, fcntl\n\nFilesystem drivers can then be registered to handle these functions\nfor specific paths.\n\nDisabling this option can save memory when the support for these functions\nis not required.\n\nNote that the following functions can still be used with socket file descriptors\nwhen this option is disabled:\n\nclose, read, write, ioctl, fcntl.",
                        "id": "VFS_SUPPORT_IO",
                        "name": "VFS_SUPPORT_IO",
                        "range": null,
                        "title": "Provide basic I/O functions",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-virtual-file-system",
                "title": "Virtual file system",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Select this option to use MbedTLS crypto APIs which utilize hardware acceleration.",
                        "id": "WPA_MBEDTLS_CRYPTO",
                        "name": "WPA_MBEDTLS_CRYPTO",
                        "range": null,
                        "title": "Use MbedTLS crypto APIs",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Select this option to enable WAPI-PSK\nwhich is a Chinese National Standard Encryption for Wireless LANs (GB 15629.11-2003).",
                        "id": "WPA_WAPI_PSK",
                        "name": "WPA_WAPI_PSK",
                        "range": null,
                        "title": "Enable WAPI PSK support",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Select this option to enable 192 bit NSA suite-B.\nThis is necessary to support WPA3 192 bit security.",
                        "id": "WPA_SUITE_B_192",
                        "name": "WPA_SUITE_B_192",
                        "range": null,
                        "title": "Enable NSA suite B support with 192 bit key",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Select this option to print logging information from WPA supplicant,\nthis includes handshake information and key hex dumps depending\non the project logging level.\n\nEnabling this could increase the build size ~60kb\ndepending on the project logging level.",
                        "id": "WPA_DEBUG_PRINT",
                        "name": "WPA_DEBUG_PRINT",
                        "range": null,
                        "title": "Print debug messages from WPA Supplicant",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Select this to enable unity test for DPP.",
                        "id": "WPA_TESTING_OPTIONS",
                        "name": "WPA_TESTING_OPTIONS",
                        "range": null,
                        "title": "Add DPP testing code",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Select this option to enable validate each WPS attribute\nrigorously. Disabling this add the workaorunds with various APs.\nEnabling this may cause inter operability issues with some APs.",
                        "id": "WPA_WPS_STRICT",
                        "name": "WPA_WPS_STRICT",
                        "range": null,
                        "title": "Strictly validate all WPS attributes",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "WPA_11KV_SUPPORT",
                                "help": "Keep scan results in cache, if not enabled, those\nwill be flushed immediately.",
                                "id": "WPA_SCAN_CACHE",
                                "name": "WPA_SCAN_CACHE",
                                "range": null,
                                "title": "Keep scan results in cache",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Select this option to enable 802.11k 802.11v APIs(RRM and BTM support).\nOnly APIs which are helpful for network assisted roaming\nare supported for now.\nEnable this option with BTM and RRM enabled in sta config\nto make device ready for network assisted roaming.\nBTM: BSS transition management enables an AP to request a station to transition\nto a specific AP, or to indicate to a station a set of preferred APs.\nRRM: Radio measurements enable STAs to understand the radio environment,\nit enables STAs to observe and gather data on radio link performance\nand on the radio environment. Current implementation adds beacon report,\nlink measurement, neighbor report.",
                        "id": "WPA_11KV_SUPPORT",
                        "name": "WPA_11KV_SUPPORT",
                        "range": null,
                        "title": "Enable 802.11k, 802.11v APIs handling",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Select this option to enable WiFi Multiband operation certification support.",
                        "id": "WPA_MBO_SUPPORT",
                        "name": "WPA_MBO_SUPPORT",
                        "range": null,
                        "title": "Enable MBO support",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Select this option to enable WiFi Easy Connect Support.",
                        "id": "WPA_DPP_SUPPORT",
                        "name": "WPA_DPP_SUPPORT",
                        "range": null,
                        "title": "Enable DPP support",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-supplicant",
                "title": "Supplicant",
                "type": "menu"
            }
        ],
        "depends_on": null,
        "id": "component-config",
        "title": "Component config",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [],
                "depends_on": null,
                "help": "Soc, esp32, and driver components, the most common\ncomponents. Some header of these components are included\nimplicitly by headers of other components before IDF v4.0.\nIt's not required for high-level components, but still\nincluded through long header chain everywhere.\n\nThis is harmful to the modularity. So it's changed in IDF\nv4.0.\n\nYou can still include these headers in a legacy way until it\nis totally deprecated by enable this option.",
                "id": "LEGACY_INCLUDE_COMMON_HEADERS",
                "name": "LEGACY_INCLUDE_COMMON_HEADERS",
                "range": null,
                "title": "Include headers across components as before IDF v4.0",
                "type": "bool"
            }
        ],
        "depends_on": null,
        "id": "compatibility-options",
        "title": "Compatibility options",
        "type": "menu"
    }
]