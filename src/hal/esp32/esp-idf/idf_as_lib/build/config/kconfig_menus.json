[
    {
        "children": [], 
        "depends_on": null, 
        "help": null, 
        "id": "IDF_CMAKE", 
        "name": "IDF_CMAKE", 
        "range": null, 
        "title": null, 
        "type": "bool"
    }, 
    {
        "children": [], 
        "depends_on": null, 
        "help": null, 
        "id": "IDF_TARGET_ENV", 
        "name": "IDF_TARGET_ENV", 
        "range": null, 
        "title": null, 
        "type": "string"
    }, 
    {
        "children": [], 
        "depends_on": null, 
        "help": null, 
        "id": "IDF_TARGET", 
        "name": "IDF_TARGET", 
        "range": null, 
        "title": null, 
        "type": "string"
    }, 
    {
        "children": [], 
        "depends_on": null, 
        "help": null, 
        "id": "IDF_FIRMWARE_CHIP_ID", 
        "name": "IDF_FIRMWARE_CHIP_ID", 
        "range": null, 
        "title": null, 
        "type": "hex"
    }, 
    {
        "children": [
            {
                "children": [], 
                "depends_on": null, 
                "help": "The prefix/path that is used to call the toolchain. The default setting assumes\na crosstool-ng gcc setup that is in your PATH.\n", 
                "id": "TOOLPREFIX", 
                "name": "TOOLPREFIX", 
                "range": null, 
                "title": "Compiler toolchain path/prefix", 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": "!IDF_CMAKE", 
                "help": "The executable name/path that is used to run python. On some systems Python 2.x\nmay need to be invoked as python2.\n\n(Note: This option is used with the GNU Make build system only, not idf.py\nor CMake-based builds.)\n", 
                "id": "PYTHON", 
                "name": "PYTHON", 
                "range": null, 
                "title": "Python 2 interpreter", 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Adds --warn-undefined-variables to MAKEFLAGS. This causes make to\nprint a warning any time an undefined variable is referenced.\n\nThis option helps find places where a variable reference is misspelled\nor otherwise missing, but it can be unwanted if you have Makefiles which\ndepend on undefined variables expanding to an empty string.\n", 
                "id": "MAKE_WARN_UNDEFINED_VARIABLES", 
                "name": "MAKE_WARN_UNDEFINED_VARIABLES", 
                "range": null, 
                "title": "'make' warns on undefined variables", 
                "type": "bool"
            }
        ], 
        "depends_on": null, 
        "id": "sdk-tool-configuration", 
        "title": "SDK tool configuration", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [], 
                "depends_on": null, 
                "help": "If set, then the app will be built with the current time/date stamp. It is stored in the app description\nstructure. If not set, time/date stamp will be excluded from app image. This can be useful for getting the\nsame binary image files made from the same source, but at different times.\n", 
                "id": "APP_COMPILE_TIME_DATE", 
                "name": "APP_COMPILE_TIME_DATE", 
                "range": null, 
                "title": "Use time/date stamp for app", 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "The PROJECT_VER variable from the build system will not affect the firmware image.\nThis value will not be contained in the esp_app_desc structure.\n", 
                "id": "APP_EXCLUDE_PROJECT_VER_VAR", 
                "name": "APP_EXCLUDE_PROJECT_VER_VAR", 
                "range": null, 
                "title": "Exclude PROJECT_VER from firmware image", 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "The PROJECT_NAME variable from the build system will not affect the firmware image.\nThis value will not be contained in the esp_app_desc structure.\n", 
                "id": "APP_EXCLUDE_PROJECT_NAME_VAR", 
                "name": "APP_EXCLUDE_PROJECT_NAME_VAR", 
                "range": null, 
                "title": "Exclude PROJECT_NAME from firmware image", 
                "type": "bool"
            }
        ], 
        "depends_on": null, 
        "id": "application-manager", 
        "title": "Application manager", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice LOG_BOOTLOADER_LEVEL>", 
                        "help": null, 
                        "id": "LOG_BOOTLOADER_LEVEL_NONE", 
                        "name": "LOG_BOOTLOADER_LEVEL_NONE", 
                        "range": null, 
                        "title": "No output", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice LOG_BOOTLOADER_LEVEL>", 
                        "help": null, 
                        "id": "LOG_BOOTLOADER_LEVEL_ERROR", 
                        "name": "LOG_BOOTLOADER_LEVEL_ERROR", 
                        "range": null, 
                        "title": "Error", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice LOG_BOOTLOADER_LEVEL>", 
                        "help": null, 
                        "id": "LOG_BOOTLOADER_LEVEL_WARN", 
                        "name": "LOG_BOOTLOADER_LEVEL_WARN", 
                        "range": null, 
                        "title": "Warning", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice LOG_BOOTLOADER_LEVEL>", 
                        "help": null, 
                        "id": "LOG_BOOTLOADER_LEVEL_INFO", 
                        "name": "LOG_BOOTLOADER_LEVEL_INFO", 
                        "range": null, 
                        "title": "Info", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice LOG_BOOTLOADER_LEVEL>", 
                        "help": null, 
                        "id": "LOG_BOOTLOADER_LEVEL_DEBUG", 
                        "name": "LOG_BOOTLOADER_LEVEL_DEBUG", 
                        "range": null, 
                        "title": "Debug", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice LOG_BOOTLOADER_LEVEL>", 
                        "help": null, 
                        "id": "LOG_BOOTLOADER_LEVEL_VERBOSE", 
                        "name": "LOG_BOOTLOADER_LEVEL_VERBOSE", 
                        "range": null, 
                        "title": "Verbose", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Specify how much output to see in bootloader logs.\n", 
                "id": "bootloader-config-bootloader-log-verbosity", 
                "name": "LOG_BOOTLOADER_LEVEL", 
                "title": "Bootloader log verbosity", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "LOG_BOOTLOADER_LEVEL", 
                "name": "LOG_BOOTLOADER_LEVEL", 
                "range": null, 
                "title": null, 
                "type": "int"
            }, 
            {
                "children": [], 
                "depends_on": "FLASHMODE_QIO || FLASHMODE_QOUT", 
                "help": "This value is ignored unless flash mode is set to QIO or QOUT *and* the SPI flash pins have been\noverriden by setting the eFuses SPI_PAD_CONFIG_xxx.\n\nWhen this is the case, the eFuse config only defines 3 of the 4 Quad I/O data pins. The WP pin (aka ESP32\npin \"SD_DATA_3\" or SPI flash pin \"IO2\") is not specified in eFuse. That pin number is compiled into the\nbootloader instead.\n\nThe default value (GPIO 7) is correct for WP pin on ESP32-D2WD integrated flash.\n", 
                "id": "BOOTLOADER_SPI_WP_PIN", 
                "name": "BOOTLOADER_SPI_WP_PIN", 
                "range": null, 
                "title": "SPI Flash WP Pin when customising pins via eFuse (read help)", 
                "type": "int"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "!ESPTOOLPY_FLASHFREQ_80M && <choice BOOTLOADER_VDDSDIO_BOOST>", 
                        "help": null, 
                        "id": "BOOTLOADER_VDDSDIO_BOOST_1_8V", 
                        "name": "BOOTLOADER_VDDSDIO_BOOST_1_8V", 
                        "range": null, 
                        "title": "1.8V", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice BOOTLOADER_VDDSDIO_BOOST>", 
                        "help": null, 
                        "id": "BOOTLOADER_VDDSDIO_BOOST_1_9V", 
                        "name": "BOOTLOADER_VDDSDIO_BOOST_1_9V", 
                        "range": null, 
                        "title": "1.9V", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "If this option is enabled, and VDDSDIO LDO is set to 1.8V (using eFuse\nor MTDI bootstrapping pin), bootloader will change LDO settings to\noutput 1.9V instead. This helps prevent flash chip from browning out\nduring flash programming operations.\n\nThis option has no effect if VDDSDIO is set to 3.3V, or if the internal\nVDDSDIO regulator is disabled via eFuse.\n", 
                "id": "bootloader-config-vddsdio-ldo-voltage", 
                "name": "BOOTLOADER_VDDSDIO_BOOST", 
                "title": "VDDSDIO LDO voltage", 
                "type": "choice"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_FACTORY_RESET", 
                        "help": "The selected GPIO will be configured as an input with internal pull-up enabled.\nTo trigger a factory reset, this GPIO must be pulled low on reset.\nNote that GPIO34-39 do not have an internal pullup and an external one must be provided.\n", 
                        "id": "BOOTLOADER_NUM_PIN_FACTORY_RESET", 
                        "name": "BOOTLOADER_NUM_PIN_FACTORY_RESET", 
                        "range": null, 
                        "title": "Number of the GPIO input for factory reset", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_FACTORY_RESET", 
                        "help": "The device will boot from \"factory\" partition (or OTA slot 0 if no factory partition is present) after a\nfactory reset.\n", 
                        "id": "BOOTLOADER_OTA_DATA_ERASE", 
                        "name": "BOOTLOADER_OTA_DATA_ERASE", 
                        "range": null, 
                        "title": "Clear OTA data on factory reset (select factory partition)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_FACTORY_RESET", 
                        "help": "Allows customers to select which data partitions will be erased while factory reset.\n\nSpecify the names of partitions as a comma-delimited with optional spaces for readability. (Like this:\n\"nvs, phy_init, ...\")\nMake sure that the name specified in the partition table and here are the same.\nPartitions of type \"app\" cannot be specified here.\n", 
                        "id": "BOOTLOADER_DATA_FACTORY_RESET", 
                        "name": "BOOTLOADER_DATA_FACTORY_RESET", 
                        "range": null, 
                        "title": "Comma-separated names of partitions to clear on factory reset", 
                        "type": "string"
                    }
                ], 
                "depends_on": null, 
                "help": "Allows to reset the device to factory settings:\n- clear one or more data partitions;\n- boot from \"factory\" partition.\nThe factory reset will occur if there is a GPIO input pulled low while device starts up.\nSee settings below.\n", 
                "id": "BOOTLOADER_FACTORY_RESET", 
                "name": "BOOTLOADER_FACTORY_RESET", 
                "range": null, 
                "title": "GPIO triggers factory reset", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_APP_TEST", 
                        "help": "The selected GPIO will be configured as an input with internal pull-up enabled.\nTo trigger a test app, this GPIO must be pulled low on reset.\nAfter the GPIO input is deactivated and the device reboots, the old application will boot.\n(factory or OTA[x]).\nNote that GPIO34-39 do not have an internal pullup and an external one must be provided.\n", 
                        "id": "BOOTLOADER_NUM_PIN_APP_TEST", 
                        "name": "BOOTLOADER_NUM_PIN_APP_TEST", 
                        "range": null, 
                        "title": "Number of the GPIO input to boot TEST partition", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "help": "Allows to run the test app from \"TEST\" partition.\nA boot from \"test\" partition will occur if there is a GPIO input pulled low while device starts up.\nSee settings below.\n", 
                "id": "BOOTLOADER_APP_TEST", 
                "name": "BOOTLOADER_APP_TEST", 
                "range": null, 
                "title": "GPIO triggers boot from test app partition", 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": "BOOTLOADER_FACTORY_RESET || BOOTLOADER_APP_TEST", 
                "help": "The GPIO must be held low continuously for this period of time after reset\nbefore a factory reset or test partition boot (as applicable) is performed.\n", 
                "id": "BOOTLOADER_HOLD_TIME_GPIO", 
                "name": "BOOTLOADER_HOLD_TIME_GPIO", 
                "range": null, 
                "title": "Hold time of GPIO for reset/test mode (seconds)", 
                "type": "int"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_WDT_ENABLE", 
                        "help": "If it is set, the client must itself reset or disable rtc_wdt in their code (app_main()).\nOtherwise rtc_wdt will be disabled before calling app_main function.\nUse function rtc_wdt_feed() for resetting counter of rtc_wdt.\nUse function rtc_wdt_disable() for disabling rtc_wdt.\n", 
                        "id": "BOOTLOADER_WDT_DISABLE_IN_USER_CODE", 
                        "name": "BOOTLOADER_WDT_DISABLE_IN_USER_CODE", 
                        "range": null, 
                        "title": "Allows RTC watchdog disable in user code", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_WDT_ENABLE", 
                        "help": "Verify that this parameter is correct and more then the execution time.\nPay attention to options such as reset to factory, trigger test partition and encryption on boot\n- these options can increase the execution time.\nNote: RTC_WDT will reset while encryption operations will be performed.\n", 
                        "id": "BOOTLOADER_WDT_TIME_MS", 
                        "name": "BOOTLOADER_WDT_TIME_MS", 
                        "range": [
                            0, 
                            120000
                        ], 
                        "title": "Timeout for RTC watchdog (ms)", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "help": "Tracks the execution time of startup code.\nIf the execution time is exceeded, the RTC_WDT will restart system.\nIt is also useful to prevent a lock up in start code caused by an unstable power source.\nNOTE: Tracks the execution time starts from the bootloader code - re-set timeout, while selecting the\nsource for slow_clk - and ends calling app_main.\nRe-set timeout is needed due to WDT uses a SLOW_CLK clock source. After changing a frequency slow_clk a\ntime of WDT needs to re-set for new frequency.\nslow_clk depends on ESP32_RTC_CLOCK_SOURCE (INTERNAL_RC or EXTERNAL_CRYSTAL).\n", 
                "id": "BOOTLOADER_WDT_ENABLE", 
                "name": "BOOTLOADER_WDT_ENABLE", 
                "range": null, 
                "title": "Use RTC watchdog in start code", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "APP_ANTI_ROLLBACK", 
                                "help": "The secure version is the sequence number stored in the header of each firmware.\nThe security version is set in the bootloader, version is recorded in the eFuse field\nas the number of set ones. The allocated number of bits in the efuse field\nfor storing the security version is limited (see APP_SECURE_VERSION_SIZE_EFUSE_FIELD option).\n\nBootloader: When bootloader selects an app to boot, an app is selected that has\na security version greater or equal that recorded in eFuse field.\nThe app is booted with a higher (or equal) secure version.\n\nThe security version is worth increasing if in previous versions there is\na significant vulnerability and their use is not acceptable.\n\nYour partition table should has a scheme with ota_0 + ota_1 (without factory).\n", 
                                "id": "APP_SECURE_VERSION", 
                                "name": "APP_SECURE_VERSION", 
                                "range": null, 
                                "title": "eFuse secure version of app", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "APP_ANTI_ROLLBACK", 
                                "help": "The size of the efuse secure version field. Its length is limited to 32 bits.\nThis determines how many times the security version can be increased.\n", 
                                "id": "APP_SECURE_VERSION_SIZE_EFUSE_FIELD", 
                                "name": "APP_SECURE_VERSION_SIZE_EFUSE_FIELD", 
                                "range": null, 
                                "title": "Size of the efuse secure version field", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "APP_ANTI_ROLLBACK", 
                                "help": "This option allow emulate read/write operations with efuse secure version.\nIt allow to test anti-rollback implemention without permanent write eFuse bits.\nIn partition table should be exist this partition `emul_efuse, data, 5, , 0x2000`.\n", 
                                "id": "EFUSE_SECURE_VERSION_EMULATE", 
                                "name": "EFUSE_SECURE_VERSION_EMULATE", 
                                "range": null, 
                                "title": "Emulate operations with efuse secure version(only test)", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "APP_ROLLBACK_ENABLE", 
                        "help": "This option prevents rollback to previous firmware/application image with lower security version.\n", 
                        "id": "APP_ANTI_ROLLBACK", 
                        "name": "APP_ANTI_ROLLBACK", 
                        "range": null, 
                        "title": "Enable app anti-rollback support", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "After updating the app, the bootloader runs a new app with the \"ESP_OTA_IMG_PENDING_VERIFY\" state set.\nThis state prevents the re-run of this app. After the first boot of the new app in the user code, the\nfunction should be called to confirm the operability of the app or vice versa about its non-operability.\nIf the app is working, then it is marked as valid. Otherwise, it is marked as not valid and rolls back to\nthe previous working app. A reboot is performed, and the app is booted before the software update.\nNote: If during the first boot a new app the power goes out or the WDT works, then roll back will happen.\nRollback is possible only between the apps with the same security versions.\n", 
                "id": "APP_ROLLBACK_ENABLE", 
                "name": "APP_ROLLBACK_ENABLE", 
                "range": null, 
                "title": "Enable app rollback support", 
                "type": "bool"
            }
        ], 
        "depends_on": null, 
        "id": "bootloader-config", 
        "title": "Bootloader config", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [], 
                "depends_on": "SECURE_BOOT_ENABLED || SECURE_SIGNED_ON_BOOT_NO_SECURE_BOOT", 
                "help": null, 
                "id": "SECURE_SIGNED_ON_BOOT", 
                "name": "SECURE_SIGNED_ON_BOOT", 
                "range": null, 
                "title": null, 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": "SECURE_BOOT_ENABLED || SECURE_SIGNED_ON_UPDATE_NO_SECURE_BOOT", 
                "help": null, 
                "id": "SECURE_SIGNED_ON_UPDATE", 
                "name": "SECURE_SIGNED_ON_UPDATE", 
                "range": null, 
                "title": null, 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": "SECURE_SIGNED_ON_BOOT || SECURE_SIGNED_ON_UPDATE", 
                "help": null, 
                "id": "SECURE_SIGNED_APPS", 
                "name": "SECURE_SIGNED_APPS", 
                "range": null, 
                "title": null, 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "SECURE_SIGNED_APPS_NO_SECURE_BOOT", 
                        "help": "If this option is set, the bootloader will be compiled with code to verify that an app is signed before\nbooting it.\n\nIf hardware secure boot is enabled, this option is always enabled and cannot be disabled.\nIf hardware secure boot is not enabled, this option doesn't add significant security by itself so most\nusers will want to leave it disabled.\n", 
                        "id": "SECURE_SIGNED_ON_BOOT_NO_SECURE_BOOT", 
                        "name": "SECURE_SIGNED_ON_BOOT_NO_SECURE_BOOT", 
                        "range": null, 
                        "title": "Bootloader verifies app signatures", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SECURE_SIGNED_APPS_NO_SECURE_BOOT", 
                        "help": "If this option is set, any OTA updated apps will have the signature verified before being considered valid.\n\nWhen enabled, the signature is automatically checked whenever the esp_ota_ops.h APIs are used for OTA\nupdates, or esp_image_format.h APIs are used to verify apps.\n\nIf hardware secure boot is enabled, this option is always enabled and cannot be disabled.\nIf hardware secure boot is not enabled, this option still adds significant security against network-based\nattackers by preventing spoofing of OTA updates.\n", 
                        "id": "SECURE_SIGNED_ON_UPDATE_NO_SECURE_BOOT", 
                        "name": "SECURE_SIGNED_ON_UPDATE_NO_SECURE_BOOT", 
                        "range": null, 
                        "title": "Verify app signature on update", 
                        "type": "bool"
                    }
                ], 
                "depends_on": "!SECURE_BOOT_ENABLED", 
                "help": "Require apps to be signed to verify their integrity.\n\nThis option uses the same app signature scheme as hardware secure boot, but unlike hardware secure boot it\ndoes not prevent the bootloader from being physically updated. This means that the device can be secured\nagainst remote network access, but not physical access. Compared to using hardware Secure Boot this option\nis much simpler to implement.\n", 
                "id": "SECURE_SIGNED_APPS_NO_SECURE_BOOT", 
                "name": "SECURE_SIGNED_APPS_NO_SECURE_BOOT", 
                "range": null, 
                "title": "Require signed app images", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice SECURE_BOOTLOADER_MODE>", 
                                "help": "On first boot, the bootloader will generate a key which is not readable externally or by software. A\ndigest is generated from the bootloader image itself. This digest will be verified on each subsequent\nboot.\n\nEnabling this option means that the bootloader cannot be changed after the first time it is booted.\n", 
                                "id": "SECURE_BOOTLOADER_ONE_TIME_FLASH", 
                                "name": "SECURE_BOOTLOADER_ONE_TIME_FLASH", 
                                "range": null, 
                                "title": "One-time flash", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice SECURE_BOOTLOADER_MODE>", 
                                "help": "Generate a reusable secure bootloader key, derived (via SHA-256) from the secure boot signing key.\n\nThis allows the secure bootloader to be re-flashed by anyone with access to the secure boot signing\nkey.\n\nThis option is less secure than one-time flash, because a leak of the digest key from one device\nallows reflashing of any device that uses it.\n", 
                                "id": "SECURE_BOOTLOADER_REFLASHABLE", 
                                "name": "SECURE_BOOTLOADER_REFLASHABLE", 
                                "range": null, 
                                "title": "Reflashable", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "SECURE_BOOT_ENABLED", 
                        "help": null, 
                        "id": "security-features-enable-hardware-secure-boot-in-bootloader-read-docs-first--secure-bootloader-mode", 
                        "name": "SECURE_BOOTLOADER_MODE", 
                        "title": "Secure bootloader mode", 
                        "type": "choice"
                    }
                ], 
                "depends_on": null, 
                "help": "Build a bootloader which enables secure boot on first boot.\n\nOnce enabled, secure boot will not boot a modified bootloader. The bootloader will only load a partition\ntable or boot an app if the data has a verified digital signature. There are implications for reflashing\nupdated apps once secure boot is enabled.\n\nWhen enabling secure boot, JTAG and ROM BASIC Interpreter are permanently disabled by default.\n\nRefer to https://docs.espressif.com/projects/esp-idf/en/latest/security/secure-boot.html before enabling.\n", 
                "id": "SECURE_BOOT_ENABLED", 
                "name": "SECURE_BOOT_ENABLED", 
                "range": null, 
                "title": "Enable hardware secure boot in bootloader (READ DOCS FIRST)", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "SECURE_BOOT_BUILD_SIGNED_BINARIES", 
                        "help": "Path to the key file used to sign app images.\n\nKey file is an ECDSA private key (NIST256p curve) in PEM format.\n\nPath is evaluated relative to the project directory.\n\nYou can generate a new signing key by running the following command:\nespsecure.py generate_signing_key secure_boot_signing_key.pem\n\nSee https://docs.espressif.com/projects/esp-idf/en/latest/security/secure-boot.html for details.\n", 
                        "id": "SECURE_BOOT_SIGNING_KEY", 
                        "name": "SECURE_BOOT_SIGNING_KEY", 
                        "range": null, 
                        "title": "Secure boot private signing key", 
                        "type": "string"
                    }
                ], 
                "depends_on": "SECURE_SIGNED_APPS", 
                "help": "Once secure boot or signed app requirement is enabled, app images are required to be signed.\n\nIf enabled (default), these binary files are signed as part of the build process. The file named in\n\"Secure boot private signing key\" will be used to sign the image.\n\nIf disabled, unsigned app/partition data will be built. They must be signed manually using espsecure.py\n(for example, on a remote signing server.)\n", 
                "id": "SECURE_BOOT_BUILD_SIGNED_BINARIES", 
                "name": "SECURE_BOOT_BUILD_SIGNED_BINARIES", 
                "range": null, 
                "title": "Sign binaries during build", 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": "SECURE_SIGNED_APPS && !SECURE_BOOT_BUILD_SIGNED_BINARIES", 
                "help": "Path to a public key file used to verify signed images. This key is compiled into the bootloader and/or\napp, to verify app images.\n\nKey file is in raw binary format, and can be extracted from a\nPEM formatted private key using the espsecure.py\nextract_public_key command.\n\nRefer to https://docs.espressif.com/projects/esp-idf/en/latest/security/secure-boot.html before enabling.\n", 
                "id": "SECURE_BOOT_VERIFICATION_KEY", 
                "name": "SECURE_BOOT_VERIFICATION_KEY", 
                "range": null, 
                "title": "Secure boot public signature verification key", 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice SECURE_BOOTLOADER_KEY_ENCODING>", 
                        "help": null, 
                        "id": "SECURE_BOOTLOADER_KEY_ENCODING_256BIT", 
                        "name": "SECURE_BOOTLOADER_KEY_ENCODING_256BIT", 
                        "range": null, 
                        "title": "No encoding (256 bit key)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice SECURE_BOOTLOADER_KEY_ENCODING>", 
                        "help": null, 
                        "id": "SECURE_BOOTLOADER_KEY_ENCODING_192BIT", 
                        "name": "SECURE_BOOTLOADER_KEY_ENCODING_192BIT", 
                        "range": null, 
                        "title": "3/4 encoding (192 bit key)", 
                        "type": "bool"
                    }
                ], 
                "depends_on": "SECURE_BOOTLOADER_REFLASHABLE", 
                "help": "In reflashable secure bootloader mode, a hardware key is derived from the signing key (with SHA-256) and\ncan be written to eFuse with espefuse.py.\n\nNormally this is a 256-bit key, but if 3/4 Coding Scheme is used on the device then the eFuse key is\ntruncated to 192 bits.\n\nThis configuration item doesn't change any firmware code, it only changes the size of key binary which is\ngenerated at build time.\n", 
                "id": "security-features-hardware-key-encoding", 
                "name": "SECURE_BOOTLOADER_KEY_ENCODING", 
                "title": "Hardware Key Encoding", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": "SECURE_BOOT_ENABLED", 
                "help": "You can disable some of the default protections offered by secure boot, in order to enable testing or a\ncustom combination of security features.\n\nOnly enable these options if you are very sure.\n\nRefer to https://docs.espressif.com/projects/esp-idf/en/latest/security/secure-boot.html before enabling.\n", 
                "id": "SECURE_BOOT_INSECURE", 
                "name": "SECURE_BOOT_INSECURE", 
                "range": null, 
                "title": "Allow potentially insecure options", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "FLASH_ENCRYPTION_ENABLED", 
                        "help": "You can disable some of the default protections offered by flash encryption, in order to enable testing or\na custom combination of security features.\n\nOnly enable these options if you are very sure.\n\nRefer to https://docs.espressif.com/projects/esp-idf/en/latest/security/secure-boot.html and\nhttps://docs.espressif.com/projects/esp-idf/en/latest/security/flash-encryption.html for details.\n", 
                        "id": "FLASH_ENCRYPTION_INSECURE", 
                        "name": "FLASH_ENCRYPTION_INSECURE", 
                        "range": null, 
                        "title": "Allow potentially insecure options", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "If this option is set, flash contents will be encrypted by the bootloader on first boot.\n\nNote: After first boot, the system will be permanently encrypted. Re-flashing an encrypted\nsystem is complicated and not always possible.\n\nRead https://docs.espressif.com/projects/esp-idf/en/latest/security/flash-encryption.html before enabling.\n", 
                "id": "FLASH_ENCRYPTION_ENABLED", 
                "name": "FLASH_ENCRYPTION_ENABLED", 
                "range": null, 
                "title": "Enable flash encryption on boot (READ DOCS FIRST)", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "SECURE_BOOT_INSECURE || FLASH_ENCRYPTION_INSECURE", 
                        "help": "By default, the BASIC ROM Console starts on reset if no valid bootloader is\nread from the flash.\n\nWhen either flash encryption or secure boot are enabled, the default is to\ndisable this BASIC fallback mode permanently via eFuse.\n\nIf this option is set, this eFuse is not burned and the BASIC ROM Console may\nremain accessible.  Only set this option in testing environments.\n", 
                        "id": "SECURE_BOOT_ALLOW_ROM_BASIC", 
                        "name": "SECURE_BOOT_ALLOW_ROM_BASIC", 
                        "range": null, 
                        "title": "Leave ROM BASIC Interpreter available on reset", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SECURE_BOOT_INSECURE || FLASH_ENCRYPTION_INSECURE", 
                        "help": "If not set (default), the bootloader will permanently disable JTAG (across entire chip) on first boot\nwhen either secure boot or flash encryption is enabled.\n\nSetting this option leaves JTAG on for debugging, which negates all protections of flash encryption\nand some of the protections of secure boot.\n\nOnly set this option in testing environments.\n", 
                        "id": "SECURE_BOOT_ALLOW_JTAG", 
                        "name": "SECURE_BOOT_ALLOW_JTAG", 
                        "range": null, 
                        "title": "Allow JTAG Debugging", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SECURE_BOOT_INSECURE", 
                        "help": "If not set (default), app partition size must be a multiple of 64KB. App images are padded to 64KB\nlength, and the bootloader checks any trailing bytes after the signature (before the next 64KB\nboundary) have not been written. This is because flash cache maps entire 64KB pages into the address\nspace. This prevents an attacker from appending unverified data after the app image in the flash,\ncausing it to be mapped into the address space.\n\nSetting this option allows the app partition length to be unaligned, and disables padding of the app\nimage to this length. It is generally not recommended to set this option, unless you have a legacy\npartitioning scheme which doesn't support 64KB aligned partition lengths.\n", 
                        "id": "SECURE_BOOT_ALLOW_SHORT_APP_PARTITION", 
                        "name": "SECURE_BOOT_ALLOW_SHORT_APP_PARTITION", 
                        "range": null, 
                        "title": "Allow app partition length not 64KB aligned", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "FLASH_ENCRYPTION_INSECURE", 
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader encryption access on\nfirst boot. If set, the UART bootloader will still be able to access hardware encryption.\n\nIt is recommended to only set this option in testing environments.\n", 
                        "id": "FLASH_ENCRYPTION_UART_BOOTLOADER_ALLOW_ENCRYPT", 
                        "name": "FLASH_ENCRYPTION_UART_BOOTLOADER_ALLOW_ENCRYPT", 
                        "range": null, 
                        "title": "Leave UART bootloader encryption enabled", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "FLASH_ENCRYPTION_INSECURE", 
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader decryption access on\nfirst boot. If set, the UART bootloader will still be able to access hardware decryption.\n\nOnly set this option in testing environments. Setting this option allows complete bypass of flash\nencryption.\n", 
                        "id": "FLASH_ENCRYPTION_UART_BOOTLOADER_ALLOW_DECRYPT", 
                        "name": "FLASH_ENCRYPTION_UART_BOOTLOADER_ALLOW_DECRYPT", 
                        "range": null, 
                        "title": "Leave UART bootloader decryption enabled", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "FLASH_ENCRYPTION_INSECURE", 
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader flash cache access on\nfirst boot. If set, the UART bootloader will still be able to access the flash cache.\n\nOnly set this option in testing environments.\n", 
                        "id": "FLASH_ENCRYPTION_UART_BOOTLOADER_ALLOW_CACHE", 
                        "name": "FLASH_ENCRYPTION_UART_BOOTLOADER_ALLOW_CACHE", 
                        "range": null, 
                        "title": "Leave UART bootloader flash cache enabled", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "security-features-potentially-insecure-options", 
                "title": "Potentially insecure options", 
                "type": "menu"
            }, 
            {
                "children": [], 
                "depends_on": "FLASH_ENCRYPTION_ENABLED", 
                "help": "If this option is enabled, flash encryption is permanently enabled after first boot by write-protecting\nthe FLASH_CRYPT_CNT efuse. This is the recommended configuration for a secure production system.\n\nIf this option is disabled, FLASH_CRYPT_CNT is left writeable and up to 4 plaintext re-flashes are allowed.\nAn attacker with physical access will be able to read out encrypted flash contents until all plaintext\nre-flashes have been used up.\n\nIf this option is disabled and hardware Secure Boot is enabled, Secure Boot must be configured in\nReflashable mode so that a new Secure Boot digest can be flashed at the same time as plaintext firmware.\nThis combination is not secure and should not be used for a production system.\n", 
                "id": "FLASH_ENCRYPTION_DISABLE_PLAINTEXT", 
                "name": "FLASH_ENCRYPTION_DISABLE_PLAINTEXT", 
                "range": null, 
                "title": "Disable serial reflashing of plaintext firmware", 
                "type": "bool"
            }
        ], 
        "depends_on": null, 
        "id": "security-features", 
        "title": "Security features", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [], 
                "depends_on": "!IDF_CMAKE", 
                "help": "The serial port that's connected to the ESP chip. This can be overridden by setting the ESPPORT\nenvironment variable.\n\nThis value is ignored when using the CMake-based build system or idf.py.\n", 
                "id": "ESPTOOLPY_PORT", 
                "name": "ESPTOOLPY_PORT", 
                "range": null, 
                "title": "Default serial port", 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BAUD_115200B", 
                        "name": "ESPTOOLPY_BAUD_115200B", 
                        "range": null, 
                        "title": "115200 baud", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BAUD_230400B", 
                        "name": "ESPTOOLPY_BAUD_230400B", 
                        "range": null, 
                        "title": "230400 baud", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BAUD_921600B", 
                        "name": "ESPTOOLPY_BAUD_921600B", 
                        "range": null, 
                        "title": "921600 baud", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BAUD_2MB", 
                        "name": "ESPTOOLPY_BAUD_2MB", 
                        "range": null, 
                        "title": "2Mbaud", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BAUD_OTHER", 
                        "name": "ESPTOOLPY_BAUD_OTHER", 
                        "range": null, 
                        "title": "Other baud rate", 
                        "type": "bool"
                    }
                ], 
                "depends_on": "!IDF_CMAKE", 
                "help": "Default baud rate to use while communicating with the ESP chip. Can be overridden by\nsetting the ESPBAUD variable.\n\nThis value is ignored when using the CMake-based build system or idf.py.\n", 
                "id": "serial-flasher-config-default-baud-rate", 
                "name": "ESPTOOLPY_BAUD", 
                "title": "Default baud rate", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_BAUD_OTHER_VAL", 
                "name": "ESPTOOLPY_BAUD_OTHER_VAL", 
                "range": null, 
                "title": "Other baud rate value", 
                "type": "int"
            }, 
            {
                "children": [], 
                "depends_on": "!IDF_CMAKE", 
                "help": null, 
                "id": "ESPTOOLPY_BAUD", 
                "name": "ESPTOOLPY_BAUD", 
                "range": null, 
                "title": null, 
                "type": "int"
            }, 
            {
                "children": [], 
                "depends_on": "!IDF_CMAKE", 
                "help": "The flasher tool can send data compressed using zlib, letting the ROM on the ESP chip\ndecompress it on the fly before flashing it. For most payloads, this should result in a\nspeed increase.\n", 
                "id": "ESPTOOLPY_COMPRESSED", 
                "name": "ESPTOOLPY_COMPRESSED", 
                "range": null, 
                "title": "Use compressed upload", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice FLASHMODE>", 
                        "help": null, 
                        "id": "FLASHMODE_QIO", 
                        "name": "FLASHMODE_QIO", 
                        "range": null, 
                        "title": "QIO", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice FLASHMODE>", 
                        "help": null, 
                        "id": "FLASHMODE_QOUT", 
                        "name": "FLASHMODE_QOUT", 
                        "range": null, 
                        "title": "QOUT", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice FLASHMODE>", 
                        "help": null, 
                        "id": "FLASHMODE_DIO", 
                        "name": "FLASHMODE_DIO", 
                        "range": null, 
                        "title": "DIO", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice FLASHMODE>", 
                        "help": null, 
                        "id": "FLASHMODE_DOUT", 
                        "name": "FLASHMODE_DOUT", 
                        "range": null, 
                        "title": "DOUT", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Mode the flash chip is flashed in, as well as the default mode for the\nbinary to run in.\n", 
                "id": "serial-flasher-config-flash-spi-mode", 
                "name": "FLASHMODE", 
                "title": "Flash SPI mode", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_FLASHMODE", 
                "name": "ESPTOOLPY_FLASHMODE", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHFREQ_80M", 
                        "name": "ESPTOOLPY_FLASHFREQ_80M", 
                        "range": null, 
                        "title": "80 MHz", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHFREQ_40M", 
                        "name": "ESPTOOLPY_FLASHFREQ_40M", 
                        "range": null, 
                        "title": "40 MHz", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHFREQ_26M", 
                        "name": "ESPTOOLPY_FLASHFREQ_26M", 
                        "range": null, 
                        "title": "26 MHz", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHFREQ_20M", 
                        "name": "ESPTOOLPY_FLASHFREQ_20M", 
                        "range": null, 
                        "title": "20 MHz", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "The SPI flash frequency to be used.\n", 
                "id": "serial-flasher-config-flash-spi-speed", 
                "name": "ESPTOOLPY_FLASHFREQ", 
                "title": "Flash SPI speed", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_FLASHFREQ", 
                "name": "ESPTOOLPY_FLASHFREQ", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHSIZE_1MB", 
                        "name": "ESPTOOLPY_FLASHSIZE_1MB", 
                        "range": null, 
                        "title": "1 MB", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHSIZE_2MB", 
                        "name": "ESPTOOLPY_FLASHSIZE_2MB", 
                        "range": null, 
                        "title": "2 MB", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHSIZE_4MB", 
                        "name": "ESPTOOLPY_FLASHSIZE_4MB", 
                        "range": null, 
                        "title": "4 MB", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHSIZE_8MB", 
                        "name": "ESPTOOLPY_FLASHSIZE_8MB", 
                        "range": null, 
                        "title": "8 MB", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_FLASHSIZE_16MB", 
                        "name": "ESPTOOLPY_FLASHSIZE_16MB", 
                        "range": null, 
                        "title": "16 MB", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "SPI flash size, in megabytes\n", 
                "id": "serial-flasher-config-flash-size", 
                "name": "ESPTOOLPY_FLASHSIZE", 
                "title": "Flash size", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_FLASHSIZE", 
                "name": "ESPTOOLPY_FLASHSIZE", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "If this option is set, 'make flash' targets will automatically detect\nthe flash size and update the bootloader image when flashing.\n", 
                "id": "ESPTOOLPY_FLASHSIZE_DETECT", 
                "name": "ESPTOOLPY_FLASHSIZE_DETECT", 
                "range": null, 
                "title": "Detect flash size when flashing bootloader", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BEFORE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BEFORE_RESET", 
                        "name": "ESPTOOLPY_BEFORE_RESET", 
                        "range": null, 
                        "title": "Reset to bootloader", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BEFORE>", 
                        "help": null, 
                        "id": "ESPTOOLPY_BEFORE_NORESET", 
                        "name": "ESPTOOLPY_BEFORE_NORESET", 
                        "range": null, 
                        "title": "No reset", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Configure whether esptool.py should reset the ESP32 before flashing.\n\nAutomatic resetting depends on the RTS & DTR signals being\nwired from the serial port to the ESP32. Most USB development\nboards do this internally.\n", 
                "id": "serial-flasher-config-before-flashing", 
                "name": "ESPTOOLPY_BEFORE", 
                "title": "Before flashing", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_BEFORE", 
                "name": "ESPTOOLPY_BEFORE", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_AFTER>", 
                        "help": null, 
                        "id": "ESPTOOLPY_AFTER_RESET", 
                        "name": "ESPTOOLPY_AFTER_RESET", 
                        "range": null, 
                        "title": "Reset after flashing", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_AFTER>", 
                        "help": null, 
                        "id": "ESPTOOLPY_AFTER_NORESET", 
                        "name": "ESPTOOLPY_AFTER_NORESET", 
                        "range": null, 
                        "title": "Stay in bootloader", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Configure whether esptool.py should reset the ESP32 after flashing.\n\nAutomatic resetting depends on the RTS & DTR signals being\nwired from the serial port to the ESP32. Most USB development\nboards do this internally.\n", 
                "id": "serial-flasher-config-after-flashing", 
                "name": "ESPTOOLPY_AFTER", 
                "title": "After flashing", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "ESPTOOLPY_AFTER", 
                "name": "ESPTOOLPY_AFTER", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice MONITOR_BAUD>", 
                        "help": null, 
                        "id": "MONITOR_BAUD_9600B", 
                        "name": "MONITOR_BAUD_9600B", 
                        "range": null, 
                        "title": "9600 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice MONITOR_BAUD>", 
                        "help": null, 
                        "id": "MONITOR_BAUD_57600B", 
                        "name": "MONITOR_BAUD_57600B", 
                        "range": null, 
                        "title": "57600 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice MONITOR_BAUD>", 
                        "help": null, 
                        "id": "MONITOR_BAUD_115200B", 
                        "name": "MONITOR_BAUD_115200B", 
                        "range": null, 
                        "title": "115200 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice MONITOR_BAUD>", 
                        "help": null, 
                        "id": "MONITOR_BAUD_230400B", 
                        "name": "MONITOR_BAUD_230400B", 
                        "range": null, 
                        "title": "230400 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice MONITOR_BAUD>", 
                        "help": null, 
                        "id": "MONITOR_BAUD_921600B", 
                        "name": "MONITOR_BAUD_921600B", 
                        "range": null, 
                        "title": "921600 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice MONITOR_BAUD>", 
                        "help": null, 
                        "id": "MONITOR_BAUD_2MB", 
                        "name": "MONITOR_BAUD_2MB", 
                        "range": null, 
                        "title": "2 Mbps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice MONITOR_BAUD>", 
                        "help": null, 
                        "id": "MONITOR_BAUD_OTHER", 
                        "name": "MONITOR_BAUD_OTHER", 
                        "range": null, 
                        "title": "Custom baud rate", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Baud rate to use when running 'make monitor' to view serial output\nfrom a running chip.\n\nCan override by setting the MONITORBAUD environment variable.\n", 
                "id": "serial-flasher-config--make-monitor-baud-rate", 
                "name": "MONITOR_BAUD", 
                "title": "'make monitor' baud rate", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "MONITOR_BAUD_OTHER_VAL", 
                "name": "MONITOR_BAUD_OTHER_VAL", 
                "range": null, 
                "title": "Custom baud rate value", 
                "type": "int"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "MONITOR_BAUD", 
                "name": "MONITOR_BAUD", 
                "range": null, 
                "title": null, 
                "type": "int"
            }
        ], 
        "depends_on": null, 
        "id": "serial-flasher-config", 
        "title": "Serial flasher config", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice PARTITION_TABLE_TYPE>", 
                        "help": null, 
                        "id": "PARTITION_TABLE_SINGLE_APP", 
                        "name": "PARTITION_TABLE_SINGLE_APP", 
                        "range": null, 
                        "title": "Single factory app, no OTA", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice PARTITION_TABLE_TYPE>", 
                        "help": null, 
                        "id": "PARTITION_TABLE_TWO_OTA", 
                        "name": "PARTITION_TABLE_TWO_OTA", 
                        "range": null, 
                        "title": "Factory app, two OTA definitions", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice PARTITION_TABLE_TYPE>", 
                        "help": null, 
                        "id": "PARTITION_TABLE_CUSTOM", 
                        "name": "PARTITION_TABLE_CUSTOM", 
                        "range": null, 
                        "title": "Custom partition table CSV", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "The partition table to flash to the ESP32. The partition table\ndetermines where apps, data and other resources are expected to\nbe found.\n\nThe predefined partition table CSV descriptions can be found\nin the components/partition_table directory. Otherwise it's\npossible to create a new custom partition CSV for your application.\n", 
                "id": "partition-table-partition-table", 
                "name": "PARTITION_TABLE_TYPE", 
                "title": "Partition Table", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Name of the custom partition CSV filename. This path is evaluated\nrelative to the project root directory.\n", 
                "id": "PARTITION_TABLE_CUSTOM_FILENAME", 
                "name": "PARTITION_TABLE_CUSTOM_FILENAME", 
                "range": null, 
                "title": "Custom partition CSV file", 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "id": "PARTITION_TABLE_FILENAME", 
                "name": "PARTITION_TABLE_FILENAME", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "The address of partition table (by default 0x8000).\nAllows you to move the partition table, it gives more space for the bootloader.\nNote that the bootloader and app will both need to be compiled with the same PARTITION_TABLE_OFFSET value.\n\nThis number should be a multiple of 0x1000.\n\nNote that partition offsets in the partition table CSV file may need to be changed if this value is set to\na higher value. To have each partition offset adapt to the configured partition table offset, leave all\npartition offsets blank in the CSV file.\n", 
                "id": "PARTITION_TABLE_OFFSET", 
                "name": "PARTITION_TABLE_OFFSET", 
                "range": null, 
                "title": "Offset of partition table", 
                "type": "hex"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Generate an MD5 checksum for the partition table for protecting the\nintegrity of the table. The generation should be turned off for legacy\nbootloaders which cannot recognize the MD5 checksum in the partition\ntable.\n", 
                "id": "PARTITION_TABLE_MD5", 
                "name": "PARTITION_TABLE_MD5", 
                "range": null, 
                "title": "Generate an MD5 checksum for the partition table", 
                "type": "bool"
            }
        ], 
        "depends_on": null, 
        "id": "partition-table", 
        "title": "Partition Table", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice OPTIMIZATION_COMPILER>", 
                        "help": null, 
                        "id": "OPTIMIZATION_LEVEL_DEBUG", 
                        "name": "OPTIMIZATION_LEVEL_DEBUG", 
                        "range": null, 
                        "title": "Debug (-Og)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice OPTIMIZATION_COMPILER>", 
                        "help": null, 
                        "id": "OPTIMIZATION_LEVEL_RELEASE", 
                        "name": "OPTIMIZATION_LEVEL_RELEASE", 
                        "range": null, 
                        "title": "Release (-Os)", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "This option sets compiler optimization level (gcc -O argument).\n\n- for \"Release\" setting, -Os flag is added to CFLAGS.\n- for \"Debug\" setting, -Og flag is added to CFLAGS.\n\n\"Release\" with -Os produces smaller & faster compiled code but it\nmay be harder to correlated code addresses to source files when debugging.\n\nTo add custom optimization settings, set CFLAGS and/or CPPFLAGS\nin project makefile, before including $(IDF_PATH)/make/project.mk. Note that\ncustom optimization levels may be unsupported.\n", 
                "id": "compiler-options-optimization-level", 
                "name": "OPTIMIZATION_COMPILER", 
                "title": "Optimization Level", 
                "type": "choice"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice OPTIMIZATION_ASSERTION_LEVEL>", 
                        "help": "Enable assertions. Assertion content and line number will be printed on failure.\n", 
                        "id": "OPTIMIZATION_ASSERTIONS_ENABLED", 
                        "name": "OPTIMIZATION_ASSERTIONS_ENABLED", 
                        "range": null, 
                        "title": "Enabled", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice OPTIMIZATION_ASSERTION_LEVEL>", 
                        "help": "Enable silent assertions. Failed assertions will abort(), user needs to\nuse the aborting address to find the line number with the failed assertion.\n", 
                        "id": "OPTIMIZATION_ASSERTIONS_SILENT", 
                        "name": "OPTIMIZATION_ASSERTIONS_SILENT", 
                        "range": null, 
                        "title": "Silent (saves code size)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice OPTIMIZATION_ASSERTION_LEVEL>", 
                        "help": "If assertions are disabled, -DNDEBUG is added to CPPFLAGS.\n", 
                        "id": "OPTIMIZATION_ASSERTIONS_DISABLED", 
                        "name": "OPTIMIZATION_ASSERTIONS_DISABLED", 
                        "range": null, 
                        "title": "Disabled (sets -DNDEBUG)", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Assertions can be:\n\n- Enabled. Failure will print verbose assertion details. This is the default.\n\n- Set to \"silent\" to save code size (failed assertions will abort() but user\n  needs to use the aborting address to find the line number with the failed assertion.)\n\n- Disabled entirely (not recommended for most configurations.) -DNDEBUG is added\n  to CPPFLAGS in this case.\n", 
                "id": "compiler-options-assertion-level", 
                "name": "OPTIMIZATION_ASSERTION_LEVEL", 
                "title": "Assertion level", 
                "type": "choice"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "CXX_EXCEPTIONS", 
                        "help": "Size (in bytes) of the emergency memory pool for C++ exceptions. This pool will be used to allocate\nmemory for thrown exceptions when there is not enough memory on the heap.\n", 
                        "id": "CXX_EXCEPTIONS_EMG_POOL_SIZE", 
                        "name": "CXX_EXCEPTIONS_EMG_POOL_SIZE", 
                        "range": null, 
                        "title": "Emergency Pool Size", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "help": "Enabling this option compiles all IDF C++ files with exception support enabled.\n\nDisabling this option disables C++ exception support in all compiled files, and any libstdc++ code\nwhich throws an exception will abort instead.\n\nEnabling this option currently adds an additional ~500 bytes of heap overhead\nwhen an exception is thrown in user code for the first time.\n", 
                "id": "CXX_EXCEPTIONS", 
                "is_menuconfig": true, 
                "name": "CXX_EXCEPTIONS", 
                "range": null, 
                "title": "Enable C++ exceptions", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice STACK_CHECK_MODE>", 
                        "help": null, 
                        "id": "STACK_CHECK_NONE", 
                        "name": "STACK_CHECK_NONE", 
                        "range": null, 
                        "title": "None", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice STACK_CHECK_MODE>", 
                        "help": null, 
                        "id": "STACK_CHECK_NORM", 
                        "name": "STACK_CHECK_NORM", 
                        "range": null, 
                        "title": "Normal", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice STACK_CHECK_MODE>", 
                        "help": null, 
                        "id": "STACK_CHECK_STRONG", 
                        "name": "STACK_CHECK_STRONG", 
                        "range": null, 
                        "title": "Strong", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice STACK_CHECK_MODE>", 
                        "help": null, 
                        "id": "STACK_CHECK_ALL", 
                        "name": "STACK_CHECK_ALL", 
                        "range": null, 
                        "title": "Overall", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Stack smashing protection mode. Emit extra code to check for buffer overflows, such as stack\nsmashing attacks. This is done by adding a guard variable to functions with vulnerable objects.\nThe guards are initialized when a function is entered and then checked when the function exits.\nIf a guard check fails, program is halted. Protection has the following modes:\n\n- In NORMAL mode (GCC flag: -fstack-protector) only functions that call alloca, and functions with\n  buffers larger than 8 bytes are protected.\n\n- STRONG mode (GCC flag: -fstack-protector-strong) is like NORMAL, but includes additional functions\n  to be protected -- those that have local array definitions, or have references to local frame\n  addresses.\n\n- In OVERALL mode (GCC flag: -fstack-protector-all) all functions are protected.\n\nModes have the following impact on code performance and coverage:\n\n- performance: NORMAL > STRONG > OVERALL\n\n- coverage: NORMAL < STRONG < OVERALL\n", 
                "id": "compiler-options-stack-smashing-protection-mode", 
                "name": "STACK_CHECK_MODE", 
                "title": "Stack smashing protection mode", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Stack smashing protection.\n", 
                "id": "STACK_CHECK", 
                "name": "STACK_CHECK", 
                "range": null, 
                "title": null, 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Adds -Wwrite-strings flag for the C/C++ compilers.\n\nFor C, this gives string constants the type ``const char[]`` so that\ncopying the address of one into a non-const ``char *`` pointer\nproduces a warning. This warning helps to find at compile time code\nthat tries to write into a string constant.\n\nFor C++, this warns about the deprecated conversion from string\nliterals to ``char *``.\n", 
                "id": "WARN_WRITE_STRINGS", 
                "name": "WARN_WRITE_STRINGS", 
                "range": null, 
                "title": "Enable -Wwrite-strings warning flag", 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Enable this option if using GCC 6 or newer, and wanting to disable warnings which don't appear with\nGCC 5.\n", 
                "id": "DISABLE_GCC8_WARNINGS", 
                "name": "DISABLE_GCC8_WARNINGS", 
                "range": null, 
                "title": "Disable new warnings introduced in GCC 6 - 8", 
                "type": "bool"
            }
        ], 
        "depends_on": null, 
        "id": "compiler-options", 
        "title": "Compiler options", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_APPTRACE_DESTINATION>", 
                                "help": null, 
                                "id": "ESP32_APPTRACE_DEST_TRAX", 
                                "name": "ESP32_APPTRACE_DEST_TRAX", 
                                "range": null, 
                                "title": "Trace memory", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_APPTRACE_DESTINATION>", 
                                "help": null, 
                                "id": "ESP32_APPTRACE_DEST_NONE", 
                                "name": "ESP32_APPTRACE_DEST_NONE", 
                                "range": null, 
                                "title": "None", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select destination for application trace: trace memory or none (to disable).\n", 
                        "id": "component-config-application-level-tracing-data-destination", 
                        "name": "ESP32_APPTRACE_DESTINATION", 
                        "title": "Data Destination", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!ESP32_TRAX", 
                        "help": "Enables/disable application tracing module.\n", 
                        "id": "ESP32_APPTRACE_ENABLE", 
                        "name": "ESP32_APPTRACE_ENABLE", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enables/disable application tracing module internal sync lock.\n", 
                        "id": "ESP32_APPTRACE_LOCK_ENABLE", 
                        "name": "ESP32_APPTRACE_LOCK_ENABLE", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_APPTRACE_ENABLE", 
                        "help": "Timeout for flushing last trace data to host in case of panic. In ms.\nUse -1 to disable timeout and wait forever.\n", 
                        "id": "ESP32_APPTRACE_ONPANIC_HOST_FLUSH_TMO", 
                        "name": "ESP32_APPTRACE_ONPANIC_HOST_FLUSH_TMO", 
                        "range": null, 
                        "title": "Timeout for flushing last trace data to host on panic", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_APPTRACE_DEST_TRAX", 
                        "help": "Threshold for flushing last trace data to host on panic in post-mortem mode.\nThis is minimal amount of data needed to perform flush. In bytes.\n", 
                        "id": "ESP32_APPTRACE_POSTMORTEM_FLUSH_TRAX_THRESH", 
                        "name": "ESP32_APPTRACE_POSTMORTEM_FLUSH_TRAX_THRESH", 
                        "range": null, 
                        "title": "Threshold for flushing last trace data to host on panic", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_APPTRACE_DEST_TRAX", 
                        "help": "Size of the buffer for events in bytes. It is useful for buffering events from\nthe time critical code (scheduler, ISRs etc). If this parameter is 0 then\nevents will be discarded when main HW buffer is full.\n", 
                        "id": "ESP32_APPTRACE_PENDING_DATA_SIZE_MAX", 
                        "name": "ESP32_APPTRACE_PENDING_DATA_SIZE_MAX", 
                        "range": null, 
                        "title": "Size of the pending data buffer", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "FREERTOS_UNICORE && !PM_ENABLE && <choice SYSVIEW_TS_SOURCE>", 
                                                "help": null, 
                                                "id": "SYSVIEW_TS_SOURCE_CCOUNT", 
                                                "name": "SYSVIEW_TS_SOURCE_CCOUNT", 
                                                "range": null, 
                                                "title": "CPU cycle counter (CCOUNT)", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "!PM_ENABLE && <choice SYSVIEW_TS_SOURCE>", 
                                                "help": null, 
                                                "id": "SYSVIEW_TS_SOURCE_TIMER_00", 
                                                "name": "SYSVIEW_TS_SOURCE_TIMER_00", 
                                                "range": null, 
                                                "title": "Timer 0, Group 0", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "!PM_ENABLE && <choice SYSVIEW_TS_SOURCE>", 
                                                "help": null, 
                                                "id": "SYSVIEW_TS_SOURCE_TIMER_01", 
                                                "name": "SYSVIEW_TS_SOURCE_TIMER_01", 
                                                "range": null, 
                                                "title": "Timer 1, Group 0", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "!PM_ENABLE && <choice SYSVIEW_TS_SOURCE>", 
                                                "help": null, 
                                                "id": "SYSVIEW_TS_SOURCE_TIMER_10", 
                                                "name": "SYSVIEW_TS_SOURCE_TIMER_10", 
                                                "range": null, 
                                                "title": "Timer 0, Group 1", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "!PM_ENABLE && <choice SYSVIEW_TS_SOURCE>", 
                                                "help": null, 
                                                "id": "SYSVIEW_TS_SOURCE_TIMER_11", 
                                                "name": "SYSVIEW_TS_SOURCE_TIMER_11", 
                                                "range": null, 
                                                "title": "Timer 1, Group 1", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SYSVIEW_TS_SOURCE>", 
                                                "help": null, 
                                                "id": "SYSVIEW_TS_SOURCE_ESP_TIMER", 
                                                "name": "SYSVIEW_TS_SOURCE_ESP_TIMER", 
                                                "range": null, 
                                                "title": "esp_timer high resolution timer", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "SystemView needs to use a hardware timer as the source of timestamps\nwhen tracing. This option selects the timer for it.\n", 
                                        "id": "component-config-application-level-tracing-freertos-systemview-tracing-systemview-tracing-enable-timer-to-use-as-timestamp-source", 
                                        "name": "SYSVIEW_TS_SOURCE", 
                                        "title": "Timer to use as timestamp source", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Configures maximum supported tasks in sysview debug\n", 
                                        "id": "SYSVIEW_MAX_TASKS", 
                                        "name": "SYSVIEW_MAX_TASKS", 
                                        "range": null, 
                                        "title": "Maximum supported tasks", 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Trace Buffer Overflow\" event.\n", 
                                        "id": "SYSVIEW_EVT_OVERFLOW_ENABLE", 
                                        "name": "SYSVIEW_EVT_OVERFLOW_ENABLE", 
                                        "range": null, 
                                        "title": "Trace Buffer Overflow Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"ISR Enter\" event.\n", 
                                        "id": "SYSVIEW_EVT_ISR_ENTER_ENABLE", 
                                        "name": "SYSVIEW_EVT_ISR_ENTER_ENABLE", 
                                        "range": null, 
                                        "title": "ISR Enter Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"ISR Exit\" event.\n", 
                                        "id": "SYSVIEW_EVT_ISR_EXIT_ENABLE", 
                                        "name": "SYSVIEW_EVT_ISR_EXIT_ENABLE", 
                                        "range": null, 
                                        "title": "ISR Exit Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"ISR to Scheduler\" event.\n", 
                                        "id": "SYSVIEW_EVT_ISR_TO_SCHEDULER_ENABLE", 
                                        "name": "SYSVIEW_EVT_ISR_TO_SCHEDULER_ENABLE", 
                                        "range": null, 
                                        "title": "ISR Exit to Scheduler Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Task Start Execution\" event.\n", 
                                        "id": "SYSVIEW_EVT_TASK_START_EXEC_ENABLE", 
                                        "name": "SYSVIEW_EVT_TASK_START_EXEC_ENABLE", 
                                        "range": null, 
                                        "title": "Task Start Execution Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Task Stop Execution\" event.\n", 
                                        "id": "SYSVIEW_EVT_TASK_STOP_EXEC_ENABLE", 
                                        "name": "SYSVIEW_EVT_TASK_STOP_EXEC_ENABLE", 
                                        "range": null, 
                                        "title": "Task Stop Execution Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Task Start Ready State\" event.\n", 
                                        "id": "SYSVIEW_EVT_TASK_START_READY_ENABLE", 
                                        "name": "SYSVIEW_EVT_TASK_START_READY_ENABLE", 
                                        "range": null, 
                                        "title": "Task Start Ready State Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Task Stop Ready State\" event.\n", 
                                        "id": "SYSVIEW_EVT_TASK_STOP_READY_ENABLE", 
                                        "name": "SYSVIEW_EVT_TASK_STOP_READY_ENABLE", 
                                        "range": null, 
                                        "title": "Task Stop Ready State Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Task Create\" event.\n", 
                                        "id": "SYSVIEW_EVT_TASK_CREATE_ENABLE", 
                                        "name": "SYSVIEW_EVT_TASK_CREATE_ENABLE", 
                                        "range": null, 
                                        "title": "Task Create Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Task Terminate\" event.\n", 
                                        "id": "SYSVIEW_EVT_TASK_TERMINATE_ENABLE", 
                                        "name": "SYSVIEW_EVT_TASK_TERMINATE_ENABLE", 
                                        "range": null, 
                                        "title": "Task Terminate Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"System Idle\" event.\n", 
                                        "id": "SYSVIEW_EVT_IDLE_ENABLE", 
                                        "name": "SYSVIEW_EVT_IDLE_ENABLE", 
                                        "range": null, 
                                        "title": "System Idle Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Timer Enter\" event.\n", 
                                        "id": "SYSVIEW_EVT_TIMER_ENTER_ENABLE", 
                                        "name": "SYSVIEW_EVT_TIMER_ENTER_ENABLE", 
                                        "range": null, 
                                        "title": "Timer Enter Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Timer Exit\" event.\n", 
                                        "id": "SYSVIEW_EVT_TIMER_EXIT_ENABLE", 
                                        "name": "SYSVIEW_EVT_TIMER_EXIT_ENABLE", 
                                        "range": null, 
                                        "title": "Timer Exit Event", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "ESP32_APPTRACE_ENABLE && ESP32_APPTRACE_ENABLE", 
                                "help": "Enables supporrt for SEGGER SystemView tracing functionality.\n", 
                                "id": "SYSVIEW_ENABLE", 
                                "name": "SYSVIEW_ENABLE", 
                                "range": null, 
                                "title": "SystemView Tracing Enable", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "ESP32_APPTRACE_ENABLE", 
                        "id": "component-config-application-level-tracing-freertos-systemview-tracing", 
                        "title": "FreeRTOS SystemView Tracing", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_DEBUG_STUBS_ENABLE && ESP32_APPTRACE_ENABLE && !SYSVIEW_ENABLE", 
                        "help": "Enables support for GCOV data transfer to host.\n", 
                        "id": "ESP32_GCOV_ENABLE", 
                        "name": "ESP32_GCOV_ENABLE", 
                        "range": null, 
                        "title": "GCOV to Host Enable", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-application-level-tracing", 
                "title": "Application Level Tracing", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "ADC power can be controlled by the FSM instead of software. This allows the ADC to\nbe shut off when it is not working leading to lower power consumption. However\nusing the FSM control ADC power will increase the noise of ADC.\n", 
                                "id": "ADC_FORCE_XPD_FSM", 
                                "name": "ADC_FORCE_XPD_FSM", 
                                "range": null, 
                                "title": "Use the FSM to control ADC power", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "If this is set, the ADC2 driver will disables the output of the DAC corresponding to the specified\nchannel. This is the default value.\n\nFor testing, disable this option so that we can measure the output of DAC by internal ADC.\n", 
                                "id": "ADC2_DISABLE_DAC", 
                                "name": "ADC2_DISABLE_DAC", 
                                "range": null, 
                                "title": "Disable DAC when ADC2 is used on GPIO 25 and 26", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-driver-configurations-adc-configuration", 
                        "title": "ADC configuration", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Normally only the ISR of SPI master is placed in the IRAM, so that it\ncan work without the flash when interrupt is triggered.\nFor other functions, there's some possibility that the flash cache\nmiss when running inside and out of SPI functions, which may increase\nthe interval of SPI transactions.\nEnable this to put ``queue_trans``, ``get_trans_result`` and\n``transmit`` functions into the IRAM to avoid possible cache miss.\n\nDuring unit test, this is enabled to measure the ideal case of api.\n", 
                                "id": "SPI_MASTER_IN_IRAM", 
                                "name": "SPI_MASTER_IN_IRAM", 
                                "range": null, 
                                "title": "Place transmitting functions of SPI master into IRAM", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Place the SPI master ISR in to IRAM to avoid possible cache miss.\n\nAlso you can forbid the ISR being disabled during flash writing\naccess, by add ESP_INTR_FLAG_IRAM when initializing the driver.\n", 
                                "id": "SPI_MASTER_ISR_IN_IRAM", 
                                "name": "SPI_MASTER_ISR_IN_IRAM", 
                                "range": null, 
                                "title": "Place SPI master ISR function into IRAM", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Normally only the ISR of SPI slave is placed in the IRAM, so that it\ncan work without the flash when interrupt is triggered.\nFor other functions, there's some possibility that the flash cache\nmiss when running inside and out of SPI functions, which may increase\nthe interval of SPI transactions.\nEnable this to put ``queue_trans``, ``get_trans_result`` and\n``transmit`` functions into the IRAM to avoid possible cache miss.\n", 
                                "id": "SPI_SLAVE_IN_IRAM", 
                                "name": "SPI_SLAVE_IN_IRAM", 
                                "range": null, 
                                "title": "Place transmitting functions of SPI slave into IRAM", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Place the SPI slave ISR in to IRAM to avoid possible cache miss.\n\nAlso you can forbid the ISR being disabled during flash writing\naccess, by add ESP_INTR_FLAG_IRAM when initializing the driver.\n", 
                                "id": "SPI_SLAVE_ISR_IN_IRAM", 
                                "name": "SPI_SLAVE_ISR_IN_IRAM", 
                                "range": null, 
                                "title": "Place SPI slave ISR function into IRAM", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-driver-configurations-spi-configuration", 
                        "title": "SPI configuration", 
                        "type": "menu"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-driver-configurations", 
                "title": "Driver configurations", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "EFUSE_CUSTOM_TABLE", 
                                "help": "Name of the custom eFuse CSV filename. This path is evaluated\nrelative to the project root directory.\n", 
                                "id": "EFUSE_CUSTOM_TABLE_FILENAME", 
                                "name": "EFUSE_CUSTOM_TABLE_FILENAME", 
                                "range": null, 
                                "title": "Custom eFuse CSV file", 
                                "type": "string"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Allows to generate a structure for eFuse from the CSV file.\n", 
                        "id": "EFUSE_CUSTOM_TABLE", 
                        "name": "EFUSE_CUSTOM_TABLE", 
                        "range": null, 
                        "title": "Use custom eFuse table", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "All read and writes operations are redirected to RAM instead of eFuse registers.\nIf this option is set, all permanent changes (via eFuse) are disabled.\nLog output will state changes which would be applied, but they will not be.\n", 
                        "id": "EFUSE_VIRTUAL", 
                        "name": "EFUSE_VIRTUAL", 
                        "range": null, 
                        "title": "Simulate eFuse operations in RAM", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice EFUSE_CODE_SCHEME_SELECTOR>", 
                                "help": null, 
                                "id": "EFUSE_CODE_SCHEME_COMPAT_NONE", 
                                "name": "EFUSE_CODE_SCHEME_COMPAT_NONE", 
                                "range": null, 
                                "title": "None Only", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice EFUSE_CODE_SCHEME_SELECTOR>", 
                                "help": null, 
                                "id": "EFUSE_CODE_SCHEME_COMPAT_3_4", 
                                "name": "EFUSE_CODE_SCHEME_COMPAT_3_4", 
                                "range": null, 
                                "title": "3/4 and None", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice EFUSE_CODE_SCHEME_SELECTOR>", 
                                "help": null, 
                                "id": "EFUSE_CODE_SCHEME_COMPAT_REPEAT", 
                                "name": "EFUSE_CODE_SCHEME_COMPAT_REPEAT", 
                                "range": null, 
                                "title": "Repeat, 3/4 and None (common table does not support it)", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Selector eFuse code scheme.\n", 
                        "id": "component-config-efuse-bit-manager-coding-scheme-compatibility", 
                        "name": "EFUSE_CODE_SCHEME_SELECTOR", 
                        "title": "Coding Scheme Compatibility", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "EFUSE_MAX_BLK_LEN", 
                        "name": "EFUSE_MAX_BLK_LEN", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-efuse-bit-manager", 
                "title": "eFuse Bit Manager", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "IDF_TARGET_ESP32", 
                        "name": "IDF_TARGET_ESP32", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_REV_MIN>", 
                                "help": null, 
                                "id": "ESP32_REV_MIN_0", 
                                "name": "ESP32_REV_MIN_0", 
                                "range": null, 
                                "title": "Rev 0", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_REV_MIN>", 
                                "help": null, 
                                "id": "ESP32_REV_MIN_1", 
                                "name": "ESP32_REV_MIN_1", 
                                "range": null, 
                                "title": "Rev 1", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_REV_MIN>", 
                                "help": null, 
                                "id": "ESP32_REV_MIN_2", 
                                "name": "ESP32_REV_MIN_2", 
                                "range": null, 
                                "title": "Rev 2", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_REV_MIN>", 
                                "help": null, 
                                "id": "ESP32_REV_MIN_3", 
                                "name": "ESP32_REV_MIN_3", 
                                "range": null, 
                                "title": "Rev 3", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Minimum revision that ESP-IDF would support.\nESP-IDF performs different strategy on different esp32 revision.\n", 
                        "id": "component-config-esp32-specific-minimum-supported-esp32-revision", 
                        "name": "ESP32_REV_MIN", 
                        "title": "Minimum Supported ESP32 Revision", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP32_REV_MIN", 
                        "name": "ESP32_REV_MIN", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP32_DPORT_WORKAROUND", 
                        "name": "ESP32_DPORT_WORKAROUND", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_DEFAULT_CPU_FREQ_MHZ>", 
                                "help": null, 
                                "id": "ESP32_DEFAULT_CPU_FREQ_80", 
                                "name": "ESP32_DEFAULT_CPU_FREQ_80", 
                                "range": null, 
                                "title": "80 MHz", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_DEFAULT_CPU_FREQ_MHZ>", 
                                "help": null, 
                                "id": "ESP32_DEFAULT_CPU_FREQ_160", 
                                "name": "ESP32_DEFAULT_CPU_FREQ_160", 
                                "range": null, 
                                "title": "160 MHz", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_DEFAULT_CPU_FREQ_MHZ>", 
                                "help": null, 
                                "id": "ESP32_DEFAULT_CPU_FREQ_240", 
                                "name": "ESP32_DEFAULT_CPU_FREQ_240", 
                                "range": null, 
                                "title": "240 MHz", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "CPU frequency to be set on application startup.\n", 
                        "id": "component-config-esp32-specific-cpu-frequency", 
                        "name": "ESP32_DEFAULT_CPU_FREQ_MHZ", 
                        "title": "CPU frequency", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP32_DEFAULT_CPU_FREQ_MHZ", 
                        "name": "ESP32_DEFAULT_CPU_FREQ_MHZ", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "SPIRAM_BOOT_INIT && !SPIRAM_ALLOW_BSS_SEG_EXTERNAL_MEMORY && SPIRAM_SUPPORT", 
                                                "help": "Normally, if psram initialization is enabled during compile time but not found at runtime, it\nis seen as an error making the ESP32 panic. If this is enabled, the ESP32 will keep on\nrunning but will not add the (non-existing) RAM to any allocator.\n", 
                                                "id": "SPIRAM_IGNORE_NOTFOUND", 
                                                "name": "SPIRAM_IGNORE_NOTFOUND", 
                                                "range": null, 
                                                "title": "Ignore PSRAM when not found", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "SPIRAM_SUPPORT", 
                                        "help": "If this is enabled, the SPI RAM will be enabled during initial boot. Unless you\nhave specific requirements, you'll want to leave this enabled so memory allocated\nduring boot-up can also be placed in SPI RAM.\n", 
                                        "id": "SPIRAM_BOOT_INIT", 
                                        "name": "SPIRAM_BOOT_INIT", 
                                        "range": null, 
                                        "title": "Initialize SPI RAM when booting the ESP32", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_USE>", 
                                                "help": null, 
                                                "id": "SPIRAM_USE_MEMMAP", 
                                                "name": "SPIRAM_USE_MEMMAP", 
                                                "range": null, 
                                                "title": "Integrate RAM into ESP32 memory map", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_USE>", 
                                                "help": null, 
                                                "id": "SPIRAM_USE_CAPS_ALLOC", 
                                                "name": "SPIRAM_USE_CAPS_ALLOC", 
                                                "range": null, 
                                                "title": "Make RAM allocatable using heap_caps_malloc(..., MALLOC_CAP_SPIRAM)", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_USE>", 
                                                "help": null, 
                                                "id": "SPIRAM_USE_MALLOC", 
                                                "name": "SPIRAM_USE_MALLOC", 
                                                "range": null, 
                                                "title": "Make RAM allocatable using malloc() as well", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "SPIRAM_SUPPORT", 
                                        "help": "The SPI RAM can be accessed in multiple methods: by just having it available as an unmanaged\nmemory region in the ESP32 memory map, by integrating it in the ESP32s heap as 'special' memory\nneeding heap_caps_malloc to allocate, or by fully integrating it making malloc() also able to\nreturn SPI RAM pointers.\n", 
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-spi-ram-access-method", 
                                        "name": "SPIRAM_USE", 
                                        "title": "SPI RAM access method", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_TYPE>", 
                                                "help": null, 
                                                "id": "SPIRAM_TYPE_AUTO", 
                                                "name": "SPIRAM_TYPE_AUTO", 
                                                "range": null, 
                                                "title": "Auto-detect", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_TYPE>", 
                                                "help": null, 
                                                "id": "SPIRAM_TYPE_ESPPSRAM32", 
                                                "name": "SPIRAM_TYPE_ESPPSRAM32", 
                                                "range": null, 
                                                "title": "ESP-PSRAM32 or IS25WP032", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_TYPE>", 
                                                "help": null, 
                                                "id": "SPIRAM_TYPE_ESPPSRAM64", 
                                                "name": "SPIRAM_TYPE_ESPPSRAM64", 
                                                "range": null, 
                                                "title": "ESP-PSRAM64 or LY68L6400", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "SPIRAM_SUPPORT", 
                                        "help": null, 
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-type-of-spi-ram-chip-in-use", 
                                        "name": "SPIRAM_TYPE", 
                                        "title": "Type of SPI RAM chip in use", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SPIRAM_SUPPORT", 
                                        "help": null, 
                                        "id": "SPIRAM_SIZE", 
                                        "name": "SPIRAM_SIZE", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_SPEED>", 
                                                "help": null, 
                                                "id": "SPIRAM_SPEED_40M", 
                                                "name": "SPIRAM_SPEED_40M", 
                                                "range": null, 
                                                "title": "40MHz clock speed", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "ESPTOOLPY_FLASHFREQ_80M && <choice SPIRAM_SPEED>", 
                                                "help": null, 
                                                "id": "SPIRAM_SPEED_80M", 
                                                "name": "SPIRAM_SPEED_80M", 
                                                "range": null, 
                                                "title": "80MHz clock speed", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "SPIRAM_SUPPORT", 
                                        "help": "Select the speed for the SPI RAM chip.\nIf SPI RAM is enabled, we only support three combinations of SPI speed mode we supported now:\n\n1. Flash SPI running at 40Mhz and RAM SPI running at 40Mhz\n2. Flash SPI running at 80Mhz and RAM SPI running at 40Mhz\n3. Flash SPI running at 80Mhz and RAM SPI running at 80Mhz\n\nNote: If the third mode(80Mhz+80Mhz) is enabled for SPI RAM of type 32MBit, one of the HSPI/VSPI host\nwill be occupied by the system. Which SPI host to use can be selected by the config item\nSPIRAM_OCCUPY_SPI_HOST. Application code should never touch HSPI/VSPI hardware in this case. The\noption to select 80MHz will only be visible if the flash SPI speed is also 80MHz.\n(ESPTOOLPY_FLASHFREQ_80M is true)\n", 
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-set-ram-clock-speed", 
                                        "name": "SPIRAM_SPEED", 
                                        "title": "Set RAM clock speed", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SPIRAM_BOOT_INIT && SPIRAM_SUPPORT", 
                                        "help": "Runs a rudimentary memory test on initialization. Aborts when memory test fails. Disable this for\nslightly faster startop.\n", 
                                        "id": "SPIRAM_MEMTEST", 
                                        "name": "SPIRAM_MEMTEST", 
                                        "range": null, 
                                        "title": "Run memory test on SPI RAM initialization", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "(SPIRAM_USE_MEMMAP || SPIRAM_USE_CAPS_ALLOC || SPIRAM_USE_MALLOC) && ESP32_REV_MIN < 3 && SPIRAM_SUPPORT", 
                                        "help": "Revision 1 of the ESP32 has a bug that can cause a write to PSRAM not to take place in some situations\nwhen the cache line needs to be fetched from external RAM and an interrupt occurs. This enables a\nfix in the compiler (-mfix-esp32-psram-cache-issue) that makes sure the specific code that is\nvulnerable to this will not be emitted.\n\nThis will also not use any bits of newlib that are located in ROM, opting for a version that is\ncompiled with the workaround and located in flash instead.\n\nThe workaround is not required for ESP32 revision 3 and above.\n", 
                                        "id": "SPIRAM_CACHE_WORKAROUND", 
                                        "name": "SPIRAM_CACHE_WORKAROUND", 
                                        "range": null, 
                                        "title": "Enable workaround for bug in SPI RAM cache for Rev1 ESP32s", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "SPIRAM_BANKSWITCH_ENABLE && SPIRAM_SUPPORT", 
                                                "help": "Select the amount of banks reserved for bank switching. Note that the amount of RAM allocatable with\nmalloc/esp_heap_alloc_caps will decrease by 32K for each page reserved here.\n\nNote that this reservation is only actually done if your program actually uses the himem API. Without\nany himem calls, the reservation is not done and the original amount of memory will be available\nto malloc/esp_heap_alloc_caps.\n", 
                                                "id": "SPIRAM_BANKSWITCH_RESERVE", 
                                                "name": "SPIRAM_BANKSWITCH_RESERVE", 
                                                "range": null, 
                                                "title": "Amount of 32K pages to reserve for bank switching", 
                                                "type": "int"
                                            }
                                        ], 
                                        "depends_on": "(SPIRAM_USE_MEMMAP || SPIRAM_USE_CAPS_ALLOC || SPIRAM_USE_MALLOC) && SPIRAM_SUPPORT", 
                                        "help": "The ESP32 only supports 4MiB of external RAM in its address space. The hardware does support larger\nmemories, but these have to be bank-switched in and out of this address space. Enabling this allows you\nto reserve some MMU pages for this, which allows the use of the esp_himem api to manage these banks.\n\n#Note that this is limited to 62 banks, as esp_spiram_writeback_cache needs some kind of mapping of\n#some banks below that mark to work. We cannot at this moment guarantee this to exist when himem is\n#enabled.\n", 
                                        "id": "SPIRAM_BANKSWITCH_ENABLE", 
                                        "name": "SPIRAM_BANKSWITCH_ENABLE", 
                                        "range": null, 
                                        "title": "Enable bank switching for >4MiB external RAM", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SPIRAM_USE_MALLOC && SPIRAM_SUPPORT", 
                                        "help": "If malloc() is capable of also allocating SPI-connected ram, its allocation strategy will prefer to\nallocate chunks less than this size in internal memory, while allocations larger than this will be\ndone from external RAM. If allocation from the preferred region fails, an attempt is made to allocate\nfrom the non-preferred region instead, so malloc() will not suddenly fail when either internal or\nexternal memory is full.\n", 
                                        "id": "SPIRAM_MALLOC_ALWAYSINTERNAL", 
                                        "name": "SPIRAM_MALLOC_ALWAYSINTERNAL", 
                                        "range": null, 
                                        "title": "Maximum malloc() size, in bytes, to always put in internal memory", 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "(SPIRAM_USE_CAPS_ALLOC || SPIRAM_USE_MALLOC) && SPIRAM_SUPPORT", 
                                        "help": "Try to allocate memories of WiFi and LWIP in SPIRAM firstly. If failed, try to allocate internal\nmemory then.\n", 
                                        "id": "WIFI_LWIP_ALLOCATION_FROM_SPIRAM_FIRST", 
                                        "name": "WIFI_LWIP_ALLOCATION_FROM_SPIRAM_FIRST", 
                                        "range": null, 
                                        "title": "Try to allocate memories of WiFi and LWIP in SPIRAM firstly. If failed, allocate internal memory", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SPIRAM_USE_MALLOC && SPIRAM_SUPPORT", 
                                        "help": "Because the external/internal RAM allocation strategy is not always perfect, it sometimes may happen\nthat the internal memory is entirely filled up. This causes allocations that are specifically done in\ninternal memory, for example the stack for new tasks or memory to service DMA or have memory that's\nalso available when SPI cache is down, to fail. This option reserves a pool specifically for requests\nlike that; the memory in this pool is not given out when a normal malloc() is called.\n\nSet this to 0 to disable this feature.\n\nNote that because FreeRTOS stacks are forced to internal memory, they will also use this memory pool;\nbe sure to keep this in mind when adjusting this value.\n\nNote also that the DMA reserved pool may not be one single contiguous memory region, depending on the\nconfigured size and the static memory usage of the app.\n", 
                                        "id": "SPIRAM_MALLOC_RESERVE_INTERNAL", 
                                        "name": "SPIRAM_MALLOC_RESERVE_INTERNAL", 
                                        "range": null, 
                                        "title": "Reserve this amount of bytes for data that specifically needs to be in DMA or internal memory", 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SPIRAM_USE_MALLOC && SPIRAM_SUPPORT", 
                                        "help": "Because some bits of the ESP32 code environment cannot be recompiled with the cache workaround,\nnormally tasks cannot be safely run with their stack residing in external memory; for this reason\nxTaskCreate and friends always allocate stack in internal memory and xTaskCreateStatic will check if\nthe memory passed to it is in internal memory. If you have a task that needs a large amount of stack\nand does not call on ROM code in any way (no direct calls, but also no Bluetooth/WiFi), you can try to\ndisable this and use xTaskCreateStatic to create the tasks stack in external memory.\n", 
                                        "id": "SPIRAM_ALLOW_STACK_EXTERNAL_MEMORY", 
                                        "name": "SPIRAM_ALLOW_STACK_EXTERNAL_MEMORY", 
                                        "range": null, 
                                        "title": "Allow external memory as an argument to xTaskCreateStatic", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SPIRAM_SUPPORT && SPIRAM_SUPPORT", 
                                        "help": "If enabled the option,and add EXT_RAM_ATTR defined your variable,then your variable will be placed in\nPSRAM instead of internal memory, and placed most of variables of lwip,net802.11,pp,bluedroid library\nto external memory defaultly.\n", 
                                        "id": "SPIRAM_ALLOW_BSS_SEG_EXTERNAL_MEMORY", 
                                        "name": "SPIRAM_ALLOW_BSS_SEG_EXTERNAL_MEMORY", 
                                        "range": null, 
                                        "title": "Allow .bss segment placed in external memory", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_OCCUPY_SPI_HOST>", 
                                                "help": null, 
                                                "id": "SPIRAM_OCCUPY_HSPI_HOST", 
                                                "name": "SPIRAM_OCCUPY_HSPI_HOST", 
                                                "range": null, 
                                                "title": "HSPI host (SPI2)", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_OCCUPY_SPI_HOST>", 
                                                "help": null, 
                                                "id": "SPIRAM_OCCUPY_VSPI_HOST", 
                                                "name": "SPIRAM_OCCUPY_VSPI_HOST", 
                                                "range": null, 
                                                "title": "VSPI host (SPI3)", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_OCCUPY_SPI_HOST>", 
                                                "help": null, 
                                                "id": "SPIRAM_OCCUPY_NO_HOST", 
                                                "name": "SPIRAM_OCCUPY_NO_HOST", 
                                                "range": null, 
                                                "title": "Will not try to use any host, will abort if not able to use the PSRAM", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "SPIRAM_SPEED_80M && SPIRAM_SUPPORT", 
                                        "help": "When both flash and PSRAM is working under 80MHz, and the PSRAM is of type 32MBit, one of the HSPI/VSPI\nhost will be used to output the clock. Select which one to use here.\n", 
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-spi-host-to-use-for-32mbit-psram", 
                                        "name": "SPIRAM_OCCUPY_SPI_HOST", 
                                        "title": "SPI host to use for 32MBit PSRAM", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "SPIRAM_SUPPORT && SPIRAM_SUPPORT", 
                                                "help": "The PSRAM CLOCK IO can be any unused GPIO, user can config it based on hardware design. If user use\n1.8V flash and 1.8V psram, this value can only be one of 6, 7, 8, 9, 10, 11, 16, 17.\n", 
                                                "id": "D0WD_PSRAM_CLK_IO", 
                                                "name": "D0WD_PSRAM_CLK_IO", 
                                                "range": null, 
                                                "title": "PSRAM CLK IO number", 
                                                "type": "int"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "SPIRAM_SUPPORT && SPIRAM_SUPPORT", 
                                                "help": "The PSRAM CS IO can be any unused GPIO, user can config it based on hardware design. If user use\n1.8V flash and 1.8V psram, this value can only be one of 6, 7, 8, 9, 10, 11, 16, 17.\n", 
                                                "id": "D0WD_PSRAM_CS_IO", 
                                                "name": "D0WD_PSRAM_CS_IO", 
                                                "range": null, 
                                                "title": "PSRAM CS IO number", 
                                                "type": "int"
                                            }
                                        ], 
                                        "depends_on": "SPIRAM_SUPPORT", 
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-psram-clock-and-cs-io-for-esp32-dowd", 
                                        "title": "PSRAM clock and cs IO for ESP32-DOWD", 
                                        "type": "menu"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "SPIRAM_SUPPORT && SPIRAM_SUPPORT", 
                                                "help": "User can config it based on hardware design. For ESP32-D2WD chip, the psram can only be 1.8V psram,\nso this value can only be one of 6, 7, 8, 9, 10, 11, 16, 17.\n", 
                                                "id": "D2WD_PSRAM_CLK_IO", 
                                                "name": "D2WD_PSRAM_CLK_IO", 
                                                "range": null, 
                                                "title": "PSRAM CLK IO number", 
                                                "type": "int"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "SPIRAM_SUPPORT && SPIRAM_SUPPORT", 
                                                "help": "User can config it based on hardware design. For ESP32-D2WD chip, the psram can only be 1.8V psram,\nso this value can only be one of 6, 7, 8, 9, 10, 11, 16, 17.\n", 
                                                "id": "D2WD_PSRAM_CS_IO", 
                                                "name": "D2WD_PSRAM_CS_IO", 
                                                "range": null, 
                                                "title": "PSRAM CS IO number", 
                                                "type": "int"
                                            }
                                        ], 
                                        "depends_on": "SPIRAM_SUPPORT", 
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-psram-clock-and-cs-io-for-esp32-d2wd", 
                                        "title": "PSRAM clock and cs IO for ESP32-D2WD", 
                                        "type": "menu"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "SPIRAM_SUPPORT && SPIRAM_SUPPORT", 
                                                "help": "The PSRAM CS IO can be any unused GPIO, user can config it based on hardware design.\n\nFor ESP32-PICO chip, the psram share clock with flash, so user do not need to configure the clock\nIO.\nFor the reference hardware design, please refer to\nhttps://www.espressif.com/sites/default/files/documentation/esp32-pico-d4_datasheet_en.pdf\n", 
                                                "id": "PICO_PSRAM_CS_IO", 
                                                "name": "PICO_PSRAM_CS_IO", 
                                                "range": null, 
                                                "title": "PSRAM CS IO number", 
                                                "type": "int"
                                            }
                                        ], 
                                        "depends_on": "SPIRAM_SUPPORT", 
                                        "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config-psram-clock-and-cs-io-for-esp32-pico", 
                                        "title": "PSRAM clock and cs IO for ESP32-PICO", 
                                        "type": "menu"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "(FLASHMODE_DIO || FLASHMODE_DOUT) && SPIRAM_SUPPORT", 
                                        "help": "This value is ignored unless flash mode is set to DIO or DOUT and the SPI flash pins have been\noverriden by setting the eFuses SPI_PAD_CONFIG_xxx.\n\nWhen this is the case, the eFuse config only defines 3 of the 4 Quad I/O data pins. The WP pin (aka\nESP32 pin \"SD_DATA_3\" or SPI flash pin \"IO2\") is not specified in eFuse. And the psram only has QPI\nmode, the WP pin is necessary, so we need to configure this value here.\n\nWhen flash mode is set to QIO or QOUT, the PSRAM WP pin will be set as the value configured in\nbootloader.\n\nFor ESP32-PICO chip, the default value of this config should be 7.\n", 
                                        "id": "SPIRAM_SPIWP_SD3_PIN", 
                                        "name": "SPIRAM_SPIWP_SD3_PIN", 
                                        "range": null, 
                                        "title": "SPI PSRAM WP(SD3) Pin when customising pins via eFuse (read help)", 
                                        "type": "int"
                                    }
                                ], 
                                "depends_on": "SPIRAM_SUPPORT", 
                                "id": "component-config-esp32-specific-support-for-external-spi-connected-ram-spi-ram-config", 
                                "title": "SPI RAM config", 
                                "type": "menu"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This enables support for an external SPI RAM chip, connected in parallel with the\nmain SPI flash chip.\n", 
                        "id": "SPIRAM_SUPPORT", 
                        "name": "SPIRAM_SUPPORT", 
                        "range": null, 
                        "title": "Support for external, SPI-connected RAM", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "MEMMAP_TRACEMEM", 
                        "name": "MEMMAP_TRACEMEM", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "MEMMAP_TRACEMEM_TWOBANKS", 
                        "name": "MEMMAP_TRACEMEM_TWOBANKS", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP32_TRAX && !FREERTOS_UNICORE", 
                                "help": "The ESP32 contains a feature which allows you to trace the execution path the processor\nhas taken through the program. This is stored in a chunk of 32K (16K for single-processor)\nof memory that can't be used for general purposes anymore. Disable this if you do not know\nwhat this is.\n\n# Memory to reverse for trace, used in linker script\n", 
                                "id": "ESP32_TRAX_TWOBANKS", 
                                "name": "ESP32_TRAX_TWOBANKS", 
                                "range": null, 
                                "title": "Reserve memory for tracing both pro as well as app cpu execution", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "The ESP32 contains a feature which allows you to trace the execution path the processor\nhas taken through the program. This is stored in a chunk of 32K (16K for single-processor)\nof memory that can't be used for general purposes anymore. Disable this if you do not know\nwhat this is.\n", 
                        "id": "ESP32_TRAX", 
                        "name": "ESP32_TRAX", 
                        "range": null, 
                        "title": "Use TRAX tracing feature", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "TRACEMEM_RESERVE_DRAM", 
                        "name": "TRACEMEM_RESERVE_DRAM", 
                        "range": null, 
                        "title": null, 
                        "type": "hex"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice NUMBER_OF_UNIVERSAL_MAC_ADDRESS>", 
                                "help": null, 
                                "id": "TWO_UNIVERSAL_MAC_ADDRESS", 
                                "name": "TWO_UNIVERSAL_MAC_ADDRESS", 
                                "range": null, 
                                "title": "Two", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice NUMBER_OF_UNIVERSAL_MAC_ADDRESS>", 
                                "help": null, 
                                "id": "FOUR_UNIVERSAL_MAC_ADDRESS", 
                                "name": "FOUR_UNIVERSAL_MAC_ADDRESS", 
                                "range": null, 
                                "title": "Four", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Configure the number of universally administered (by IEEE) MAC addresses.\nDuring initialisation, MAC addresses for each network interface are generated or derived from a\nsingle base MAC address.\nIf the number of universal MAC addresses is four, all four interfaces (WiFi station, WiFi softap,\nBluetooth and Ethernet) receive a universally administered MAC address. These are generated\nsequentially by adding 0, 1, 2 and 3 (respectively) to the final octet of the base MAC address.\nIf the number of universal MAC addresses is two, only two interfaces (WiFi station and Bluetooth)\nreceive a universally administered MAC address. These are generated sequentially by adding 0\nand 1 (respectively) to the base MAC address. The remaining two interfaces (WiFi softap and Ethernet)\nreceive local MAC addresses. These are derived from the universal WiFi station and Bluetooth MAC\naddresses, respectively.\nWhen using the default (Espressif-assigned) base MAC address, either setting can be used. When using\na custom universal MAC address range, the correct setting will depend on the allocation of MAC\naddresses in this range (either 2 or 4 per device.)\n", 
                        "id": "component-config-esp32-specific-number-of-universally-administered-by-ieee-mac-address", 
                        "name": "NUMBER_OF_UNIVERSAL_MAC_ADDRESS", 
                        "title": "Number of universally administered (by IEEE) MAC address", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "NUMBER_OF_UNIVERSAL_MAC_ADDRESS", 
                        "name": "NUMBER_OF_UNIVERSAL_MAC_ADDRESS", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Config system event queue size in different application.\n", 
                        "id": "SYSTEM_EVENT_QUEUE_SIZE", 
                        "name": "SYSTEM_EVENT_QUEUE_SIZE", 
                        "range": null, 
                        "title": "System event queue size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Config system event task stack size in different application.\n", 
                        "id": "SYSTEM_EVENT_TASK_STACK_SIZE", 
                        "name": "SYSTEM_EVENT_TASK_STACK_SIZE", 
                        "range": null, 
                        "title": "Event loop task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Configure the \"main task\" stack size. This is the stack of the task\nwhich calls app_main(). If app_main() returns then this task is deleted\nand its stack memory is freed.\n", 
                        "id": "MAIN_TASK_STACK_SIZE", 
                        "name": "MAIN_TASK_STACK_SIZE", 
                        "range": null, 
                        "title": "Main task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Configure the IPC tasks stack size. One IPC task runs on each core\n(in dual core mode), and allows for cross-core function calls.\n\nSee IPC documentation for more details.\n\nThe default stack size should be enough for most common use cases.\nIt can be shrunk if you are sure that you do not use any custom\nIPC functionality.\n", 
                        "id": "IPC_TASK_STACK_SIZE", 
                        "name": "IPC_TASK_STACK_SIZE", 
                        "range": [
                            512, 
                            65536
                        ], 
                        "title": "Inter-Processor Call (IPC) task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Configure the stack size of esp_timer/ets_timer task. This task is used\nto dispatch callbacks of timers created using ets_timer and esp_timer\nAPIs. If you are seing stack overflow errors in timer task, increase\nthis value.\n\nNote that this is not the same as FreeRTOS timer task. To configure\nFreeRTOS timer task size, see \"FreeRTOS timer task stack size\" option\nin \"FreeRTOS\" menu.\n", 
                        "id": "TIMER_TASK_STACK_SIZE", 
                        "name": "TIMER_TASK_STACK_SIZE", 
                        "range": [
                            2048, 
                            65536
                        ], 
                        "title": "High-resolution timer task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice NEWLIB_STDOUT_LINE_ENDING>", 
                                "help": null, 
                                "id": "NEWLIB_STDOUT_LINE_ENDING_CRLF", 
                                "name": "NEWLIB_STDOUT_LINE_ENDING_CRLF", 
                                "range": null, 
                                "title": "CRLF", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice NEWLIB_STDOUT_LINE_ENDING>", 
                                "help": null, 
                                "id": "NEWLIB_STDOUT_LINE_ENDING_LF", 
                                "name": "NEWLIB_STDOUT_LINE_ENDING_LF", 
                                "range": null, 
                                "title": "LF", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice NEWLIB_STDOUT_LINE_ENDING>", 
                                "help": null, 
                                "id": "NEWLIB_STDOUT_LINE_ENDING_CR", 
                                "name": "NEWLIB_STDOUT_LINE_ENDING_CR", 
                                "range": null, 
                                "title": "CR", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This option allows configuring the desired line endings sent to UART\nwhen a newline ('\\n', LF) appears on stdout.\nThree options are possible:\n\nCRLF: whenever LF is encountered, prepend it with CR\n\nLF: no modification is applied, stdout is sent as is\n\nCR: each occurence of LF is replaced with CR\n\nThis option doesn't affect behavior of the UART driver (drivers/uart.h).\n", 
                        "id": "component-config-esp32-specific-line-ending-for-uart-output", 
                        "name": "NEWLIB_STDOUT_LINE_ENDING", 
                        "title": "Line ending for UART output", 
                        "type": "choice"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice NEWLIB_STDIN_LINE_ENDING>", 
                                "help": null, 
                                "id": "NEWLIB_STDIN_LINE_ENDING_CRLF", 
                                "name": "NEWLIB_STDIN_LINE_ENDING_CRLF", 
                                "range": null, 
                                "title": "CRLF", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice NEWLIB_STDIN_LINE_ENDING>", 
                                "help": null, 
                                "id": "NEWLIB_STDIN_LINE_ENDING_LF", 
                                "name": "NEWLIB_STDIN_LINE_ENDING_LF", 
                                "range": null, 
                                "title": "LF", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice NEWLIB_STDIN_LINE_ENDING>", 
                                "help": null, 
                                "id": "NEWLIB_STDIN_LINE_ENDING_CR", 
                                "name": "NEWLIB_STDIN_LINE_ENDING_CR", 
                                "range": null, 
                                "title": "CR", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This option allows configuring which input sequence on UART produces\na newline ('\\n', LF) on stdin.\nThree options are possible:\n\nCRLF: CRLF is converted to LF\n\nLF: no modification is applied, input is sent to stdin as is\n\nCR: each occurence of CR is replaced with LF\n\nThis option doesn't affect behavior of the UART driver (drivers/uart.h).\n", 
                        "id": "component-config-esp32-specific-line-ending-for-uart-input", 
                        "name": "NEWLIB_STDIN_LINE_ENDING", 
                        "title": "Line ending for UART input", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "ESP32 ROM contains parts of newlib C library, including printf/scanf family\nof functions. These functions have been compiled with so-called \"nano\"\nformatting option. This option doesn't support 64-bit integer formats and C99\nfeatures, such as positional arguments.\n\nFor more details about \"nano\" formatting option, please see newlib readme file,\nsearch for '--enable-newlib-nano-formatted-io':\nhttps://sourceware.org/newlib/README\n\nIf this option is enabled, build system will use functions available in\nROM, reducing the application binary size. Functions available in ROM run\nfaster than functions which run from flash. Functions available in ROM can\nalso run when flash instruction cache is disabled.\n\nIf you need 64-bit integer formatting support or C99 features, keep this\noption disabled.\n", 
                        "id": "NEWLIB_NANO_FORMAT", 
                        "name": "NEWLIB_NANO_FORMAT", 
                        "range": null, 
                        "title": "Enable 'nano' formatting options for printf/scanf family", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice CONSOLE_UART>", 
                                "help": null, 
                                "id": "CONSOLE_UART_DEFAULT", 
                                "name": "CONSOLE_UART_DEFAULT", 
                                "range": null, 
                                "title": "Default: UART0, TX=GPIO1, RX=GPIO3", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice CONSOLE_UART>", 
                                "help": null, 
                                "id": "CONSOLE_UART_CUSTOM", 
                                "name": "CONSOLE_UART_CUSTOM", 
                                "range": null, 
                                "title": "Custom", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice CONSOLE_UART>", 
                                "help": null, 
                                "id": "CONSOLE_UART_NONE", 
                                "name": "CONSOLE_UART_NONE", 
                                "range": null, 
                                "title": "None", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select whether to use UART for console output (through stdout and stderr).\n\n- Default is to use UART0 on pins GPIO1(TX) and GPIO3(RX).\n- If \"Custom\" is selected, UART0 or UART1 can be chosen,\n  and any pins can be selected.\n- If \"None\" is selected, there will be no console output on any UART, except\n  for initial output from ROM bootloader. This output can be further suppressed by\n  bootstrapping GPIO13 pin to low logic level.\n", 
                        "id": "component-config-esp32-specific-uart-for-console-output", 
                        "name": "CONSOLE_UART", 
                        "title": "UART for console output", 
                        "type": "choice"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice CONSOLE_UART_NUM>", 
                                "help": null, 
                                "id": "CONSOLE_UART_CUSTOM_NUM_0", 
                                "name": "CONSOLE_UART_CUSTOM_NUM_0", 
                                "range": null, 
                                "title": "UART0", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice CONSOLE_UART_NUM>", 
                                "help": null, 
                                "id": "CONSOLE_UART_CUSTOM_NUM_1", 
                                "name": "CONSOLE_UART_CUSTOM_NUM_1", 
                                "range": null, 
                                "title": "UART1", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "CONSOLE_UART_CUSTOM", 
                        "help": "Due of a ROM bug, UART2 is not supported for console output\nvia ets_printf.\n", 
                        "id": "component-config-esp32-specific-uart-peripheral-to-use-for-console-output-0-1-", 
                        "name": "CONSOLE_UART_NUM", 
                        "title": "UART peripheral to use for console output (0-1)", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "CONSOLE_UART_NUM", 
                        "name": "CONSOLE_UART_NUM", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "CONSOLE_UART_CUSTOM", 
                        "help": null, 
                        "id": "CONSOLE_UART_TX_GPIO", 
                        "name": "CONSOLE_UART_TX_GPIO", 
                        "range": null, 
                        "title": "UART TX on GPIO#", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "CONSOLE_UART_CUSTOM", 
                        "help": null, 
                        "id": "CONSOLE_UART_RX_GPIO", 
                        "name": "CONSOLE_UART_RX_GPIO", 
                        "range": null, 
                        "title": "UART RX on GPIO#", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!CONSOLE_UART_NONE", 
                        "help": null, 
                        "id": "CONSOLE_UART_BAUDRATE", 
                        "name": "CONSOLE_UART_BAUDRATE", 
                        "range": [
                            1200, 
                            4000000
                        ], 
                        "title": "UART console baud rate", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Bytes of memory to reserve for ULP coprocessor firmware & data.\n\nData is reserved at the beginning of RTC slow memory.\n", 
                                "id": "ULP_COPROC_RESERVE_MEM", 
                                "name": "ULP_COPROC_RESERVE_MEM", 
                                "range": [
                                    0, 
                                    0
                                ], 
                                "title": "RTC slow memory reserved for coprocessor", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Set to 'y' if you plan to load a firmware for the coprocessor.\n\nIf this option is enabled, further coprocessor configuration will appear in the Components menu.\n", 
                        "id": "ULP_COPROC_ENABLED", 
                        "name": "ULP_COPROC_ENABLED", 
                        "range": null, 
                        "title": "Enable Ultra Low Power (ULP) Coprocessor", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_PANIC>", 
                                "help": "Outputs the relevant registers over the serial port and halt the\nprocessor. Needs a manual reset to restart.\n", 
                                "id": "ESP32_PANIC_PRINT_HALT", 
                                "name": "ESP32_PANIC_PRINT_HALT", 
                                "range": null, 
                                "title": "Print registers and halt", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_PANIC>", 
                                "help": "Outputs the relevant registers over the serial port and immediately\nreset the processor.\n", 
                                "id": "ESP32_PANIC_PRINT_REBOOT", 
                                "name": "ESP32_PANIC_PRINT_REBOOT", 
                                "range": null, 
                                "title": "Print registers and reboot", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_PANIC>", 
                                "help": "Just resets the processor without outputting anything\n", 
                                "id": "ESP32_PANIC_SILENT_REBOOT", 
                                "name": "ESP32_PANIC_SILENT_REBOOT", 
                                "range": null, 
                                "title": "Silent reboot", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_PANIC>", 
                                "help": "Invoke gdbstub on the serial port, allowing for gdb to attach to it to do a postmortem\nof the crash.\n", 
                                "id": "ESP32_PANIC_GDBSTUB", 
                                "name": "ESP32_PANIC_GDBSTUB", 
                                "range": null, 
                                "title": "Invoke GDBStub", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If FreeRTOS detects unexpected behaviour or an unhandled exception, the panic handler is\ninvoked. Configure the panic handlers action here.\n", 
                        "id": "component-config-esp32-specific-panic-handler-behaviour", 
                        "name": "ESP32_PANIC", 
                        "title": "Panic handler behaviour", 
                        "type": "choice"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "GDBSTUB_SUPPORT_TASKS", 
                                "help": "Set the number of tasks which GDB Stub will support.\n", 
                                "id": "GDBSTUB_MAX_TASKS", 
                                "name": "GDBSTUB_MAX_TASKS", 
                                "range": null, 
                                "title": "GDBStub: maximum number of tasks supported", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": "ESP32_PANIC_GDBSTUB", 
                        "help": "If enabled, GDBStub can supply the list of FreeRTOS tasks to GDB.\nThread list can be queried from GDB using 'info threads' command.\nNote that if GDB task lists were corrupted, this feature may not work.\nIf GDBStub fails, try disabling this feature.\n", 
                        "id": "GDBSTUB_SUPPORT_TASKS", 
                        "name": "GDBSTUB_SUPPORT_TASKS", 
                        "range": null, 
                        "title": "GDBStub: enable listing FreeRTOS tasks", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The FreeRTOS panic and unhandled exception handers can detect a JTAG OCD debugger and\ninstead of panicking, have the debugger stop on the offending instruction.\n", 
                        "id": "ESP32_DEBUG_OCDAWARE", 
                        "name": "ESP32_DEBUG_OCDAWARE", 
                        "range": null, 
                        "title": "Make exception and panic handlers JTAG/OCD aware", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!ESP32_TRAX", 
                        "help": "Debug stubs are used by OpenOCD to execute pre-compiled onboard code which does some useful debugging,\ne.g. GCOV data dump.\n", 
                        "id": "ESP32_DEBUG_STUBS_ENABLE", 
                        "name": "ESP32_DEBUG_STUBS_ENABLE", 
                        "range": null, 
                        "title": "OpenOCD debug stubs", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "INT_WDT", 
                                "help": "The timeout of the watchdog, in miliseconds. Make this higher than the FreeRTOS tick rate.\n", 
                                "id": "INT_WDT_TIMEOUT_MS", 
                                "name": "INT_WDT_TIMEOUT_MS", 
                                "range": [
                                    10, 
                                    10000
                                ], 
                                "title": "Interrupt watchdog timeout (ms)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "INT_WDT && !FREERTOS_UNICORE", 
                                "help": "Also detect if interrupts on CPU 1 are disabled for too long.\n", 
                                "id": "INT_WDT_CHECK_CPU1", 
                                "name": "INT_WDT_CHECK_CPU1", 
                                "range": null, 
                                "title": "Also watch CPU1 tick interrupt", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This watchdog timer can detect if the FreeRTOS tick interrupt has not been called for a certain time,\neither because a task turned off interrupts and did not turn them on for a long time, or because an\ninterrupt handler did not return. It will try to invoke the panic handler first and failing that\nreset the SoC.\n", 
                        "id": "INT_WDT", 
                        "name": "INT_WDT", 
                        "range": null, 
                        "title": "Interrupt watchdog", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "TASK_WDT", 
                                "help": "If this option is enabled, the Task Watchdog Timer will be configured to\ntrigger the panic handler when it times out. This can also be configured\nat run time (see Task Watchdog Timer API Reference)\n", 
                                "id": "TASK_WDT_PANIC", 
                                "name": "TASK_WDT_PANIC", 
                                "range": null, 
                                "title": "Invoke panic handler on Task Watchdog timeout", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "TASK_WDT", 
                                "help": "Timeout period configuration for the Task Watchdog Timer in seconds.\nThis is also configurable at run time (see Task Watchdog Timer API Reference)\n", 
                                "id": "TASK_WDT_TIMEOUT_S", 
                                "name": "TASK_WDT_TIMEOUT_S", 
                                "range": null, 
                                "title": "Task Watchdog timeout period (seconds)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "TASK_WDT", 
                                "help": "If this option is enabled, the Task Watchdog Timer will watch the CPU0\nIdle Task. Having the Task Watchdog watch the Idle Task allows for detection\nof CPU starvation as the Idle Task not being called is usually a symptom of\nCPU starvation. Starvation of the Idle Task is detrimental as FreeRTOS household\ntasks depend on the Idle Task getting some runtime every now and then.\n", 
                                "id": "TASK_WDT_CHECK_IDLE_TASK_CPU0", 
                                "name": "TASK_WDT_CHECK_IDLE_TASK_CPU0", 
                                "range": null, 
                                "title": "Watch CPU0 Idle Task", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "TASK_WDT && !FREERTOS_UNICORE", 
                                "help": "If this option is enabled, the Task Wtachdog Timer will wach the CPU1\nIdle Task.\n", 
                                "id": "TASK_WDT_CHECK_IDLE_TASK_CPU1", 
                                "name": "TASK_WDT_CHECK_IDLE_TASK_CPU1", 
                                "range": null, 
                                "title": "Watch CPU1 Idle Task", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "The Task Watchdog Timer can be used to make sure individual tasks are still\nrunning. Enabling this option will cause the Task Watchdog Timer to be\ninitialized automatically at startup. The Task Watchdog timer can be\ninitialized after startup as well (see Task Watchdog Timer API Reference)\n", 
                        "id": "TASK_WDT", 
                        "name": "TASK_WDT", 
                        "range": null, 
                        "title": "Initialize Task Watchdog Timer on startup", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "id": "BROWNOUT_DET_LVL_SEL_0", 
                                        "name": "BROWNOUT_DET_LVL_SEL_0", 
                                        "range": null, 
                                        "title": "2.43V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "id": "BROWNOUT_DET_LVL_SEL_1", 
                                        "name": "BROWNOUT_DET_LVL_SEL_1", 
                                        "range": null, 
                                        "title": "2.48V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "id": "BROWNOUT_DET_LVL_SEL_2", 
                                        "name": "BROWNOUT_DET_LVL_SEL_2", 
                                        "range": null, 
                                        "title": "2.58V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "id": "BROWNOUT_DET_LVL_SEL_3", 
                                        "name": "BROWNOUT_DET_LVL_SEL_3", 
                                        "range": null, 
                                        "title": "2.62V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "id": "BROWNOUT_DET_LVL_SEL_4", 
                                        "name": "BROWNOUT_DET_LVL_SEL_4", 
                                        "range": null, 
                                        "title": "2.67V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "id": "BROWNOUT_DET_LVL_SEL_5", 
                                        "name": "BROWNOUT_DET_LVL_SEL_5", 
                                        "range": null, 
                                        "title": "2.70V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "id": "BROWNOUT_DET_LVL_SEL_6", 
                                        "name": "BROWNOUT_DET_LVL_SEL_6", 
                                        "range": null, 
                                        "title": "2.77V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "id": "BROWNOUT_DET_LVL_SEL_7", 
                                        "name": "BROWNOUT_DET_LVL_SEL_7", 
                                        "range": null, 
                                        "title": "2.80V +/- 0.05", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BROWNOUT_DET", 
                                "help": "The brownout detector will reset the chip when the supply voltage is approximately\nbelow this level. Note that there may be some variation of brownout voltage level\nbetween each ESP32 chip.\n\n#The voltage levels here are estimates, more work needs to be done to figure out the exact voltages\n#of the brownout threshold levels.\n", 
                                "id": "component-config-esp32-specific-hardware-brownout-detect-reset-brownout-voltage-level", 
                                "name": "BROWNOUT_DET_LVL_SEL", 
                                "title": "Brownout voltage level", 
                                "type": "choice"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "The ESP32 has a built-in brownout detector which can detect if the voltage is lower than\na specific value. If this happens, it will reset the chip in order to prevent unintended\nbehaviour.\n", 
                        "id": "BROWNOUT_DET", 
                        "name": "BROWNOUT_DET", 
                        "range": null, 
                        "title": "Hardware brownout detect & reset", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "BROWNOUT_DET_LVL", 
                        "name": "BROWNOUT_DET_LVL", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BROWNOUT_DET", 
                        "help": "When brownout reset occurs, reduce PHY TX power to keep the code running\n\n# Note about the use of \"FRC1\" name: currently FRC1 timer is not used for\n# high resolution timekeeping anymore. Instead the esp_timer API, implemented\n# using FRC2 timer, is used.\n# FRC1 name in the option name is kept for compatibility.\n", 
                        "id": "REDUCE_PHY_TX_POWER", 
                        "name": "REDUCE_PHY_TX_POWER", 
                        "range": null, 
                        "title": "Reduce PHY TX power when brownout reset", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_TIME_SYSCALL>", 
                                "help": null, 
                                "id": "ESP32_TIME_SYSCALL_USE_RTC_FRC1", 
                                "name": "ESP32_TIME_SYSCALL_USE_RTC_FRC1", 
                                "range": null, 
                                "title": "RTC and high-resolution timer", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_TIME_SYSCALL>", 
                                "help": null, 
                                "id": "ESP32_TIME_SYSCALL_USE_RTC", 
                                "name": "ESP32_TIME_SYSCALL_USE_RTC", 
                                "range": null, 
                                "title": "RTC", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_TIME_SYSCALL>", 
                                "help": null, 
                                "id": "ESP32_TIME_SYSCALL_USE_FRC1", 
                                "name": "ESP32_TIME_SYSCALL_USE_FRC1", 
                                "range": null, 
                                "title": "High-resolution timer", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_TIME_SYSCALL>", 
                                "help": null, 
                                "id": "ESP32_TIME_SYSCALL_USE_NONE", 
                                "name": "ESP32_TIME_SYSCALL_USE_NONE", 
                                "range": null, 
                                "title": "None", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This setting defines which hardware timers are used to\nimplement 'gettimeofday' and 'time' functions in C library.\n\n- If both high-resolution and RTC timers are used, timekeeping will\n  continue in deep sleep. Time will be reported at 1 microsecond\n  resolution. This is the default, and the recommended option.\n- If only high-resolution timer is used, gettimeofday will\n  provide time at microsecond resolution.\n  Time will not be preserved when going into deep sleep mode.\n- If only RTC timer is used, timekeeping will continue in\n  deep sleep, but time will be measured at 6.(6) microsecond\n  resolution. Also the gettimeofday function itself may take\n  longer to run.\n- If no timers are used, gettimeofday and time functions\n  return -1 and set errno to ENOSYS.\n- When RTC is used for timekeeping, two RTC_STORE registers are\n  used to keep time in deep sleep mode.\n", 
                        "id": "component-config-esp32-specific-timers-used-for-gettimeofday-function", 
                        "name": "ESP32_TIME_SYSCALL", 
                        "title": "Timers used for gettimeofday function", 
                        "type": "choice"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_RTC_CLOCK_SOURCE>", 
                                "help": null, 
                                "id": "ESP32_RTC_CLOCK_SOURCE_INTERNAL_RC", 
                                "name": "ESP32_RTC_CLOCK_SOURCE_INTERNAL_RC", 
                                "range": null, 
                                "title": "Internal 150kHz RC oscillator", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_RTC_CLOCK_SOURCE>", 
                                "help": null, 
                                "id": "ESP32_RTC_CLOCK_SOURCE_EXTERNAL_CRYSTAL", 
                                "name": "ESP32_RTC_CLOCK_SOURCE_EXTERNAL_CRYSTAL", 
                                "range": null, 
                                "title": "External 32kHz crystal", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_RTC_CLOCK_SOURCE>", 
                                "help": null, 
                                "id": "ESP32_RTC_CLOCK_SOURCE_EXTERNAL_OSC", 
                                "name": "ESP32_RTC_CLOCK_SOURCE_EXTERNAL_OSC", 
                                "range": null, 
                                "title": "External 32kHz oscillator at 32K_XP pin", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_RTC_CLOCK_SOURCE>", 
                                "help": null, 
                                "id": "ESP32_RTC_CLOCK_SOURCE_INTERNAL_8MD256", 
                                "name": "ESP32_RTC_CLOCK_SOURCE_INTERNAL_8MD256", 
                                "range": null, 
                                "title": "Internal 8.5MHz oscillator, divided by 256 (~33kHz)", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Choose which clock is used as RTC clock source.\n\n- \"Internal 150kHz oscillator\" option provides lowest deep sleep current\n  consumption, and does not require extra external components. However\n  frequency stability with respect to temperature is poor, so time may\n  drift in deep/light sleep modes.\n- \"External 32kHz crystal\" provides better frequency stability, at the\n  expense of slightly higher (1uA) deep sleep current consumption.\n- \"External 32kHz oscillator\" allows using 32kHz clock generated by an\n  external circuit. In this case, external clock signal must be connected\n  to 32K_XP pin. Amplitude should be <1.2V in case of sine wave signal,\n  and <1V in case of square wave signal. Common mode voltage should be\n  0.1 < Vcm < 0.5Vamp, where Vamp is the signal amplitude.\n  Additionally, 1nF capacitor must be connected between 32K_XN pin and\n  ground. 32K_XN pin can not be used as a GPIO in this case.\n- \"Internal 8.5MHz oscillator divided by 256\" option results in higher\n  deep sleep current (by 5uA) but has better frequency stability than\n  the internal 150kHz oscillator. It does not require external components.\n", 
                        "id": "component-config-esp32-specific-rtc-clock-source", 
                        "name": "ESP32_RTC_CLOCK_SOURCE", 
                        "title": "RTC clock source", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_RTC_CLOCK_SOURCE_EXTERNAL_CRYSTAL", 
                        "help": "Choose which additional current is used for rtc external crystal.\n\n- With some 32kHz crystal configurations, the X32N and X32P pins may not\n  have enough drive strength to keep the crystal oscillating during deep sleep.\n  If this option is enabled, additional current from touchpad 9 is provided\n  internally to drive the 32kHz crystal. If this option is enabled, deep sleep current\n  is slightly higher (4-5uA) and the touchpad and ULP wakeup sources are not available.\n", 
                        "id": "ESP32_RTC_EXTERNAL_CRYSTAL_ADDITIONAL_CURRENT", 
                        "name": "ESP32_RTC_EXTERNAL_CRYSTAL_ADDITIONAL_CURRENT", 
                        "range": null, 
                        "title": "Additional current for external 32kHz crystal", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "When the startup code initializes RTC_SLOW_CLK, it can perform\ncalibration by comparing the RTC_SLOW_CLK frequency with main XTAL\nfrequency. This option sets the number of RTC_SLOW_CLK cycles measured\nby the calibration routine. Higher numbers increase calibration\nprecision, which may be important for applications which spend a lot of\ntime in deep sleep. Lower numbers reduce startup time.\n\nWhen this option is set to 0, clock calibration will not be performed at\nstartup, and approximate clock frequencies will be assumed:\n\n- 150000 Hz if internal RC oscillator is used as clock source. For this use value 1024.\n- 32768 Hz if the 32k crystal oscillator is used. For this use value 3000 or more.\n  In case more value will help improve the definition of the launch of the crystal.\n  If the crystal could not start, it will be switched to internal RC.\n", 
                        "id": "ESP32_RTC_CLK_CAL_CYCLES", 
                        "name": "ESP32_RTC_CLK_CAL_CYCLES", 
                        "range": [
                            0, 
                            32766
                        ], 
                        "title": "Number of cycles for RTC_SLOW_CLK calibration", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_RTC_CLOCK_SOURCE_EXTERNAL_CRYSTAL", 
                        "help": "To reduce the startup time of an external RTC crystal,\nwe bootstrap it with a 32kHz square wave for a fixed number of cycles.\nSetting 0 will disable bootstrapping (if disabled, the crystal may take\nlonger to start up or fail to oscillate under some conditions).\n\nIf this value is too high, a faulty crystal may initially start and then fail.\nIf this value is too low, an otherwise good crystal may not start.\n\nTo accurately determine if the crystal has started,\nset a larger \"Number of cycles for RTC_SLOW_CLK calibration\" (about 3000).\n", 
                        "id": "ESP32_RTC_XTAL_BOOTSTRAP_CYCLES", 
                        "name": "ESP32_RTC_XTAL_BOOTSTRAP_CYCLES", 
                        "range": null, 
                        "title": "Bootstrap cycles for external 32kHz crystal", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "When ESP32 exits deep sleep, the CPU and the flash chip are powered on\nat the same time. CPU will run deep sleep stub first, and then\nproceed to load code from flash. Some flash chips need sufficient\ntime to pass between power on and first read operation. By default,\nwithout any extra delay, this time is approximately 900us, although\nsome flash chip types need more than that.\n\nBy default extra delay is set to 2000us. When optimizing startup time\nfor applications which require it, this value may be reduced.\n\nIf you are seeing \"flash read err, 1000\" message printed to the\nconsole after deep sleep reset, try increasing this value.\n", 
                        "id": "ESP32_DEEP_SLEEP_WAKEUP_DELAY", 
                        "name": "ESP32_DEEP_SLEEP_WAKEUP_DELAY", 
                        "range": [
                            0, 
                            5000
                        ], 
                        "title": "Extra delay in deep sleep wake stub (in us)", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_XTAL_FREQ_SEL>", 
                                "help": null, 
                                "id": "ESP32_XTAL_FREQ_40", 
                                "name": "ESP32_XTAL_FREQ_40", 
                                "range": null, 
                                "title": "40 MHz", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_XTAL_FREQ_SEL>", 
                                "help": null, 
                                "id": "ESP32_XTAL_FREQ_26", 
                                "name": "ESP32_XTAL_FREQ_26", 
                                "range": null, 
                                "title": "26 MHz", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_XTAL_FREQ_SEL>", 
                                "help": null, 
                                "id": "ESP32_XTAL_FREQ_AUTO", 
                                "name": "ESP32_XTAL_FREQ_AUTO", 
                                "range": null, 
                                "title": "Autodetect", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "ESP32 currently supports the following XTAL frequencies:\n\n- 26 MHz\n- 40 MHz\n\nStartup code can automatically estimate XTAL frequency. This feature\nuses the internal 8MHz oscillator as a reference. Because the internal\noscillator frequency is temperature dependent, it is not recommended\nto use automatic XTAL frequency detection in applications which need\nto work at high ambient temperatures and use high-temperature\nqualified chips and modules.\n", 
                        "id": "component-config-esp32-specific-main-xtal-frequency", 
                        "name": "ESP32_XTAL_FREQ_SEL", 
                        "title": "Main XTAL frequency", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP32_XTAL_FREQ", 
                        "name": "ESP32_XTAL_FREQ", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If set, the first time the app boots it will disable the BASIC ROM Console\npermanently (by burning an eFuse).\n\nOtherwise, the BASIC ROM Console starts on reset if no valid bootloader is\nread from the flash.\n\n(Enabling secure boot also disables the BASIC ROM Console by default.)\n", 
                        "id": "DISABLE_BASIC_ROM_CONSOLE", 
                        "name": "DISABLE_BASIC_ROM_CONSOLE", 
                        "range": null, 
                        "title": "Permanently disable BASIC ROM Console", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!BT_ENABLED", 
                        "help": "If enabled, this disables the linking of binary libraries in the application build. Note\nthat after enabling this Wi-Fi/Bluetooth will not work.\n", 
                        "id": "NO_BLOBS", 
                        "name": "NO_BLOBS", 
                        "range": null, 
                        "title": "No Binary Blobs", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If enabled, esp_timer_dump will dump information such as number of times\nthe timer was started, number of times the timer has triggered, and the\ntotal time it took for the callback to run.\nThis option has some effect on timer performance and the amount of memory\nused for timer storage, and should only be used for debugging/testing\npurposes.\n", 
                        "id": "ESP_TIMER_PROFILING", 
                        "name": "ESP_TIMER_PROFILING", 
                        "range": null, 
                        "title": "Enable esp_timer profiling features", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Bootloaders before IDF v2.1 did less initialisation of the\nsystem clock. This setting needs to be enabled to build an app\nwhich can be booted by these older bootloaders.\n\nIf this setting is enabled, the app can be booted by any bootloader\nfrom IDF v1.0 up to the current version.\n\nIf this setting is disabled, the app can only be booted by bootloaders\nfrom IDF v2.1 or newer.\n\nEnabling this setting adds approximately 1KB to the app's IRAM usage.\n", 
                        "id": "COMPATIBLE_PRE_V2_1_BOOTLOADERS", 
                        "name": "COMPATIBLE_PRE_V2_1_BOOTLOADERS", 
                        "range": null, 
                        "title": "App compatible with bootloaders before IDF v2.1", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Functions esp_err_to_name() and esp_err_to_name_r() return string\nrepresentations of error codes from a pre-generated lookup table.\nThis option can be used to turn off the use of the look-up table in\norder to save memory but this comes at the price of sacrificing\ndistinguishable (meaningful) output string representations.\n", 
                        "id": "ESP_ERR_TO_NAME_LOOKUP", 
                        "name": "ESP_ERR_TO_NAME_LOOKUP", 
                        "range": null, 
                        "title": "Enable lookup of error code strings", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "FREERTOS_UNICORE", 
                        "help": "This option allows to place .rtc_data and .rtc_rodata sections into\nRTC fast memory segment to free the slow memory region for ULP programs.\nThis option depends on the CONFIG_FREERTOS_UNICORE option because RTC fast memory\ncan be accessed only by PRO_CPU core.\n", 
                        "id": "ESP32_RTCDATA_IN_FAST_MEM", 
                        "name": "ESP32_RTCDATA_IN_FAST_MEM", 
                        "range": null, 
                        "title": "Place RTC_DATA_ATTR and RTC_RODATA_ATTR variables into RTC fast memory segment", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "To prevent interrupting DPORT workarounds,\nneed to disable interrupt with a maximum used level in the system.\n", 
                        "id": "ESP32_DPORT_DIS_INTERRUPT_LVL", 
                        "name": "ESP32_DPORT_DIS_INTERRUPT_LVL", 
                        "range": null, 
                        "title": "Disable the interrupt level for the DPORT workarounds", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-esp32-specific", 
                "title": "ESP32-specific", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "BT_ENABLED", 
                        "help": "If enabled, WiFi & Bluetooth coexistence is controlled by software rather than hardware.\nRecommended for heavy traffic scenarios. Both coexistence configuration options are\nautomatically managed, no user intervention is required.\nIf only Bluetooth is used, it is recommended to disable this option to reduce binary file\nsize.\n", 
                        "id": "SW_COEXIST_ENABLE", 
                        "name": "SW_COEXIST_ENABLE", 
                        "range": null, 
                        "title": "Software controls WiFi/Bluetooth coexistence", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set the number of WiFi static RX buffers. Each buffer takes approximately 1.6KB of RAM.\nThe static rx buffers are allocated when esp_wifi_init is called, they are not freed\nuntil esp_wifi_deinit is called.\n\nWiFi hardware use these buffers to receive all 802.11 frames.\nA higher number may allow higher throughput but increases memory use. If ESP32_WIFI_AMPDU_RX_ENABLED\nis enabled, this value is recommended to set equal or bigger than ESP32_WIFI_RX_BA_WIN in order to\nachieve better throughput and compatibility with both stations and APs.\n", 
                        "id": "ESP32_WIFI_STATIC_RX_BUFFER_NUM", 
                        "name": "ESP32_WIFI_STATIC_RX_BUFFER_NUM", 
                        "range": [
                            2, 
                            25
                        ], 
                        "title": "Max number of WiFi static RX buffers", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set the number of WiFi dynamic RX buffers, 0 means unlimited RX buffers will be allocated\n(provided sufficient free RAM). The size of each dynamic RX buffer depends on the size of\nthe received data frame.\n\nFor each received data frame, the WiFi driver makes a copy to an RX buffer and then delivers\nit to the high layer TCP/IP stack. The dynamic RX buffer is freed after the higher layer has\nsuccessfully received the data frame.\n\nFor some applications, WiFi data frames may be received faster than the application can\nprocess them. In these cases we may run out of memory if RX buffer number is unlimited (0).\n\nIf a dynamic RX buffer limit is set, it should be at least the number of static RX buffers.\n", 
                        "id": "ESP32_WIFI_DYNAMIC_RX_BUFFER_NUM", 
                        "name": "ESP32_WIFI_DYNAMIC_RX_BUFFER_NUM", 
                        "range": [
                            0, 
                            128
                        ], 
                        "title": "Max number of WiFi dynamic RX buffers", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_WIFI_TX_BUFFER>", 
                                "help": null, 
                                "id": "ESP32_WIFI_STATIC_TX_BUFFER", 
                                "name": "ESP32_WIFI_STATIC_TX_BUFFER", 
                                "range": null, 
                                "title": "Static", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "!SPIRAM_USE_MALLOC && <choice ESP32_WIFI_TX_BUFFER>", 
                                "help": null, 
                                "id": "ESP32_WIFI_DYNAMIC_TX_BUFFER", 
                                "name": "ESP32_WIFI_DYNAMIC_TX_BUFFER", 
                                "range": null, 
                                "title": "Dynamic", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select type of WiFi TX buffers:\n\nIf \"Static\" is selected, WiFi TX buffers are allocated when WiFi is initialized and released\nwhen WiFi is de-initialized. The size of each static TX buffer is fixed to about 1.6KB.\n\nIf \"Dynamic\" is selected, each WiFi TX buffer is allocated as needed when a data frame is\ndelivered to the Wifi driver from the TCP/IP stack. The buffer is freed after the data frame\nhas been sent by the WiFi driver. The size of each dynamic TX buffer depends on the length\nof each data frame sent by the TCP/IP layer.\n\nIf PSRAM is enabled, \"Static\" should be selected to guarantee enough WiFi TX buffers.\nIf PSRAM is disabled, \"Dynamic\" should be selected to improve the utilization of RAM.\n", 
                        "id": "component-config-wi-fi-type-of-wifi-tx-buffers", 
                        "name": "ESP32_WIFI_TX_BUFFER", 
                        "title": "Type of WiFi TX buffers", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP32_WIFI_TX_BUFFER_TYPE", 
                        "name": "ESP32_WIFI_TX_BUFFER_TYPE", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_WIFI_STATIC_TX_BUFFER", 
                        "help": "Set the number of WiFi static TX buffers. Each buffer takes approximately 1.6KB of RAM.\nThe static RX buffers are allocated when esp_wifi_init() is called, they are not released\nuntil esp_wifi_deinit() is called.\n\nFor each transmitted data frame from the higher layer TCP/IP stack, the WiFi driver makes a\ncopy of it in a TX buffer.  For some applications especially UDP applications, the upper\nlayer can deliver frames faster than WiFi layer can transmit. In these cases, we may run out\nof TX buffers.\n", 
                        "id": "ESP32_WIFI_STATIC_TX_BUFFER_NUM", 
                        "name": "ESP32_WIFI_STATIC_TX_BUFFER_NUM", 
                        "range": null, 
                        "title": "Max number of WiFi static TX buffers", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_WIFI_DYNAMIC_TX_BUFFER", 
                        "help": "Set the number of WiFi dynamic TX buffers. The size of each dynamic TX buffer is not fixed,\nit depends on the size of each transmitted data frame.\n\nFor each transmitted frame from the higher layer TCP/IP stack, the WiFi driver makes a copy\nof it in a TX buffer. For some applications, especially UDP applications, the upper layer\ncan deliver frames faster than WiFi layer can transmit. In these cases, we may run out of TX\nbuffers.\n", 
                        "id": "ESP32_WIFI_DYNAMIC_TX_BUFFER_NUM", 
                        "name": "ESP32_WIFI_DYNAMIC_TX_BUFFER_NUM", 
                        "range": [
                            16, 
                            128
                        ], 
                        "title": "Max number of WiFi dynamic TX buffers", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this option to enable CSI(Channel State Information) feature. CSI takes about\nCONFIG_ESP32_WIFI_STATIC_RX_BUFFER_NUM KB of RAM. If CSI is not used, it is better to disable\nthis feature in order to save memory.\n", 
                        "id": "ESP32_WIFI_CSI_ENABLED", 
                        "name": "ESP32_WIFI_CSI_ENABLED", 
                        "range": null, 
                        "title": "WiFi CSI(Channel State Information)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP32_WIFI_AMPDU_TX_ENABLED", 
                                "help": "Set the size of WiFi Block Ack TX window. Generally a bigger value means higher throughput but\nmore memory. Most of time we should NOT change the default value unless special reason, e.g.\ntest the maximum UDP TX throughput with iperf etc. For iperf test in shieldbox, the recommended\nvalue is 9~12.\n", 
                                "id": "ESP32_WIFI_TX_BA_WIN", 
                                "name": "ESP32_WIFI_TX_BA_WIN", 
                                "range": [
                                    2, 
                                    32
                                ], 
                                "title": "WiFi AMPDU TX BA window size", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select this option to enable AMPDU TX feature\n", 
                        "id": "ESP32_WIFI_AMPDU_TX_ENABLED", 
                        "name": "ESP32_WIFI_AMPDU_TX_ENABLED", 
                        "range": null, 
                        "title": "WiFi AMPDU TX", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP32_WIFI_AMPDU_RX_ENABLED", 
                                "help": "Set the size of WiFi Block Ack RX window. Generally a bigger value means higher throughput and better\ncompatibility but more memory. Most of time we should NOT change the default value unless special\nreason, e.g. test the maximum UDP RX throughput with iperf etc. For iperf test in shieldbox, the\nrecommended value is 9~12. If PSRAM is used and WiFi memory is prefered to allocat in PSRAM first,\nthe default and minimum value should be 16 to achieve better throughput and compatibility with both\nstations and APs.\n", 
                                "id": "ESP32_WIFI_RX_BA_WIN", 
                                "name": "ESP32_WIFI_RX_BA_WIN", 
                                "range": [
                                    2, 
                                    32
                                ], 
                                "title": "WiFi AMPDU RX BA window size", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select this option to enable AMPDU RX feature\n", 
                        "id": "ESP32_WIFI_AMPDU_RX_ENABLED", 
                        "name": "ESP32_WIFI_AMPDU_RX_ENABLED", 
                        "range": null, 
                        "title": "WiFi AMPDU RX", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this option to enable WiFi NVS flash\n", 
                        "id": "ESP32_WIFI_NVS_ENABLED", 
                        "name": "ESP32_WIFI_NVS_ENABLED", 
                        "range": null, 
                        "title": "WiFi NVS flash", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_WIFI_TASK_CORE_ID>", 
                                "help": null, 
                                "id": "ESP32_WIFI_TASK_PINNED_TO_CORE_0", 
                                "name": "ESP32_WIFI_TASK_PINNED_TO_CORE_0", 
                                "range": null, 
                                "title": "Core 0", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_WIFI_TASK_CORE_ID>", 
                                "help": null, 
                                "id": "ESP32_WIFI_TASK_PINNED_TO_CORE_1", 
                                "name": "ESP32_WIFI_TASK_PINNED_TO_CORE_1", 
                                "range": null, 
                                "title": "Core 1", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "!FREERTOS_UNICORE", 
                        "help": "Pinned WiFi task to core 0 or core 1.\n", 
                        "id": "component-config-wi-fi-wifi-task-core-id", 
                        "name": "ESP32_WIFI_TASK_CORE_ID", 
                        "title": "WiFi Task Core ID", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "ESP-MESH utilizes beacon frames to detect and resolve root node conflicts (see documentation). However the\ndefault length of a beacon frame can simultaneously hold only five root node identifier structures,\nmeaning that a root node conflict of up to five nodes can be detected at one time. In the occurence of\nmore root nodes conflict involving more than five root nodes, the conflict resolution process will detect\nfive of the root nodes, resolve the conflict, and re-detect more root nodes. This process will repeat\nuntil all root node conflicts are resolved. However this process can generally take a very long time.\n\nTo counter this situation, the beacon frame length can be increased such that more root nodes can be\ndetected simultaneously. Each additional root node will require 36 bytes and should be added ontop of the\ndefault beacon frame length of\n752 bytes. For example, if you want to detect 10 root nodes simultaneously, you need to set the beacon\nframe length as\n932 (752+36*5).\n\nSetting a longer beacon length also assists with debugging as the conflicting root nodes can be identified\nmore quickly.\n", 
                        "id": "ESP32_WIFI_SOFTAP_BEACON_MAX_LEN", 
                        "name": "ESP32_WIFI_SOFTAP_BEACON_MAX_LEN", 
                        "range": [
                            752, 
                            1256
                        ], 
                        "title": "Max length of WiFi SoftAP Beacon", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set the number of WiFi management short buffer.\n", 
                        "id": "ESP32_WIFI_MGMT_SBUF_NUM", 
                        "name": "ESP32_WIFI_MGMT_SBUF_NUM", 
                        "range": [
                            6, 
                            32
                        ], 
                        "title": "WiFi mgmt short buffer number", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_WIFI_DEBUG_LOG_LEVEL>", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_DEBUG", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_DEBUG", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Debug", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_WIFI_DEBUG_LOG_LEVEL>", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_VERBOSE", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_VERBOSE", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Verbose", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "ESP32_WIFI_DEBUG_LOG_ENABLE", 
                                "help": "The WiFi log is divided into the following levels: ERROR,WARNING,INFO,DEBUG,VERBOSE.\nThe ERROR,WARNING,INFO levels are enabled by default, and the DEBUG,VERBOSE levels can be enabled here.\n", 
                                "id": "component-config-wi-fi-enable-wifi-debug-log-wifi-debug-log-level", 
                                "name": "ESP32_WIFI_DEBUG_LOG_LEVEL", 
                                "title": "WiFi debug log level", 
                                "type": "choice"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_WIFI_DEBUG_LOG_MODULE>", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_MODULE_ALL", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_MODULE_ALL", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Module All", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_WIFI_DEBUG_LOG_MODULE>", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_MODULE_WIFI", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_MODULE_WIFI", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Module WiFi", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_WIFI_DEBUG_LOG_MODULE>", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_MODULE_COEX", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_MODULE_COEX", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Module Coex", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice ESP32_WIFI_DEBUG_LOG_MODULE>", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_MODULE_MESH", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_MODULE_MESH", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Module Mesh", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "ESP32_WIFI_DEBUG_LOG_ENABLE", 
                                "help": "The WiFi log module contains three parts: WIFI,COEX,MESH. The WIFI module indicates the logs related to\nWiFi, the COEX module indicates the logs related to WiFi and BT(or BLE) coexist, the MESH module indicates\nthe logs related to Mesh. When ESP32_WIFI_LOG_MODULE_ALL is enabled, all modules are selected.\n", 
                                "id": "component-config-wi-fi-enable-wifi-debug-log-wifi-debug-log-module", 
                                "name": "ESP32_WIFI_DEBUG_LOG_MODULE", 
                                "title": "WiFi debug log module", 
                                "type": "choice"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "ESP32_WIFI_DEBUG_LOG_SUBMODULE", 
                                        "help": "When this option is enabled, all debug submodules are selected.\n", 
                                        "id": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_ALL", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_ALL", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Submodule All", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP32_WIFI_DEBUG_LOG_SUBMODULE && !ESP32_WIFI_DEBUG_LOG_SUBMODULE_ALL", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_INIT", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_INIT", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Submodule Init", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP32_WIFI_DEBUG_LOG_SUBMODULE && !ESP32_WIFI_DEBUG_LOG_SUBMODULE_ALL", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_IOCTL", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_IOCTL", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Submodule Ioctl", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP32_WIFI_DEBUG_LOG_SUBMODULE && !ESP32_WIFI_DEBUG_LOG_SUBMODULE_ALL", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_CONN", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_CONN", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Submodule Conn", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP32_WIFI_DEBUG_LOG_SUBMODULE && !ESP32_WIFI_DEBUG_LOG_SUBMODULE_ALL", 
                                        "help": null, 
                                        "id": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_SCAN", 
                                        "name": "ESP32_WIFI_DEBUG_LOG_SUBMODULE_SCAN", 
                                        "range": null, 
                                        "title": "WiFi Debug Log Submodule Scan", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "ESP32_WIFI_DEBUG_LOG_ENABLE", 
                                "help": "Enable this option to set the WiFi debug log submodule.\nCurrently the log submodule contains the following parts: INIT,IOCTL,CONN,SCAN.\nThe INIT submodule indicates the initialization process.The IOCTL submodule indicates the API calling\nprocess.\nThe CONN submodule indicates the connecting process.The SCAN submodule indicates the scaning process.\n", 
                                "id": "ESP32_WIFI_DEBUG_LOG_SUBMODULE", 
                                "name": "ESP32_WIFI_DEBUG_LOG_SUBMODULE", 
                                "range": null, 
                                "title": "WiFi debug log submodule", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select this option to enable WiFi debug log\n", 
                        "id": "ESP32_WIFI_DEBUG_LOG_ENABLE", 
                        "name": "ESP32_WIFI_DEBUG_LOG_ENABLE", 
                        "range": null, 
                        "title": "Enable WiFi debug log", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this option to place frequently called Wi-Fi library functions in IRAM.\nWhen this option is disabled, more than 10Kbytes of IRAM memory will be saved\nbut Wi-Fi throughput will be reduced.\n", 
                        "id": "ESP32_WIFI_IRAM_OPT", 
                        "name": "ESP32_WIFI_IRAM_OPT", 
                        "range": null, 
                        "title": "WiFi IRAM speed optimization", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this option to place frequently called Wi-Fi library RX functions in IRAM.\nWhen this option is disabled, more than 17Kbytes of IRAM memory will be saved\nbut Wi-Fi performance will be reduced.\n", 
                        "id": "ESP32_WIFI_RX_IRAM_OPT", 
                        "name": "ESP32_WIFI_RX_IRAM_OPT", 
                        "range": null, 
                        "title": "WiFi RX IRAM speed optimization", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-wi-fi", 
                "title": "Wi-Fi", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If this option is enabled, NVS will be initialized and calibration data will be loaded from there.\nPHY calibration will be skipped on deep sleep wakeup. If calibration data is not found, full calibration\nwill be performed and stored in NVS. Normally, only partial calibration will be performed.\nIf this option is disabled, full calibration will be performed.\n\nIf it's easy that your board calibrate bad data, choose 'n'.\nTwo cases for example, you should choose 'n':\n1.If your board is easy to be booted up with antenna disconnected.\n2.Because of your board design, each time when you do calibration, the result are too unstable.\nIf unsure, choose 'y'.\n", 
                        "id": "ESP32_PHY_CALIBRATION_AND_DATA_STORAGE", 
                        "name": "ESP32_PHY_CALIBRATION_AND_DATA_STORAGE", 
                        "range": null, 
                        "title": "Store phy calibration data in NVS", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If enabled, PHY init data will be loaded from a partition.\nWhen using a custom partition table, make sure that PHY data\npartition is included (type: 'data', subtype: 'phy').\nWith default partition tables, this is done automatically.\nIf PHY init data is stored in a partition, it has to be flashed there,\notherwise runtime error will occur.\n\nIf this option is not enabled, PHY init data will be embedded\ninto the application binary.\n\nIf unsure, choose 'n'.\n", 
                        "id": "ESP32_PHY_INIT_DATA_IN_PARTITION", 
                        "name": "ESP32_PHY_INIT_DATA_IN_PARTITION", 
                        "range": null, 
                        "title": "Use a partition to store PHY init data", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set maximum transmit power for WiFi radio. Actual transmit power for high\ndata rates may be lower than this setting.\n", 
                        "id": "ESP32_PHY_MAX_WIFI_TX_POWER", 
                        "name": "ESP32_PHY_MAX_WIFI_TX_POWER", 
                        "range": [
                            0, 
                            20
                        ], 
                        "title": "Max WiFi TX power (dBm)", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP32_PHY_MAX_TX_POWER", 
                        "name": "ESP32_PHY_MAX_TX_POWER", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-phy", 
                "title": "PHY", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "PM_ENABLE", 
                                "help": "If enabled, startup code configures dynamic frequency scaling.\nMax CPU frequency is set to CONFIG_ESP32_DEFAULT_CPU_FREQ_MHZ setting,\nmin frequency is set to XTAL frequency.\nIf disabled, DFS will not be active until the application\nconfigures it using esp_pm_configure function.\n", 
                                "id": "PM_DFS_INIT_AUTO", 
                                "name": "PM_DFS_INIT_AUTO", 
                                "range": null, 
                                "title": "Enable dynamic frequency scaling (DFS) at startup", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "PM_ENABLE && (ESP32_TIME_SYSCALL_USE_RTC || ESP32_TIME_SYSCALL_USE_RTC_FRC1)", 
                                "help": "When APB clock frequency changes, high-resolution timer (esp_timer)\nscale and base value need to be adjusted. Each adjustment may cause\nsmall error, and over time such small errors may cause time drift.\nIf this option is enabled, RTC timer will be used as a reference to\ncompensate for the drift.\nIt is recommended that this option is only used if 32k XTAL is selected\nas RTC clock source.\n", 
                                "id": "PM_USE_RTC_TIMER_REF", 
                                "name": "PM_USE_RTC_TIMER_REF", 
                                "range": null, 
                                "title": "Use RTC timer to prevent time drift (EXPERIMENTAL)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "PM_ENABLE", 
                                "help": "If enabled, esp_pm_* functions will keep track of the amount of time\neach of the power management locks has been held, and esp_pm_dump_locks\nfunction will print this information.\nThis feature can be used to analyze which locks are preventing the chip\nfrom going into a lower power state, and see what time the chip spends\nin each power saving mode. This feature does incur some run-time\noverhead, so should typically be disabled in production builds.\n", 
                                "id": "PM_PROFILING", 
                                "name": "PM_PROFILING", 
                                "range": null, 
                                "title": "Enable profiling counters for PM locks", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "PM_ENABLE", 
                                "help": "If enabled, some GPIOs will be used to signal events such as RTOS ticks,\nfrequency switching, entry/exit from idle state. Refer to pm_trace.c\nfile for the list of GPIOs.\nThis feature is intended to be used when analyzing/debugging behavior\nof power management implementation, and should be kept disabled in\napplications.\n", 
                                "id": "PM_TRACE", 
                                "name": "PM_TRACE", 
                                "range": null, 
                                "title": "Enable debug tracing of PM using GPIOs", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If enabled, application is compiled with support for power management.\nThis option has run-time overhead (increased interrupt latency,\nlonger time to enter idle state), and it also reduces accuracy of\nRTOS ticks and timers used for timekeeping.\nEnable this option if application uses power management APIs.\n", 
                        "id": "PM_ENABLE", 
                        "name": "PM_ENABLE", 
                        "range": null, 
                        "title": "Support for power management", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-power-management", 
                "title": "Power Management", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enables collections of statistics in the event loop library such as the number of events posted\nto/recieved by an event loop, number of callbacks involved, number of events dropped to to a full event\nloop queue, run time of event handlers, and number of times/run time of each event handler.\n", 
                        "id": "EVENT_LOOP_PROFILING", 
                        "name": "EVENT_LOOP_PROFILING", 
                        "range": null, 
                        "title": "Enable event loop profiling", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-event-loop-library", 
                "title": "Event Loop Library", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_COREDUMP_TO_FLASH_OR_UART>", 
                                "help": null, 
                                "id": "ESP32_ENABLE_COREDUMP_TO_FLASH", 
                                "name": "ESP32_ENABLE_COREDUMP_TO_FLASH", 
                                "range": null, 
                                "title": "Flash", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_COREDUMP_TO_FLASH_OR_UART>", 
                                "help": null, 
                                "id": "ESP32_ENABLE_COREDUMP_TO_UART", 
                                "name": "ESP32_ENABLE_COREDUMP_TO_UART", 
                                "range": null, 
                                "title": "UART", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_COREDUMP_TO_FLASH_OR_UART>", 
                                "help": null, 
                                "id": "ESP32_ENABLE_COREDUMP_TO_NONE", 
                                "name": "ESP32_ENABLE_COREDUMP_TO_NONE", 
                                "range": null, 
                                "title": "None", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select place to store core dump: flash, uart or none (to disable core dumps generation).\n\nIf core dump is configured to be stored in flash and custom partition table is used add\ncorresponding entry to your CSV. For examples, please see predefined partition table CSV descriptions\nin the components/partition_table directory.\n", 
                        "id": "component-config-core-dump-data-destination", 
                        "name": "ESP32_COREDUMP_TO_FLASH_OR_UART", 
                        "title": "Data destination", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enables/disable core dump module.\n", 
                        "id": "ESP32_ENABLE_COREDUMP", 
                        "name": "ESP32_ENABLE_COREDUMP", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_ENABLE_COREDUMP", 
                        "help": "Maximum number of tasks snapshots in core dump.\n", 
                        "id": "ESP32_CORE_DUMP_MAX_TASKS_NUM", 
                        "name": "ESP32_CORE_DUMP_MAX_TASKS_NUM", 
                        "range": null, 
                        "title": "Maximum number of tasks", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_ENABLE_COREDUMP_TO_UART", 
                        "help": "Config delay (in ms) before printing core dump to UART.\nDelay can be interrupted by pressing Enter key.\n", 
                        "id": "ESP32_CORE_DUMP_UART_DELAY", 
                        "name": "ESP32_CORE_DUMP_UART_DELAY", 
                        "range": null, 
                        "title": "Delay before print to UART", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-core-dump", 
                "title": "Core dump", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Number of DMA receive buffers. Each buffer is 1600 bytes.\nThese buffers are allocated dynamically.\nMore buffers will increase throughput.\nIf flow ctrl is enabled, make sure this number is larger than 9.\n", 
                        "id": "DMA_RX_BUF_NUM", 
                        "name": "DMA_RX_BUF_NUM", 
                        "range": [
                            3, 
                            20
                        ], 
                        "title": "Number of DMA RX buffers", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Number of DMA transmit buffers. Each buffer is 1600 bytes.\nThese buffers are allocated dynamically.\nMore buffers will increase throughput.\n", 
                        "id": "DMA_TX_BUF_NUM", 
                        "name": "DMA_TX_BUF_NUM", 
                        "range": [
                            3, 
                            20
                        ], 
                        "title": "Number of DMA TX buffers", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If this option is selected, a copy of each received buffer will be allocated from the heap\nbefore passing it to the IP Layer (L3).\nWhich means, the total amount of received buffers is limited by the heap size.\n\nIf this option is not selected, IP layer only uses the pointers to the DMA buffers owned by Ethernet MAC.\nWhen Ethernet MAC doesn't have any available buffers left, it will drop the incoming packets.\n", 
                        "id": "EMAC_L2_TO_L3_RX_BUF_MODE", 
                        "name": "EMAC_L2_TO_L3_RX_BUF_MODE", 
                        "range": null, 
                        "title": "Enable received buffers be copied to Layer3 from Layer2", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The emac driver uses an internal timer to check the Ethernet linkup status.\nHere you should choose a valid interval time.\n", 
                        "id": "EMAC_CHECK_LINK_PERIOD_MS", 
                        "name": "EMAC_CHECK_LINK_PERIOD_MS", 
                        "range": [
                            1000, 
                            5000
                        ], 
                        "title": "Period (ms) of checking Ethernet linkup status", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Priority of Ethernet MAC task.\n", 
                        "id": "EMAC_TASK_PRIORITY", 
                        "name": "EMAC_TASK_PRIORITY", 
                        "range": [
                            3, 
                            22
                        ], 
                        "title": "EMAC_TASK_PRIORITY", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Stack Size of Ethernet MAC task.\n", 
                        "id": "EMAC_TASK_STACK_SIZE", 
                        "name": "EMAC_TASK_STACK_SIZE", 
                        "range": [
                            2000, 
                            8000
                        ], 
                        "title": "Stack Size of EMAC Task", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-ethernet", 
                "title": "Ethernet", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This version of FreeRTOS normally takes control of all cores of\nthe CPU. Select this if you only want to start it on the first core.\nThis is needed when e.g. another process needs complete control\nover the second core.\n\n# This invisible config value sets the value of tskNO_AFFINITY in task.h.\n# Intended to be used as a constant from other Kconfig files.\n# Value is (32-bit) INT_MAX.\n", 
                        "id": "FREERTOS_UNICORE", 
                        "name": "FREERTOS_UNICORE", 
                        "range": null, 
                        "title": "Run FreeRTOS only on first core", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "FREERTOS_NO_AFFINITY", 
                        "name": "FREERTOS_NO_AFFINITY", 
                        "range": null, 
                        "title": null, 
                        "type": "hex"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_CORETIMER>", 
                                "help": "Select this to use timer 0\n", 
                                "id": "FREERTOS_CORETIMER_0", 
                                "name": "FREERTOS_CORETIMER_0", 
                                "range": null, 
                                "title": "Timer 0 (int 6, level 1)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_CORETIMER>", 
                                "help": "Select this to use timer 1\n", 
                                "id": "FREERTOS_CORETIMER_1", 
                                "name": "FREERTOS_CORETIMER_1", 
                                "range": null, 
                                "title": "Timer 1 (int 15, level 3)", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "FreeRTOS needs a timer with an associated interrupt to use as\nthe main tick source to increase counters, run timers and do\npre-emptive multitasking with. There are multiple timers available\nto do this, with different interrupt priorities. Check\n", 
                        "id": "component-config-freertos-xtensa-timer-to-use-as-the-freertos-tick-source", 
                        "name": "FREERTOS_CORETIMER", 
                        "title": "Xtensa timer to use as the FreeRTOS tick source", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select the tick rate at which FreeRTOS does pre-emptive context switching.\n", 
                        "id": "FREERTOS_HZ", 
                        "name": "FREERTOS_HZ", 
                        "range": [
                            1, 
                            1000
                        ], 
                        "title": "Tick rate (Hz)", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Some functions in FreeRTOS have not been thoroughly tested yet when moving to\nthe SMP implementation of FreeRTOS. When this option is enabled, these fuctions\nwill throw an assert().\n", 
                        "id": "FREERTOS_ASSERT_ON_UNTESTED_FUNCTION", 
                        "name": "FREERTOS_ASSERT_ON_UNTESTED_FUNCTION", 
                        "range": null, 
                        "title": "Halt when an SMP-untested function is called", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_CHECK_STACKOVERFLOW>", 
                                "help": "Do not check for stack overflows (configCHECK_FOR_STACK_OVERFLOW=0)\n", 
                                "id": "FREERTOS_CHECK_STACKOVERFLOW_NONE", 
                                "name": "FREERTOS_CHECK_STACKOVERFLOW_NONE", 
                                "range": null, 
                                "title": "No checking", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_CHECK_STACKOVERFLOW>", 
                                "help": "Check for stack overflows on each context switch by checking if\nthe stack pointer is in a valid range. Quick but does not detect\nstack overflows that happened between context switches\n(configCHECK_FOR_STACK_OVERFLOW=1)\n", 
                                "id": "FREERTOS_CHECK_STACKOVERFLOW_PTRVAL", 
                                "name": "FREERTOS_CHECK_STACKOVERFLOW_PTRVAL", 
                                "range": null, 
                                "title": "Check by stack pointer value", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_CHECK_STACKOVERFLOW>", 
                                "help": "Places some magic bytes at the end of the stack area and on each\ncontext switch, check if these bytes are still intact. More thorough\nthan just checking the pointer, but also slightly slower.\n(configCHECK_FOR_STACK_OVERFLOW=2)\n", 
                                "id": "FREERTOS_CHECK_STACKOVERFLOW_CANARY", 
                                "name": "FREERTOS_CHECK_STACKOVERFLOW_CANARY", 
                                "range": null, 
                                "title": "Check using canary bytes", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "FreeRTOS can check for stack overflows in threads and trigger an user function\ncalled vApplicationStackOverflowHook when this happens.\n", 
                        "id": "component-config-freertos-check-for-stack-overflow", 
                        "name": "FREERTOS_CHECK_STACKOVERFLOW", 
                        "title": "Check for stack overflow", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "FreeRTOS can check if a stack has overflown its bounds by checking either the value of\nthe stack pointer or by checking the integrity of canary bytes. (See FREERTOS_CHECK_STACKOVERFLOW\nfor more information.) These checks only happen on a context switch, and the situation that caused\nthe stack overflow may already be long gone by then. This option will use the debug memory\nwatchpoint 1 (the second one) to allow breaking into the debugger (or panic'ing) as soon as any\nof the last 32 bytes on the stack of a task are overwritten. The side effect is that using gdb, you\neffectively only have one watchpoint; the 2nd one is overwritten as soon as a task switch happens.\n\nThis check only triggers if the stack overflow writes within 4 bytes of the end of the stack, rather than\novershooting further, so it is worth combining this approach with one of the other stack overflow check\nmethods.\n\nWhen this watchpoint is hit, gdb will stop with a SIGTRAP message. When no JTAG OCD is attached, esp-idf\nwill panic on an unhandled debug exception.\n", 
                        "id": "FREERTOS_WATCHPOINT_END_OF_STACK", 
                        "name": "FREERTOS_WATCHPOINT_END_OF_STACK", 
                        "range": null, 
                        "title": "Set a debug watchpoint as a stack overflow check", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If this option is enabled, interrupt stack frame will be modified to\npoint to the code of the interrupted task as its return address.\nThis helps the debugger (or the panic handler) show a backtrace from\nthe interrupt to the task which was interrupted. This also works for\nnested interrupts: higer level interrupt stack can be traced back to the\nlower level interrupt.\nThis option adds 4 instructions to the interrupt dispatching code.\n", 
                        "id": "FREERTOS_INTERRUPT_BACKTRACE", 
                        "name": "FREERTOS_INTERRUPT_BACKTRACE", 
                        "range": null, 
                        "title": "Enable backtrace from interrupt to task context", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "FreeRTOS has the ability to store per-thread pointers in the task\ncontrol block. This controls the number of pointers available.\n\nThis value must be at least 1. Index 0 is reserved for use by the pthreads API\nthread-local-storage. Other indexes can be used for any desired purpose.\n", 
                        "id": "FREERTOS_THREAD_LOCAL_STORAGE_POINTERS", 
                        "name": "FREERTOS_THREAD_LOCAL_STORAGE_POINTERS", 
                        "range": [
                            1, 
                            256
                        ], 
                        "title": "Number of thread local storage pointers", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_ASSERT>", 
                                "help": "If a FreeRTOS configASSERT() fails, FreeRTOS will abort() and\nhalt execution. The panic handler can be configured to handle\nthe outcome of an abort() in different ways.\n", 
                                "id": "FREERTOS_ASSERT_FAIL_ABORT", 
                                "name": "FREERTOS_ASSERT_FAIL_ABORT", 
                                "range": null, 
                                "title": "abort() on failed assertions", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_ASSERT>", 
                                "help": "If a FreeRTOS assertion fails, print it out and continue.\n", 
                                "id": "FREERTOS_ASSERT_FAIL_PRINT_CONTINUE", 
                                "name": "FREERTOS_ASSERT_FAIL_PRINT_CONTINUE", 
                                "range": null, 
                                "title": "Print and continue failed assertions", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_ASSERT>", 
                                "help": "FreeRTOS configASSERT() will not be compiled into the binary.\n", 
                                "id": "FREERTOS_ASSERT_DISABLE", 
                                "name": "FREERTOS_ASSERT_DISABLE", 
                                "range": null, 
                                "title": "Disable FreeRTOS assertions", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Failed FreeRTOS configASSERT() assertions can be configured to\nbehave in different ways.\n", 
                        "id": "component-config-freertos-freertos-assertions", 
                        "name": "FREERTOS_ASSERT", 
                        "title": "FreeRTOS assertions", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The idle task has its own stack, sized in bytes. The default size is enough for most uses. Size can be\nreduced to 768 bytes if no (or simple) FreeRTOS idle hooks are used and pthread local storage or FreeRTOS\nlocal storage cleanup callbacks are not used.\n\nThe stack size may need to be increased above the default if the app installs idle or thread local storage\ncleanup hooks that use a lot of stack memory.\n", 
                        "id": "FREERTOS_IDLE_TASK_STACKSIZE", 
                        "name": "FREERTOS_IDLE_TASK_STACKSIZE", 
                        "range": [
                            768, 
                            32768
                        ], 
                        "title": "Idle Task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The interrupt handlers have their own stack. The size of the stack can be defined here.\nEach processor has its own stack, so the total size occupied will be twice this.\n", 
                        "id": "FREERTOS_ISR_STACKSIZE", 
                        "name": "FREERTOS_ISR_STACKSIZE", 
                        "range": [
                            1536, 
                            32768
                        ], 
                        "title": "ISR stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "FreeRTOS offers a number of hooks/callback functions that are called when a timer\ntick happens, the idle thread runs etc. esp-idf replaces these by runtime registerable\nhooks using the esp_register_freertos_xxx_hook system, but for legacy reasons the old\nhooks can also still be enabled. Please enable this only if you have code that for some\nreason can't be migrated to the esp_register_freertos_xxx_hook system.\n", 
                        "id": "FREERTOS_LEGACY_HOOKS", 
                        "name": "FREERTOS_LEGACY_HOOKS", 
                        "range": null, 
                        "title": "Use FreeRTOS legacy hooks", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Changes the maximum task name length. Each task allocated will\ninclude this many bytes for a task name. Using a shorter value\nsaves a small amount of RAM, a longer value allows more complex\nnames.\n\nFor most uses, the default of 16 is OK.\n", 
                        "id": "FREERTOS_MAX_TASK_NAME_LEN", 
                        "name": "FREERTOS_MAX_TASK_NAME_LEN", 
                        "range": [
                            1, 
                            256
                        ], 
                        "title": "Maximum task name length", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "SUPPORT_STATIC_ALLOCATION", 
                                "help": "Enable this option to make FreeRTOS call the static task clean up hook when a task is deleted.\n\nBear in mind that if this option is enabled you will need to implement the following function::\n\n    void vPortCleanUpTCB ( void *pxTCB ) {\n        // place clean up code here\n    }\n", 
                                "id": "ENABLE_STATIC_TASK_CLEAN_UP_HOOK", 
                                "name": "ENABLE_STATIC_TASK_CLEAN_UP_HOOK", 
                                "range": null, 
                                "title": "Enable static task clean up hook", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "FreeRTOS gives the application writer the ability to instead provide the memory\nthemselves, allowing the following objects to optionally be created without any\nmemory being allocated dynamically:\n\n- Tasks\n- Software Timers (Daemon task is still dynamic. See documentation)\n- Queues\n- Event Groups\n- Binary Semaphores\n- Counting Semaphores\n- Recursive Semaphores\n- Mutexes\n\nWhether it is preferable to use static or dynamic memory allocation is dependent on\nthe application, and the preference of the application writer. Both methods have pros\nand cons, and both methods can be used within the same RTOS application.\n\nCreating RTOS objects using statically allocated RAM has the benefit of providing the application writer\nwith more control: RTOS objects can be placed at specific memory locations. The maximum RAM footprint can\nbe determined at link time, rather than run time. The application writer does not need to concern\nthemselves with graceful handling of memory allocation failures. It allows the RTOS to be used in\napplications that simply don't allow any dynamic memory allocation (although FreeRTOS includes allocation\nschemes that can overcome most objections).\n", 
                        "id": "SUPPORT_STATIC_ALLOCATION", 
                        "name": "SUPPORT_STATIC_ALLOCATION", 
                        "range": null, 
                        "title": "Enable FreeRTOS static allocation API", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The timer service task (primarily) makes use of existing FreeRTOS features, allowing timer\nfunctionality to be added to an application with minimal impact on the size of the application's\nexecutable binary.\n\nUse this constant to define the priority that the timer task will run at.\n", 
                        "id": "TIMER_TASK_PRIORITY", 
                        "name": "TIMER_TASK_PRIORITY", 
                        "range": [
                            1, 
                            25
                        ], 
                        "title": "FreeRTOS timer task priority", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The timer service task (primarily) makes use of existing FreeRTOS features, allowing timer\nfunctionality to be added to an application with minimal impact on the size of the application's\nexecutable binary.\n\nUse this constant to define the size (in bytes) of the stack allocated for the timer task.\n", 
                        "id": "TIMER_TASK_STACK_DEPTH", 
                        "name": "TIMER_TASK_STACK_DEPTH", 
                        "range": [
                            1536, 
                            32768
                        ], 
                        "title": "FreeRTOS timer task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "FreeRTOS provides a set of timer related API functions. Many of these functions use a standard\nFreeRTOS queue to send commands to the timer service task. The queue used for this purpose is\ncalled the 'timer command queue'. The 'timer command queue' is private to the FreeRTOS timer\nimplementation, and cannot be accessed directly.\n\nFor most uses the default value of 10 is OK.\n", 
                        "id": "TIMER_QUEUE_LENGTH", 
                        "name": "TIMER_QUEUE_LENGTH", 
                        "range": [
                            5, 
                            20
                        ], 
                        "title": "FreeRTOS timer queue length", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "FreeRTOS uses the queue registry as a means for kernel aware debuggers to locate queues, semaphores,\nand mutexes. The registry allows for a textual name to be associated with a queue for easy identification\nwithin a debugging GUI. A value of 0 will disable queue registry functionality, and a value larger than 0\nwill specify the number of queues/semaphores/mutexes that the registry can hold.\n", 
                        "id": "FREERTOS_QUEUE_REGISTRY_SIZE", 
                        "name": "FREERTOS_QUEUE_REGISTRY_SIZE", 
                        "range": [
                            0, 
                            20
                        ], 
                        "title": "FreeRTOS queue registry size", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "FREERTOS_USE_STATS_FORMATTING_FUNCTIONS", 
                                        "help": "If enabled, this will include an extra column when vTaskList is called\nto display the CoreID the task is pinned to (0,1) or -1 if not pinned.\n", 
                                        "id": "FREERTOS_VTASKLIST_INCLUDE_COREID", 
                                        "name": "FREERTOS_VTASKLIST_INCLUDE_COREID", 
                                        "range": null, 
                                        "title": "Enable display of xCoreID in vTaskList", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "FREERTOS_USE_TRACE_FACILITY", 
                                "help": "If enabled, configUSE_STATS_FORMATTING_FUNCTIONS will be defined as 1 in\nFreeRTOS. This will allow the usage of stats formatting functions such\nas vTaskList().\n", 
                                "id": "FREERTOS_USE_STATS_FORMATTING_FUNCTIONS", 
                                "name": "FREERTOS_USE_STATS_FORMATTING_FUNCTIONS", 
                                "range": null, 
                                "title": "Enable FreeRTOS stats formatting functions", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If enabled, configUSE_TRACE_FACILITY will be defined as 1 in FreeRTOS.\nThis will allow the usage of trace facility functions such as\nuxTaskGetSystemState().\n", 
                        "id": "FREERTOS_USE_TRACE_FACILITY", 
                        "name": "FREERTOS_USE_TRACE_FACILITY", 
                        "range": null, 
                        "title": "Enable FreeRTOS trace facility", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice FREERTOS_RUN_TIME_STATS_CLK>", 
                                        "help": "ESP Timer will be used as the clock source for FreeRTOS run time stats.\nThe ESP Timer runs at a frequency of 1MHz regardless of Dynamic\nFrequency Scaling. Therefore the ESP Timer will overflow in\napproximately 4290 seconds.\n", 
                                        "id": "FREERTOS_RUN_TIME_STATS_USING_ESP_TIMER", 
                                        "name": "FREERTOS_RUN_TIME_STATS_USING_ESP_TIMER", 
                                        "range": null, 
                                        "title": "Use ESP TIMER for run time stats", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice FREERTOS_RUN_TIME_STATS_CLK>", 
                                        "help": "CPU Clock will be used as the clock source for the generation of run\ntime stats. The CPU Clock has a frequency dependent on\nESP32_DEFAULT_CPU_FREQ_MHZ and Dynamic Frequency Scaling (DFS).\nTherefore the CPU Clock frequency can fluctuate between 80 to 240MHz.\nRun time stats generated using the CPU Clock represents the number of\nCPU cycles each task is allocated and DOES NOT reflect the amount of\ntime each task runs for (as CPU clock frequency can change). If the CPU\nclock consistently runs at the maximum frequency of 240MHz, it will\noverflow in approximately 17 seconds.\n", 
                                        "id": "FREERTOS_RUN_TIME_STATS_USING_CPU_CLK", 
                                        "name": "FREERTOS_RUN_TIME_STATS_USING_CPU_CLK", 
                                        "range": null, 
                                        "title": "Use CPU Clock for run time stats", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "FREERTOS_GENERATE_RUN_TIME_STATS", 
                                "help": "Choose the clock source for FreeRTOS run time stats. Options are CPU0's\nCPU Clock or the ESP Timer. Both clock sources are 32 bits. The CPU\nClock can run at a higher frequency hence provide a finer resolution\nbut will overflow much quicker. Note that run time stats are only valid\nuntil the clock source overflows.\n", 
                                "id": "component-config-freertos-enable-freertos-to-collect-run-time-stats-choose-the-clock-source-for-run-time-stats", 
                                "name": "FREERTOS_RUN_TIME_STATS_CLK", 
                                "title": "Choose the clock source for run time stats", 
                                "type": "choice"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If enabled, configGENERATE_RUN_TIME_STATS will be defined as 1 in\nFreeRTOS. This will allow FreeRTOS to collect information regarding the\nusage of processor time amongst FreeRTOS tasks. Run time stats are\ngenerated using either the ESP Timer or the CPU Clock as the clock\nsource (Note that run time stats are only valid until the clock source\noverflows). The function vTaskGetRunTimeStats() will also be available\nif FREERTOS_USE_STATS_FORMATTING_FUNCTIONS and\nFREERTOS_USE_TRACE_FACILITY are enabled. vTaskGetRunTimeStats() will\ndisplay the run time of each task as a % of the total run time of all\nCPUs (task run time / no of CPUs) / (total run time / 100 )\n", 
                        "id": "FREERTOS_GENERATE_RUN_TIME_STATS", 
                        "name": "FREERTOS_GENERATE_RUN_TIME_STATS", 
                        "range": null, 
                        "title": "Enable FreeRTOS to collect run time stats", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "FREERTOS_USE_TICKLESS_IDLE", 
                                "help": "FreeRTOS will enter light sleep mode if no tasks need to run for this number\nof ticks.\n", 
                                "id": "FREERTOS_IDLE_TIME_BEFORE_SLEEP", 
                                "name": "FREERTOS_IDLE_TIME_BEFORE_SLEEP", 
                                "range": null, 
                                "title": "Minimum number of ticks to enter sleep mode for", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": "PM_ENABLE", 
                        "help": "If power management support is enabled, FreeRTOS will be able to put\nthe system into light sleep mode when no tasks need to run for a number\nof ticks. This number can be set using FREERTOS_IDLE_TIME_BEFORE_SLEEP option.\nThis feature is also known as \"automatic light sleep\".\n\nNote that timers created using esp_timer APIs may prevent the system from\nentering sleep mode, even when no tasks need to run.\n\nIf disabled, automatic light sleep support will be disabled.\n", 
                        "id": "FREERTOS_USE_TICKLESS_IDLE", 
                        "name": "FREERTOS_USE_TICKLESS_IDLE", 
                        "range": null, 
                        "title": "Tickless idle support", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "FREERTOS_DEBUG_INTERNALS && FREERTOS_DEBUG_INTERNALS", 
                                "help": "If enabled, debug information (including integrity checks) will be printed\nto UART for the port-specific MUX implementation.\n", 
                                "id": "FREERTOS_PORTMUX_DEBUG", 
                                "name": "FREERTOS_PORTMUX_DEBUG", 
                                "range": null, 
                                "title": "Debug portMUX portENTER_CRITICAL/portEXIT_CRITICAL", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "FREERTOS_PORTMUX_DEBUG && FREERTOS_DEBUG_INTERNALS && !FREERTOS_UNICORE", 
                                "help": "If enabled, additional debug information will be printed for recursive\nportMUX usage.\n", 
                                "id": "FREERTOS_PORTMUX_DEBUG_RECURSIVE", 
                                "name": "FREERTOS_PORTMUX_DEBUG_RECURSIVE", 
                                "range": null, 
                                "title": "Debug portMUX Recursion", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable this option to show the menu with internal FreeRTOS debugging features.\nThis option does not change any code by itself, it just shows/hides some options.\n", 
                        "id": "FREERTOS_DEBUG_INTERNALS", 
                        "is_menuconfig": true, 
                        "name": "FREERTOS_DEBUG_INTERNALS", 
                        "range": null, 
                        "title": "Debug FreeRTOS internals", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "OPTIMIZATION_LEVEL_DEBUG", 
                        "help": "If enabled, all FreeRTOS task functions will be enclosed in a wrapper function.\nIf a task function mistakenly returns (i.e. does not delete), the call flow will\nreturn to the wrapper function. The wrapper function will then log an error and\nabort the application. This option is also required for GDB backtraces and C++\nexceptions to work correctly inside top-level task functions.\n", 
                        "id": "FREERTOS_TASK_FUNCTION_WRAPPER", 
                        "name": "FREERTOS_TASK_FUNCTION_WRAPPER", 
                        "range": null, 
                        "title": "Enclose all task functions in a wrapper function", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If enabled, assert that when a mutex semaphore is given, the task giving the\nsemaphore is the task which is currently holding the mutex.\n", 
                        "id": "FREERTOS_CHECK_MUTEX_GIVEN_BY_OWNER", 
                        "name": "FREERTOS_CHECK_MUTEX_GIVEN_BY_OWNER", 
                        "range": null, 
                        "title": "Check that mutex semaphore is given by owner task", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If enabled, context of port*_CRITICAL calls (ISR or Non-ISR)\nwould be checked to be in compliance with Vanilla FreeRTOS.\ne.g Calling port*_CRITICAL from ISR context would cause assert failure\n", 
                        "id": "FREERTOS_CHECK_PORT_CRITICAL_COMPLIANCE", 
                        "name": "FREERTOS_CHECK_PORT_CRITICAL_COMPLIANCE", 
                        "range": null, 
                        "title": "Tests compliance with Vanilla FreeRTOS port*_CRITICAL calls", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-freertos", 
                "title": "FreeRTOS", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice HEAP_CORRUPTION_DETECTION>", 
                                "help": null, 
                                "id": "HEAP_POISONING_DISABLED", 
                                "name": "HEAP_POISONING_DISABLED", 
                                "range": null, 
                                "title": "Basic (no poisoning)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice HEAP_CORRUPTION_DETECTION>", 
                                "help": null, 
                                "id": "HEAP_POISONING_LIGHT", 
                                "name": "HEAP_POISONING_LIGHT", 
                                "range": null, 
                                "title": "Light impact", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice HEAP_CORRUPTION_DETECTION>", 
                                "help": null, 
                                "id": "HEAP_POISONING_COMPREHENSIVE", 
                                "name": "HEAP_POISONING_COMPREHENSIVE", 
                                "range": null, 
                                "title": "Comprehensive", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable heap poisoning features to detect heap corruption caused by out-of-bounds access to heap memory.\n\nSee the \"Heap Memory Debugging\" page of the IDF documentation\nfor a description of each level of heap corruption detection.\n", 
                        "id": "component-config-heap-memory-debugging-heap-corruption-detection", 
                        "name": "HEAP_CORRUPTION_DETECTION", 
                        "title": "Heap corruption detection", 
                        "type": "choice"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "HEAP_TRACING", 
                                "help": "Number of stack frames to save when tracing heap operation callers.\n\nMore stack frames uses more memory in the heap trace buffer (and slows down allocation), but\ncan provide useful information.\n", 
                                "id": "HEAP_TRACING_STACK_DEPTH", 
                                "name": "HEAP_TRACING_STACK_DEPTH", 
                                "range": null, 
                                "title": "Heap tracing stack depth", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enables the heap tracing API defined in esp_heap_trace.h.\n\nThis function causes a moderate increase in IRAM code side and a minor increase in heap function\n(malloc/free/realloc) CPU overhead, even when the tracing feature is not used. So it's best to keep it\ndisabled unless tracing is being used.\n", 
                        "id": "HEAP_TRACING", 
                        "name": "HEAP_TRACING", 
                        "range": null, 
                        "title": "Enable heap tracing", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!HEAP_POISONING_DISABLED", 
                        "help": "Enables tracking the task responsible for each heap allocation.\n\nThis function depends on heap poisoning being enabled and adds four more bytes of overhead for each block\nallocated.\n", 
                        "id": "HEAP_TASK_TRACKING", 
                        "name": "HEAP_TASK_TRACKING", 
                        "range": null, 
                        "title": "Enable heap task tracking", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-heap-memory-debugging", 
                "title": "Heap memory debugging", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "id": "LOG_DEFAULT_LEVEL_NONE", 
                                "name": "LOG_DEFAULT_LEVEL_NONE", 
                                "range": null, 
                                "title": "No output", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "id": "LOG_DEFAULT_LEVEL_ERROR", 
                                "name": "LOG_DEFAULT_LEVEL_ERROR", 
                                "range": null, 
                                "title": "Error", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "id": "LOG_DEFAULT_LEVEL_WARN", 
                                "name": "LOG_DEFAULT_LEVEL_WARN", 
                                "range": null, 
                                "title": "Warning", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "id": "LOG_DEFAULT_LEVEL_INFO", 
                                "name": "LOG_DEFAULT_LEVEL_INFO", 
                                "range": null, 
                                "title": "Info", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "id": "LOG_DEFAULT_LEVEL_DEBUG", 
                                "name": "LOG_DEFAULT_LEVEL_DEBUG", 
                                "range": null, 
                                "title": "Debug", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "id": "LOG_DEFAULT_LEVEL_VERBOSE", 
                                "name": "LOG_DEFAULT_LEVEL_VERBOSE", 
                                "range": null, 
                                "title": "Verbose", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Specify how much output to see in logs by default.\nYou can set lower verbosity level at runtime using\nesp_log_level_set function.\n\nNote that this setting limits which log statements\nare compiled into the program. So setting this to, say,\n\"Warning\" would mean that changing log level to \"Debug\"\nat runtime will not be possible.\n", 
                        "id": "component-config-log-output-default-log-verbosity", 
                        "name": "LOG_DEFAULT_LEVEL", 
                        "title": "Default log verbosity", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "LOG_DEFAULT_LEVEL", 
                        "name": "LOG_DEFAULT_LEVEL", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable ANSI terminal color codes in bootloader output.\n\nIn order to view these, your terminal program must support ANSI color codes.\n", 
                        "id": "LOG_COLORS", 
                        "name": "LOG_COLORS", 
                        "range": null, 
                        "title": "Use ANSI terminal colors in log output", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-log-output", 
                "title": "Log output", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If this feature is enabled, all traffic from layer2(WIFI Driver) will be\ncopied to a new buffer before sending it to layer3(LWIP stack), freeing\nthe layer2 buffer.\nPlease be notified that the total layer2 receiving buffer is fixed and\nESP32 currently supports 25 layer2 receiving buffer, when layer2 buffer\nruns out of memory, then the incoming packets will be dropped in hardware.\nThe layer3 buffer is allocated from the heap, so the total layer3 receiving\nbuffer depends on the available heap size, when heap runs out of memory,\nno copy will be sent to layer3 and packet will be dropped in layer2.\nPlease make sure you fully understand the impact of this feature before\nenabling it.\n", 
                        "id": "L2_TO_L3_COPY", 
                        "name": "L2_TO_L3_COPY", 
                        "range": null, 
                        "title": "Enable copy between Layer2 and Layer3 packets", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "ETHARP_SUPPORT_VLAN==1: support receiving and sending ethernet packets with\nVLAN header. See the description of LWIP_HOOK_VLAN_CHECK and LWIP_HOOK_VLAN_SET\nhooks to check/set VLAN headers.\nIf ETHARP_VLAN_CHECK is defined, only VLAN-traffic for this VLAN is accepted.\nIf ETHARP_VLAN_CHECK is not defined, all traffic is accepted.\n", 
                        "id": "ETHARP_SUPPORT_VLAN", 
                        "name": "ETHARP_SUPPORT_VLAN", 
                        "range": null, 
                        "title": "Support receiving and sending ethernet packets with VLAN header", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If this feature is enabled, some functions relating to RX/TX in LWIP will be\nput into IRAM, it can improve UDP/TCP throughput by >10% for single core mode,\nit doesn't help too much for dual core mode. On the other hand, it needs about\n10KB IRAM for these optimizations.\n\nIf this feature is disabled, all lwip functions will be put into FLASH.\n", 
                        "id": "LWIP_IRAM_OPTIMIZATION", 
                        "name": "LWIP_IRAM_OPTIMIZATION", 
                        "range": null, 
                        "title": "Enable LWIP IRAM optimization", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Sockets take up a certain amount of memory, and allowing fewer\nsockets to be open at the same time conserves memory. Specify\nthe maximum amount of sockets here. The valid value is from 1\nto 16.\n", 
                        "id": "LWIP_MAX_SOCKETS", 
                        "name": "LWIP_MAX_SOCKETS", 
                        "range": [
                            1, 
                            16
                        ], 
                        "title": "Max number of open sockets", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "LWIP_RANDOMIZE_INITIAL_LOCAL_PORTS==1: randomize the local port for the first\nlocal TCP/UDP pcb (default==0). This can prevent creating predictable port\nnumbers after booting a device.\n", 
                        "id": "LWIP_RANDOMIZE_INITIAL_LOCAL_PORTS", 
                        "name": "LWIP_RANDOMIZE_INITIAL_LOCAL_PORTS", 
                        "range": null, 
                        "title": "Randomize the local port for the first", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The virtual filesystem layer of select() redirects sockets to\nlwip_select() and non-socket file descriptors to their respective driver\nimplementations. If this option is enabled then all calls of select()\nwill be redirected to lwip_select(), therefore, select can be used\nfor sockets only.\n", 
                        "id": "USE_ONLY_LWIP_SELECT", 
                        "name": "USE_ONLY_LWIP_SELECT", 
                        "range": null, 
                        "title": "Support LWIP socket select() only", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "LWIP_SO_REUSE", 
                                "help": "Enabling this option means that any incoming broadcast or multicast\npacket will be copied to all of the local sockets that it matches\n(may be more than one if SO_REUSEADDR is set on the socket.)\n\nThis increases memory overhead as the packets need to be copied,\nhowever they are only copied per matching socket. You can safely\ndisable it if you don't plan to receive broadcast or multicast\ntraffic on more than one socket at a time.\n", 
                                "id": "LWIP_SO_REUSE_RXTOALL", 
                                "name": "LWIP_SO_REUSE_RXTOALL", 
                                "range": null, 
                                "title": "SO_REUSEADDR copies broadcast/multicast to all matches", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enabling this option allows binding to a port which remains in\nTIME_WAIT.\n", 
                        "id": "LWIP_SO_REUSE", 
                        "name": "LWIP_SO_REUSE", 
                        "range": null, 
                        "title": "Enable SO_REUSEADDR option", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option allows checking for available data on a netconn.\n", 
                        "id": "LWIP_SO_RCVBUF", 
                        "name": "LWIP_SO_RCVBUF", 
                        "range": null, 
                        "title": "Enable SO_RCVBUF option", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option allows fragmenting outgoing IP packets if their size\nexceeds MTU.\n", 
                        "id": "LWIP_IP_FRAG", 
                        "name": "LWIP_IP_FRAG", 
                        "range": null, 
                        "title": "Enable fragment outgoing IP packets", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option allows reassemblying incoming fragmented IP packets.\n", 
                        "id": "LWIP_IP_REASSEMBLY", 
                        "name": "LWIP_IP_REASSEMBLY", 
                        "range": null, 
                        "title": "Enable reassembly incoming fragmented IP packets", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option allows LWIP statistics\n", 
                        "id": "LWIP_STATS", 
                        "name": "LWIP_STATS", 
                        "range": null, 
                        "title": "Enable LWIP statistics", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option allows ARP table to be updated.\n\nIf this option is enabled, the incoming IP packets cause the ARP table to be\nupdated with the source MAC and IP addresses supplied in the packet.\nYou may want to disable this if you do not trust LAN peers to have the\ncorrect addresses, or as a limited approach to attempt to handle\nspoofing. If disabled, lwIP will need to make a new ARP request if\nthe peer is not already in the ARP table, adding a little latency.\nThe peer *is* in the ARP table if it requested our address before.\nAlso notice that this slows down input processing of every IP packet!\n\nThere are two known issues in real application if this feature is enabled:\n- The LAN peer may have bug to update the ARP table after the ARP entry is aged out.\nIf the ARP entry on the LAN peer is aged out but failed to be updated, all IP packets\nsent from LWIP to the LAN peer will be dropped by LAN peer.\n- The LAN peer may not be trustful, the LAN peer may send IP packets to LWIP with\ntwo different MACs, but the same IP address. If this happens, the LWIP has problem\nto receive IP packets from LAN peer.\n\nSo the recommendation is to disable this option.\nHere the LAN peer means the other side to which the ESP station or soft-AP is connected.\n", 
                        "id": "LWIP_ETHARP_TRUST_IP_MAC", 
                        "name": "LWIP_ETHARP_TRUST_IP_MAC", 
                        "range": null, 
                        "title": "Enable LWIP ARP trust", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP_GRATUITOUS_ARP", 
                                "help": "Set the timer interval for gratuitous ARP. The default value is 60s\n", 
                                "id": "GARP_TMR_INTERVAL", 
                                "name": "GARP_TMR_INTERVAL", 
                                "range": null, 
                                "title": "GARP timer interval(seconds)", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable this option allows to send gratuitous ARP periodically.\n\nThis option solve the compatibility issues.If the ARP table of the AP is old, and the AP\ndoesn't send ARP request to update it's ARP table, this will lead to the STA sending IP packet fail.\nThus we send gratuitous ARP periodically to let AP update it's ARP table.\n", 
                        "id": "ESP_GRATUITOUS_ARP", 
                        "name": "ESP_GRATUITOUS_ARP", 
                        "range": null, 
                        "title": "Send gratuitous ARP periodically", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set TCPIP task receive mail box size. Generally bigger value means higher throughput\nbut more memory. The value should be bigger than UDP/TCP mail box size.\n", 
                        "id": "TCPIP_RECVMBOX_SIZE", 
                        "name": "TCPIP_RECVMBOX_SIZE", 
                        "range": [
                            6, 
                            64
                        ], 
                        "title": "TCPIP task receive mail box size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option performs a check (via ARP request) if the offered IP address\nis not already in use by another host on the network.\n", 
                        "id": "LWIP_DHCP_DOES_ARP_CHECK", 
                        "name": "LWIP_DHCP_DOES_ARP_CHECK", 
                        "range": null, 
                        "title": "DHCP: Perform ARP check on any offered address", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "When this option is enabled, DHCP client tries to re-obtain last valid IP address obtained from DHCP\nserver. Last valid DHCP configuration is stored in nvs and restored after reset/power-up. If IP is still\navailable, there is no need for sending discovery message to DHCP server and save some time.\n", 
                        "id": "LWIP_DHCP_RESTORE_LAST_IP", 
                        "name": "LWIP_DHCP_RESTORE_LAST_IP", 
                        "range": null, 
                        "title": "DHCP: Restore last IP obtained from DHCP server", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "The DHCP server is calculating lease time multiplying the sent\nand received times by this number of seconds per unit.\nThe default is 60, that equals one minute.\n", 
                                "id": "LWIP_DHCPS_LEASE_UNIT", 
                                "name": "LWIP_DHCPS_LEASE_UNIT", 
                                "range": [
                                    1, 
                                    3600
                                ], 
                                "title": "Multiplier for lease time, in seconds", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "The maximum number of DHCP clients that are connected to the server.\nAfter this number is exceeded, DHCP server removes of the oldest device\nfrom it's address pool, without notification.\n", 
                                "id": "LWIP_DHCPS_MAX_STATION_NUM", 
                                "name": "LWIP_DHCPS_MAX_STATION_NUM", 
                                "range": [
                                    1, 
                                    64
                                ], 
                                "title": "Maximum number of stations", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-lwip-dhcp-server", 
                        "title": "DHCP server", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "LWIP_AUTOIP", 
                                "help": "DHCP client will send this many probes before self-assigning a\nlink local address.\n\nFrom LWIP help: \"This can be set as low as 1 to get an AutoIP\naddress very quickly, but you should be prepared to handle a\nchanging IP address when DHCP overrides AutoIP.\" (In the case of\nESP-IDF, this means multiple SYSTEM_EVENT_STA_GOT_IP events.)\n", 
                                "id": "LWIP_AUTOIP_TRIES", 
                                "name": "LWIP_AUTOIP_TRIES", 
                                "range": null, 
                                "title": "DHCP Probes before self-assigning IPv4 LL address", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "LWIP_AUTOIP", 
                                "help": "If the AUTOIP functionality detects this many IP conflicts while\nself-assigning an address, it will go into a rate limited mode.\n", 
                                "id": "LWIP_AUTOIP_MAX_CONFLICTS", 
                                "name": "LWIP_AUTOIP_MAX_CONFLICTS", 
                                "range": null, 
                                "title": "Max IP conflicts before rate limiting", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "LWIP_AUTOIP", 
                                "help": "If rate limiting self-assignment requests, wait this long between\neach request.\n", 
                                "id": "LWIP_AUTOIP_RATE_LIMIT_INTERVAL", 
                                "name": "LWIP_AUTOIP_RATE_LIMIT_INTERVAL", 
                                "range": null, 
                                "title": "Rate limited interval (seconds)", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enabling this option allows the device to self-assign an address\nin the 169.256/16 range if none is assigned statically or via DHCP.\n\nSee RFC 3927.\n", 
                        "id": "LWIP_AUTOIP", 
                        "is_menuconfig": true, 
                        "name": "LWIP_AUTOIP", 
                        "range": null, 
                        "title": "Enable IPV4 Link-Local Addressing (AUTOIP)", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option allows the devices to IPV6 stateless address autoconfiguration.\n\nSee RFC 4862.\n", 
                        "id": "LWIP_IPV6_AUTOCONFIG", 
                        "name": "LWIP_IPV6_AUTOCONFIG", 
                        "range": null, 
                        "title": "Enable IPV6 stateless address autoconfiguration", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "LWIP_NETIF_LOOPBACK", 
                                "help": "Configure the maximum number of packets which can be queued for\nloopback on a given interface. Reducing this number may cause packets\nto be dropped, but will avoid filling memory with queued packet data.\n", 
                                "id": "LWIP_LOOPBACK_MAX_PBUFS", 
                                "name": "LWIP_LOOPBACK_MAX_PBUFS", 
                                "range": [
                                    0, 
                                    16
                                ], 
                                "title": "Max queued loopback packets per interface", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enabling this option means that if a packet is sent with a destination\naddress equal to the interface's own IP address, it will \"loop back\" and\nbe received by this interface.\n", 
                        "id": "LWIP_NETIF_LOOPBACK", 
                        "is_menuconfig": true, 
                        "name": "LWIP_NETIF_LOOPBACK", 
                        "range": null, 
                        "title": "Support per-interface loopback", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "The maximum number of simultaneously active TCP\nconnections. The practical maximum limit is\ndetermined by available heap memory at runtime.\n\nChanging this value by itself does not substantially\nchange the memory usage of LWIP, except for preventing\nnew TCP connections after the limit is reached.\n", 
                                "id": "LWIP_MAX_ACTIVE_TCP", 
                                "name": "LWIP_MAX_ACTIVE_TCP", 
                                "range": [
                                    1, 
                                    1024
                                ], 
                                "title": "Maximum active TCP Connections", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "The maximum number of simultaneously listening TCP\nconnections. The practical maximum limit is\ndetermined by available heap memory at runtime.\n\nChanging this value by itself does not substantially\nchange the memory usage of LWIP, except for preventing\nnew listening TCP connections after the limit is reached.\n", 
                                "id": "LWIP_MAX_LISTENING_TCP", 
                                "name": "LWIP_MAX_LISTENING_TCP", 
                                "range": [
                                    1, 
                                    1024
                                ], 
                                "title": "Maximum listening TCP Connections", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set maximum number of retransmissions of data segments.\n", 
                                "id": "TCP_MAXRTX", 
                                "name": "TCP_MAXRTX", 
                                "range": [
                                    3, 
                                    12
                                ], 
                                "title": "Maximum number of retransmissions of data segments", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set maximum number of retransmissions of SYN segments.\n", 
                                "id": "TCP_SYNMAXRTX", 
                                "name": "TCP_SYNMAXRTX", 
                                "range": [
                                    3, 
                                    12
                                ], 
                                "title": "Maximum number of retransmissions of SYN segments", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set maximum segment size for TCP transmission.\n\nCan be set lower to save RAM, the default value 1436 will give best throughput.\n", 
                                "id": "TCP_MSS", 
                                "name": "TCP_MSS", 
                                "range": [
                                    1220, 
                                    1436
                                ], 
                                "title": "Maximum Segment Size (MSS)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set maximum segment lifetime in in milliseconds.\n", 
                                "id": "TCP_MSL", 
                                "name": "TCP_MSL", 
                                "range": null, 
                                "title": "Maximum segment lifetime (MSL)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set default send buffer size for new TCP sockets.\n\nPer-socket send buffer size can be changed at runtime\nwith lwip_setsockopt(s, TCP_SNDBUF, ...).\n\nThis value must be at least 2x the MSS size, and the default\nis 4x the default MSS size.\n\nSetting a smaller default SNDBUF size can save some RAM, but\nwill decrease performance.\n", 
                                "id": "TCP_SND_BUF_DEFAULT", 
                                "name": "TCP_SND_BUF_DEFAULT", 
                                "range": [
                                    2440, 
                                    65535
                                ], 
                                "title": "Default send buffer size", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set default TCP receive window size for new TCP sockets.\n\nPer-socket receive window size can be changed at runtime\nwith lwip_setsockopt(s, TCP_WINDOW, ...).\n\nSetting a smaller default receive window size can save some RAM,\nbut will significantly decrease performance.\n", 
                                "id": "TCP_WND_DEFAULT", 
                                "name": "TCP_WND_DEFAULT", 
                                "range": [
                                    2440, 
                                    65535
                                ], 
                                "title": "Default receive window size", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set TCP receive mail box size. Generally bigger value means higher throughput\nbut more memory. The recommended value is: TCP_WND_DEFAULT/TCP_MSS + 2, e.g. if\nTCP_WND_DEFAULT=14360, TCP_MSS=1436, then the recommended receive mail box size is\n(14360/1436 + 2) = 12.\n\nTCP receive mail box is a per socket mail box, when the application receives packets\nfrom TCP socket, LWIP core firstly posts the packets to TCP receive mail box and the\napplication then fetches the packets from mail box. It means LWIP can caches maximum\nTCP_RECCVMBOX_SIZE packets for each TCP socket, so the maximum possible cached TCP packets\nfor all TCP sockets is TCP_RECCVMBOX_SIZE multiples the maximum TCP socket number. In other\nwords, the bigger TCP_RECVMBOX_SIZE means more memory.\nOn the other hand, if the receiv mail box is too small, the mail box may be full. If the\nmail box is full, the LWIP drops the packets. So generally we need to make sure the TCP\nreceive mail box is big enough to avoid packet drop between LWIP core and application.\n", 
                                "id": "TCP_RECVMBOX_SIZE", 
                                "name": "TCP_RECVMBOX_SIZE", 
                                "range": [
                                    6, 
                                    64
                                ], 
                                "title": "Default TCP receive mail box size", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Queue incoming out-of-order segments for later use.\n\nDisable this option to save some RAM during TCP sessions, at the expense\nof increased retransmissions if segments arrive out of order.\n", 
                                "id": "TCP_QUEUE_OOSEQ", 
                                "name": "TCP_QUEUE_OOSEQ", 
                                "range": null, 
                                "title": "Queue incoming out-of-order segments", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "This option is enabled when the following scenario happen:\nnetwork dropped and reconnected, IP changes is like: 192.168.0.2->0.0.0.0->192.168.0.2\n\nDisable this option to keep consistent with the original LWIP code behavior.\n", 
                                "id": "ESP_TCP_KEEP_CONNECTION_WHEN_IP_CHANGES", 
                                "name": "ESP_TCP_KEEP_CONNECTION_WHEN_IP_CHANGES", 
                                "range": null, 
                                "title": "Keep TCP connections when IP changed", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice TCP_OVERSIZE>", 
                                        "help": null, 
                                        "id": "TCP_OVERSIZE_MSS", 
                                        "name": "TCP_OVERSIZE_MSS", 
                                        "range": null, 
                                        "title": "MSS", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice TCP_OVERSIZE>", 
                                        "help": null, 
                                        "id": "TCP_OVERSIZE_QUARTER_MSS", 
                                        "name": "TCP_OVERSIZE_QUARTER_MSS", 
                                        "range": null, 
                                        "title": "25% MSS", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice TCP_OVERSIZE>", 
                                        "help": null, 
                                        "id": "TCP_OVERSIZE_DISABLE", 
                                        "name": "TCP_OVERSIZE_DISABLE", 
                                        "range": null, 
                                        "title": "Disabled", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": null, 
                                "help": "Allows enabling \"oversize\" allocation of TCP transmission pbufs ahead of time,\nwhich can reduce the length of pbuf chains used for transmission.\n\nThis will not make a difference to sockets where Nagle's algorithm\nis disabled.\n\nDefault value of MSS is fine for most applications, 25% MSS may save\nsome RAM when only transmitting small amounts of data. Disabled will\nhave worst performance and fragmentation characteristics, but uses\nleast RAM overall.\n", 
                                "id": "component-config-lwip-tcp-pre-allocate-transmit-pbuf-size", 
                                "name": "TCP_OVERSIZE", 
                                "title": "Pre-allocate transmit PBUF size", 
                                "type": "choice"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "LWIP_WND_SCALE", 
                                        "help": "Enable this feature to support TCP window scaling.\n", 
                                        "id": "TCP_RCV_SCALE", 
                                        "name": "TCP_RCV_SCALE", 
                                        "range": null, 
                                        "title": "Set TCP receiving window scaling factor", 
                                        "type": "int"
                                    }
                                ], 
                                "depends_on": "WIFI_LWIP_ALLOCATION_FROM_SPIRAM_FIRST", 
                                "help": "Enable this feature to support TCP window scaling.\n", 
                                "id": "LWIP_WND_SCALE", 
                                "name": "LWIP_WND_SCALE", 
                                "range": null, 
                                "title": "Support TCP window scale", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-lwip-tcp", 
                        "title": "TCP", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "The maximum number of active UDP \"connections\" (ie\nUDP sockets sending/receiving data).\nThe practical maximum limit is determined by available\nheap memory at runtime.\n", 
                                "id": "LWIP_MAX_UDP_PCBS", 
                                "name": "LWIP_MAX_UDP_PCBS", 
                                "range": [
                                    1, 
                                    1024
                                ], 
                                "title": "Maximum active UDP control blocks", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set UDP receive mail box size. The recommended value is 6.\n\nUDP receive mail box is a per socket mail box, when the application receives packets\nfrom UDP socket, LWIP core firstly posts the packets to UDP receive mail box and the\napplication then fetches the packets from mail box. It means LWIP can caches maximum\nUDP_RECCVMBOX_SIZE packets for each UDP socket, so the maximum possible cached UDP packets\nfor all UDP sockets is UDP_RECCVMBOX_SIZE multiples the maximum UDP socket number. In other\nwords, the bigger UDP_RECVMBOX_SIZE means more memory.\nOn the other hand, if the receiv mail box is too small, the mail box may be full. If the\nmail box is full, the LWIP drops the packets. So generally we need to make sure the UDP\nreceive mail box is big enough to avoid packet drop between LWIP core and application.\n", 
                                "id": "UDP_RECVMBOX_SIZE", 
                                "name": "UDP_RECVMBOX_SIZE", 
                                "range": [
                                    6, 
                                    64
                                ], 
                                "title": "Default UDP receive mail box size", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-lwip-udp", 
                        "title": "UDP", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Configure TCP/IP task stack size, used by LWIP to process multi-threaded TCP/IP operations.\nSetting this stack too small will result in stack overflow crashes.\n", 
                        "id": "TCPIP_TASK_STACK_SIZE", 
                        "name": "TCPIP_TASK_STACK_SIZE", 
                        "range": [
                            2560, 
                            65536
                        ], 
                        "title": "TCP/IP Task Stack Size", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice TCPIP_TASK_AFFINITY>", 
                                "help": null, 
                                "id": "TCPIP_TASK_AFFINITY_NO_AFFINITY", 
                                "name": "TCPIP_TASK_AFFINITY_NO_AFFINITY", 
                                "range": null, 
                                "title": "No affinity", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice TCPIP_TASK_AFFINITY>", 
                                "help": null, 
                                "id": "TCPIP_TASK_AFFINITY_CPU0", 
                                "name": "TCPIP_TASK_AFFINITY_CPU0", 
                                "range": null, 
                                "title": "CPU0", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "!FREERTOS_UNICORE && <choice TCPIP_TASK_AFFINITY>", 
                                "help": null, 
                                "id": "TCPIP_TASK_AFFINITY_CPU1", 
                                "name": "TCPIP_TASK_AFFINITY_CPU1", 
                                "range": null, 
                                "title": "CPU1", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Allows setting LwIP tasks affinity, i.e. whether the task is pinned to\nCPU0, pinned to CPU1, or allowed to run on any CPU.\nCurrently this applies to \"TCP/IP\" task and \"Ping\" task.\n", 
                        "id": "component-config-lwip-tcp-ip-task-affinity", 
                        "name": "TCPIP_TASK_AFFINITY", 
                        "title": "TCP/IP task affinity", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "TCPIP_TASK_AFFINITY", 
                        "name": "TCPIP_TASK_AFFINITY", 
                        "range": null, 
                        "title": null, 
                        "type": "hex"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "PPP_SUPPORT", 
                                "help": "Enable to set a callback which is called on change of the internal PPP state machine.\n", 
                                "id": "PPP_NOTIFY_PHASE_SUPPORT", 
                                "name": "PPP_NOTIFY_PHASE_SUPPORT", 
                                "range": null, 
                                "title": "Enable Notify Phase Callback", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "PPP_SUPPORT", 
                                "help": "Enable Password Authentication Protocol (PAP) support\n", 
                                "id": "PPP_PAP_SUPPORT", 
                                "name": "PPP_PAP_SUPPORT", 
                                "range": null, 
                                "title": "Enable PAP support", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "PPP_SUPPORT", 
                                "help": "Enable Challenge Handshake Authentication Protocol (CHAP) support\n", 
                                "id": "PPP_CHAP_SUPPORT", 
                                "name": "PPP_CHAP_SUPPORT", 
                                "range": null, 
                                "title": "Enable CHAP support", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "PPP_SUPPORT", 
                                "help": "Enable Microsoft version of the Challenge-Handshake Authentication Protocol (MSCHAP) support\n", 
                                "id": "PPP_MSCHAP_SUPPORT", 
                                "name": "PPP_MSCHAP_SUPPORT", 
                                "range": null, 
                                "title": "Enable MSCHAP support", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "PPP_SUPPORT", 
                                "help": "Enable Microsoft Point-to-Point Encryption (MPPE) support\n", 
                                "id": "PPP_MPPE_SUPPORT", 
                                "name": "PPP_MPPE_SUPPORT", 
                                "range": null, 
                                "title": "Enable MPPE support", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "PPP_SUPPORT", 
                                "help": "Enable PPP debug log output\n", 
                                "id": "PPP_DEBUG_ON", 
                                "name": "PPP_DEBUG_ON", 
                                "range": null, 
                                "title": "Enable PPP debug log output", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable PPP stack. Now only PPP over serial is possible.\n\nPPP over serial support is experimental and unsupported.\n", 
                        "id": "PPP_SUPPORT", 
                        "is_menuconfig": true, 
                        "name": "PPP_SUPPORT", 
                        "range": null, 
                        "title": "Enable PPP support (new/experimental)", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "id": "LWIP_MULTICAST_PING", 
                                "name": "LWIP_MULTICAST_PING", 
                                "range": null, 
                                "title": "Respond to multicast pings", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "id": "LWIP_BROADCAST_PING", 
                                "name": "LWIP_BROADCAST_PING", 
                                "range": null, 
                                "title": "Respond to broadcast pings", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-lwip-icmp", 
                        "title": "ICMP", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "The maximum number of simultaneously active LWIP\nRAW protocol control blocks. The practical maximum\nlimit is determined by available heap memory at runtime.\n", 
                                "id": "LWIP_MAX_RAW_PCBS", 
                                "name": "LWIP_MAX_RAW_PCBS", 
                                "range": [
                                    1, 
                                    1024
                                ], 
                                "title": "Maximum LWIP RAW PCBs", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-lwip-lwip-raw-api", 
                        "title": "LWIP RAW API", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set maximum number of NTP servers used by LwIP SNTP module.\nFirst argument of sntp_setserver/sntp_setservername functions\nis limited to this value.\n", 
                                "id": "LWIP_DHCP_MAX_NTP_SERVERS", 
                                "name": "LWIP_DHCP_MAX_NTP_SERVERS", 
                                "range": [
                                    1, 
                                    16
                                ], 
                                "title": "Maximum number of NTP servers", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "This option allows you to set the time update period via SNTP.\nDefault is 1 hour. Must not be below 15 seconds by specification.\n(SNTPv4 RFC 4330 enforces a minimum update time of 15 seconds).\n", 
                                "id": "LWIP_SNTP_UPDATE_DELAY", 
                                "name": "LWIP_SNTP_UPDATE_DELAY", 
                                "range": [
                                    15000, 
                                    4294967295
                                ], 
                                "title": "Request interval to update time (ms)", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-lwip-sntp", 
                        "title": "SNTP", 
                        "type": "menu"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-lwip", 
                "title": "LWIP", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice MBEDTLS_MEM_ALLOC_MODE>", 
                                "help": null, 
                                "id": "MBEDTLS_INTERNAL_MEM_ALLOC", 
                                "name": "MBEDTLS_INTERNAL_MEM_ALLOC", 
                                "range": null, 
                                "title": "Internal memory", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "SPIRAM_SUPPORT && <choice MBEDTLS_MEM_ALLOC_MODE>", 
                                "help": null, 
                                "id": "MBEDTLS_EXTERNAL_MEM_ALLOC", 
                                "name": "MBEDTLS_EXTERNAL_MEM_ALLOC", 
                                "range": null, 
                                "title": "External SPIRAM", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice MBEDTLS_MEM_ALLOC_MODE>", 
                                "help": null, 
                                "id": "MBEDTLS_DEFAULT_MEM_ALLOC", 
                                "name": "MBEDTLS_DEFAULT_MEM_ALLOC", 
                                "range": null, 
                                "title": "Default alloc mode", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice MBEDTLS_MEM_ALLOC_MODE>", 
                                "help": null, 
                                "id": "MBEDTLS_CUSTOM_MEM_ALLOC", 
                                "name": "MBEDTLS_CUSTOM_MEM_ALLOC", 
                                "range": null, 
                                "title": "Custom alloc mode", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Allocation strategy for mbedTLS, essentially provides ability to\nallocate all required dynamic allocations from,\n\n- Internal DRAM memory only\n- External SPIRAM memory only\n- Either internal or external memory based on default malloc()\n  behavior in ESP-IDF\n- Custom allocation mode, by overwriting calloc()/free() using\n  mbedtls_platform_set_calloc_free() function\n\nRecommended mode here is always internal, since that is most preferred\nfrom security perspective. But if application requirement does not\nallow sufficient free internal memory then alternate mode can be\nselected.\n", 
                        "id": "component-config-mbedtls-memory-allocation-strategy", 
                        "name": "MBEDTLS_MEM_ALLOC_MODE", 
                        "title": "Memory allocation strategy", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!MBEDTLS_ASYMMETRIC_CONTENT_LEN", 
                        "help": "Maximum TLS message length (in bytes) supported by mbedTLS.\n\n16384 is the default and this value is required to comply\nfully with TLS standards.\n\nHowever you can set a lower value in order to save RAM. This\nis safe if the other end of the connection supports Maximum\nFragment Length Negotiation Extension (max_fragment_length,\nsee RFC6066) or you know for certain that it will never send a\nmessage longer than a certain number of bytes.\n\nIf the value is set too low, symptoms are a failed TLS\nhandshake or a return value of MBEDTLS_ERR_SSL_INVALID_RECORD\n(-0x7200).\n", 
                        "id": "MBEDTLS_SSL_MAX_CONTENT_LEN", 
                        "name": "MBEDTLS_SSL_MAX_CONTENT_LEN", 
                        "range": [
                            512, 
                            16384
                        ], 
                        "title": "TLS maximum message content length", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ASYMMETRIC_CONTENT_LEN", 
                                "help": "This defines maximum incoming fragment length, overriding default\nmaximum content length (MBEDTLS_SSL_MAX_CONTENT_LEN).\n", 
                                "id": "MBEDTLS_SSL_IN_CONTENT_LEN", 
                                "name": "MBEDTLS_SSL_IN_CONTENT_LEN", 
                                "range": null, 
                                "title": "TLS maximum incoming fragment length", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ASYMMETRIC_CONTENT_LEN", 
                                "help": "This defines maximum outgoing fragment length, overriding default\nmaximum content length (MBEDTLS_SSL_MAX_CONTENT_LEN).\n", 
                                "id": "MBEDTLS_SSL_OUT_CONTENT_LEN", 
                                "name": "MBEDTLS_SSL_OUT_CONTENT_LEN", 
                                "range": null, 
                                "title": "TLS maximum outgoing fragment length", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If enabled, this option allows customizing TLS in/out fragment length\nin asymmetric way. Please note that enabling this with default values\nsaves 12KB of dynamic memory per TLS connection.\n", 
                        "id": "MBEDTLS_ASYMMETRIC_CONTENT_LEN", 
                        "name": "MBEDTLS_ASYMMETRIC_CONTENT_LEN", 
                        "range": null, 
                        "title": "Asymmetric in/out fragment length", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable mbedTLS debugging functions at compile time.\n\nIf this option is enabled, you can include\n\"mbedtls/esp_debug.h\" and call mbedtls_esp_enable_debug_log()\nat runtime in order to enable mbedTLS debug output via the ESP\nlog mechanism.\n", 
                        "id": "MBEDTLS_DEBUG", 
                        "name": "MBEDTLS_DEBUG", 
                        "range": null, 
                        "title": "Enable mbedTLS debugging", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable \"non-blocking\" ECC operations that can return early and be resumed.\n", 
                        "id": "MBEDTLS_ECP_RESTARTABLE", 
                        "name": "MBEDTLS_ECP_RESTARTABLE", 
                        "range": null, 
                        "title": "Enable mbedTLS ecp restartable", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable the CMAC (Cipher-based Message Authentication Code) mode for\nblock ciphers.\n", 
                        "id": "MBEDTLS_CMAC_C", 
                        "name": "MBEDTLS_CMAC_C", 
                        "range": null, 
                        "title": "Enable CMAC mode for block ciphers", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable hardware accelerated AES encryption & decryption.\n\nNote that if the ESP32 CPU is running at 240MHz, hardware AES does not\noffer any speed boost over software AES.\n", 
                        "id": "MBEDTLS_HARDWARE_AES", 
                        "name": "MBEDTLS_HARDWARE_AES", 
                        "range": null, 
                        "title": "Enable hardware AES acceleration", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_HARDWARE_MPI", 
                                "help": "Use an interrupt to coordinate MPI operations.\n\nThis allows other code to run on the CPU while an MPI operation is pending.\nOtherwise the CPU busy-waits.\n", 
                                "id": "MBEDTLS_MPI_USE_INTERRUPT", 
                                "name": "MBEDTLS_MPI_USE_INTERRUPT", 
                                "range": null, 
                                "title": "Use interrupt for MPI operations", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable hardware accelerated multiple precision integer operations.\n\nHardware accelerated multiplication, modulo multiplication,\nand modular exponentiation for up to 4096 bit results.\n\nThese operations are used by RSA.\n", 
                        "id": "MBEDTLS_HARDWARE_MPI", 
                        "name": "MBEDTLS_HARDWARE_MPI", 
                        "range": null, 
                        "title": "Enable hardware MPI (bignum) acceleration", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable hardware accelerated SHA1, SHA256, SHA384 & SHA512 in mbedTLS.\n\nDue to a hardware limitation, hardware acceleration is only\nguaranteed if SHA digests are calculated one at a time. If more\nthan one SHA digest is calculated at the same time, one will\nbe calculated fully in hardware and the rest will be calculated\n(at least partially calculated) in software. This happens automatically.\n\nSHA hardware acceleration is faster than software in some situations but\nslower in others. You should benchmark to find the best setting for you.\n", 
                        "id": "MBEDTLS_HARDWARE_SHA", 
                        "name": "MBEDTLS_HARDWARE_SHA", 
                        "range": null, 
                        "title": "Enable hardware SHA acceleration", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_HAVE_TIME", 
                                "help": "System has time.h and time(), gmtime() and the clock is correct.\nThe time needs to be correct (not necesarily very accurate, but at least\nthe date should be correct). This is used to verify the validity period of\nX.509 certificates.\n\nIt is suggested that you should get the real time by \"SNTP\".\n", 
                                "id": "MBEDTLS_HAVE_TIME_DATE", 
                                "name": "MBEDTLS_HAVE_TIME_DATE", 
                                "range": null, 
                                "title": "Enable mbedtls certificate expiry check", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "!ESP32_TIME_SYSCALL_USE_NONE", 
                        "help": "System has time.h and time().\nThe time does not need to be correct, only time differences are used.\n", 
                        "id": "MBEDTLS_HAVE_TIME", 
                        "name": "MBEDTLS_HAVE_TIME", 
                        "range": null, 
                        "title": "Enable mbedtls time", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice MBEDTLS_TLS_MODE>", 
                                "help": null, 
                                "id": "MBEDTLS_TLS_SERVER_AND_CLIENT", 
                                "name": "MBEDTLS_TLS_SERVER_AND_CLIENT", 
                                "range": null, 
                                "title": "Server & Client", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice MBEDTLS_TLS_MODE>", 
                                "help": null, 
                                "id": "MBEDTLS_TLS_SERVER_ONLY", 
                                "name": "MBEDTLS_TLS_SERVER_ONLY", 
                                "range": null, 
                                "title": "Server", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice MBEDTLS_TLS_MODE>", 
                                "help": null, 
                                "id": "MBEDTLS_TLS_CLIENT_ONLY", 
                                "name": "MBEDTLS_TLS_CLIENT_ONLY", 
                                "range": null, 
                                "title": "Client", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice MBEDTLS_TLS_MODE>", 
                                "help": null, 
                                "id": "MBEDTLS_TLS_DISABLED", 
                                "name": "MBEDTLS_TLS_DISABLED", 
                                "range": null, 
                                "title": "None", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "mbedTLS can be compiled with protocol support for the TLS\nserver, TLS client, or both server and client.\n\nReducing the number of TLS roles supported saves code size.\n", 
                        "id": "component-config-mbedtls-tls-protocol-role", 
                        "name": "MBEDTLS_TLS_MODE", 
                        "title": "TLS Protocol Role", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "MBEDTLS_TLS_SERVER", 
                        "name": "MBEDTLS_TLS_SERVER", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "MBEDTLS_TLS_CLIENT", 
                        "name": "MBEDTLS_TLS_CLIENT", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "MBEDTLS_TLS_ENABLED", 
                        "name": "MBEDTLS_TLS_ENABLED", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support symmetric key PSK (pre-shared-key) TLS key exchange modes.\n", 
                                        "id": "MBEDTLS_KEY_EXCHANGE_PSK", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_PSK", 
                                        "range": null, 
                                        "title": "Enable PSK based ciphersuite modes", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support Diffie-Hellman PSK (pre-shared-key) TLS authentication modes.\n", 
                                        "id": "MBEDTLS_KEY_EXCHANGE_DHE_PSK", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_DHE_PSK", 
                                        "range": null, 
                                        "title": "Enable DHE-PSK based ciphersuite modes", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support Elliptic-Curve-Diffie-Hellman PSK (pre-shared-key) TLS authentication modes.\n", 
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDHE_PSK", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDHE_PSK", 
                                        "range": null, 
                                        "title": "Enable ECDHE-PSK based ciphersuite modes", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support RSA PSK (pre-shared-key) TLS authentication modes.\n", 
                                        "id": "MBEDTLS_KEY_EXCHANGE_RSA_PSK", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_RSA_PSK", 
                                        "range": null, 
                                        "title": "Enable RSA-PSK based ciphersuite modes", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "MBEDTLS_TLS_ENABLED", 
                                "help": "Enable to show configuration for different types of pre-shared-key TLS authentatication methods.\n\nLeaving this options disabled will save code size if they are not used.\n", 
                                "id": "MBEDTLS_PSK_MODES", 
                                "name": "MBEDTLS_PSK_MODES", 
                                "range": null, 
                                "title": "Enable pre-shared-key ciphersuites", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_TLS_ENABLED", 
                                "help": "Enable to support ciphersuites with prefix TLS-RSA-WITH-\n", 
                                "id": "MBEDTLS_KEY_EXCHANGE_RSA", 
                                "name": "MBEDTLS_KEY_EXCHANGE_RSA", 
                                "range": null, 
                                "title": "Enable RSA-only based ciphersuite modes", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_TLS_ENABLED", 
                                "help": "Enable to support ciphersuites with prefix TLS-DHE-RSA-WITH-\n", 
                                "id": "MBEDTLS_KEY_EXCHANGE_DHE_RSA", 
                                "name": "MBEDTLS_KEY_EXCHANGE_DHE_RSA", 
                                "range": null, 
                                "title": "Enable DHE-RSA based ciphersuite modes", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDHE-RSA-WITH-\n", 
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDHE_RSA", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDHE_RSA", 
                                        "range": null, 
                                        "title": "Enable ECDHE-RSA based ciphersuite modes", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_ECDSA_C && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDHE-RSA-WITH-\n", 
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA", 
                                        "range": null, 
                                        "title": "Enable ECDHE-ECDSA based ciphersuite modes", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_ECDSA_C && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDHE-RSA-WITH-\n", 
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA", 
                                        "range": null, 
                                        "title": "Enable ECDH-ECDSA based ciphersuite modes", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDHE-RSA-WITH-\n", 
                                        "id": "MBEDTLS_KEY_EXCHANGE_ECDH_RSA", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDH_RSA", 
                                        "range": null, 
                                        "title": "Enable ECDH-RSA based ciphersuite modes", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "MBEDTLS_ECP_C && MBEDTLS_TLS_ENABLED", 
                                "help": "Enable to show Elliptic Curve based ciphersuite mode options.\n\nDisabling all Elliptic Curve ciphersuites saves code size and\ncan give slightly faster TLS handshakes, provided the server supports\nRSA-only ciphersuite modes.\n", 
                                "id": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE", 
                                "name": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE", 
                                "range": null, 
                                "title": "Support Elliptic Curve based ciphersuites", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "id": "component-config-mbedtls-tls-key-exchange-methods", 
                        "title": "TLS Key Exchange Methods", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": "The two main uses of renegotiation are (1) refresh keys on long-lived\nconnections and (2) client authentication after the initial handshake.\nIf you don't need renegotiation, disabling it will save code size and\nreduce the possibility of abuse/vulnerability.\n", 
                        "id": "MBEDTLS_SSL_RENEGOTIATION", 
                        "name": "MBEDTLS_SSL_RENEGOTIATION", 
                        "range": null, 
                        "title": "Support TLS renegotiation", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": "Support the legacy SSL 3.0 protocol. Most servers will speak a newer\nTLS protocol these days.\n", 
                        "id": "MBEDTLS_SSL_PROTO_SSL3", 
                        "name": "MBEDTLS_SSL_PROTO_SSL3", 
                        "range": null, 
                        "title": "Legacy SSL 3.0 support", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": null, 
                        "id": "MBEDTLS_SSL_PROTO_TLS1", 
                        "name": "MBEDTLS_SSL_PROTO_TLS1", 
                        "range": null, 
                        "title": "Support TLS 1.0 protocol", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": null, 
                        "id": "MBEDTLS_SSL_PROTO_TLS1_1", 
                        "name": "MBEDTLS_SSL_PROTO_TLS1_1", 
                        "range": null, 
                        "title": "Support TLS 1.1 protocol", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": null, 
                        "id": "MBEDTLS_SSL_PROTO_TLS1_2", 
                        "name": "MBEDTLS_SSL_PROTO_TLS1_2", 
                        "range": null, 
                        "title": "Support TLS 1.2 protocol", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_SSL_PROTO_TLS1_1 || MBEDTLS_SSL_PROTO_TLS1_2", 
                        "help": "Requires TLS 1.1 to be enabled for DTLS 1.0\nRequires TLS 1.2 to be enabled for DTLS 1.2\n", 
                        "id": "MBEDTLS_SSL_PROTO_DTLS", 
                        "name": "MBEDTLS_SSL_PROTO_DTLS", 
                        "range": null, 
                        "title": "Support DTLS protocol (all versions)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": "Disabling this option will save some code size if it is not needed.\n", 
                        "id": "MBEDTLS_SSL_ALPN", 
                        "name": "MBEDTLS_SSL_ALPN", 
                        "range": null, 
                        "title": "Support ALPN (Application Layer Protocol Negotiation)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": "Support RFC 5077 session tickets. See mbedTLS documentation for more details.\n\nDisabling this option will save some code size.\n", 
                        "id": "MBEDTLS_SSL_SESSION_TICKETS", 
                        "name": "MBEDTLS_SSL_SESSION_TICKETS", 
                        "range": null, 
                        "title": "TLS: Support RFC 5077 SSL session tickets", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "id": "MBEDTLS_AES_C", 
                                "name": "MBEDTLS_AES_C", 
                                "range": null, 
                                "title": "AES block cipher", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "id": "MBEDTLS_CAMELLIA_C", 
                                "name": "MBEDTLS_CAMELLIA_C", 
                                "range": null, 
                                "title": "Camellia block cipher", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enables the DES block cipher to support 3DES-based TLS ciphersuites.\n\n3DES is vulnerable to the Sweet32 attack and should only be enabled\nif absolutely necessary.\n", 
                                "id": "MBEDTLS_DES_C", 
                                "name": "MBEDTLS_DES_C", 
                                "range": null, 
                                "title": "DES block cipher (legacy, insecure)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice MBEDTLS_RC4_MODE>", 
                                        "help": null, 
                                        "id": "MBEDTLS_RC4_DISABLED", 
                                        "name": "MBEDTLS_RC4_DISABLED", 
                                        "range": null, 
                                        "title": "Disabled", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice MBEDTLS_RC4_MODE>", 
                                        "help": null, 
                                        "id": "MBEDTLS_RC4_ENABLED_NO_DEFAULT", 
                                        "name": "MBEDTLS_RC4_ENABLED_NO_DEFAULT", 
                                        "range": null, 
                                        "title": "Enabled, not in default ciphersuites", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice MBEDTLS_RC4_MODE>", 
                                        "help": null, 
                                        "id": "MBEDTLS_RC4_ENABLED", 
                                        "name": "MBEDTLS_RC4_ENABLED", 
                                        "range": null, 
                                        "title": "Enabled", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": null, 
                                "help": "ARCFOUR (RC4) stream cipher can be disabled entirely, enabled but not\nadded to default ciphersuites, or enabled completely.\n\nPlease consider the security implications before enabling RC4.\n", 
                                "id": "component-config-mbedtls-symmetric-ciphers-rc4-stream-cipher-legacy-insecure-", 
                                "name": "MBEDTLS_RC4_MODE", 
                                "title": "RC4 Stream Cipher (legacy, insecure)", 
                                "type": "choice"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enables the Blowfish block cipher (not used for TLS sessions.)\n\nThe Blowfish cipher is not used for mbedTLS TLS sessions but can be\nused for other purposes. Read up on the limitations of Blowfish (including\nSweet32) before enabling.\n", 
                                "id": "MBEDTLS_BLOWFISH_C", 
                                "name": "MBEDTLS_BLOWFISH_C", 
                                "range": null, 
                                "title": "Blowfish block cipher (read help)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enables the XTEA block cipher.\n", 
                                "id": "MBEDTLS_XTEA_C", 
                                "name": "MBEDTLS_XTEA_C", 
                                "range": null, 
                                "title": "XTEA block cipher", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_AES_C || MBEDTLS_CAMELLIA_C", 
                                "help": "Enable Counter with CBC-MAC (CCM) modes for AES and/or Camellia ciphers.\n\nDisabling this option saves some code size.\n", 
                                "id": "MBEDTLS_CCM_C", 
                                "name": "MBEDTLS_CCM_C", 
                                "range": null, 
                                "title": "CCM (Counter with CBC-MAC) block cipher modes", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_AES_C || MBEDTLS_CAMELLIA_C", 
                                "help": "Enable Galois/Counter Mode for AES and/or Camellia ciphers.\n\nThis option is generally faster than CCM.\n", 
                                "id": "MBEDTLS_GCM_C", 
                                "name": "MBEDTLS_GCM_C", 
                                "range": null, 
                                "title": "GCM (Galois/Counter) block cipher modes", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-mbedtls-symmetric-ciphers", 
                        "title": "Symmetric Ciphers", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable the RIPEMD-160 hash algorithm.\n", 
                        "id": "MBEDTLS_RIPEMD160_C", 
                        "name": "MBEDTLS_RIPEMD160_C", 
                        "range": null, 
                        "title": "Enable RIPEMD-160 hash algorithm", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enable decoding/parsing of PEM formatted certificates.\n\nIf your certificates are all in the simpler DER format, disabling\nthis option will save some code size.\n", 
                                "id": "MBEDTLS_PEM_PARSE_C", 
                                "name": "MBEDTLS_PEM_PARSE_C", 
                                "range": null, 
                                "title": "Read & Parse PEM formatted certificates", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enable writing of PEM formatted certificates.\n\nIf writing certificate data only in DER format, disabling this\noption will save some code size.\n", 
                                "id": "MBEDTLS_PEM_WRITE_C", 
                                "name": "MBEDTLS_PEM_WRITE_C", 
                                "range": null, 
                                "title": "Write PEM formatted certificates", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Support for parsing X.509 Certifificate Revocation Lists.\n", 
                                "id": "MBEDTLS_X509_CRL_PARSE_C", 
                                "name": "MBEDTLS_X509_CRL_PARSE_C", 
                                "range": null, 
                                "title": "X.509 CRL parsing", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Support for parsing X.509 Certifificate Signing Requests\n", 
                                "id": "MBEDTLS_X509_CSR_PARSE_C", 
                                "name": "MBEDTLS_X509_CSR_PARSE_C", 
                                "range": null, 
                                "title": "X.509 CSR parsing", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "id": "component-config-mbedtls-certificates", 
                        "title": "Certificates", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_ECDH_C", 
                                        "help": "Enable ECDSA. Needed to use ECDSA-xxx TLS ciphersuites.\n", 
                                        "id": "MBEDTLS_ECDSA_C", 
                                        "name": "MBEDTLS_ECDSA_C", 
                                        "range": null, 
                                        "title": "Elliptic Curve DSA", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable ECDH. Needed to use ECDHE-xxx TLS ciphersuites.\n", 
                                "id": "MBEDTLS_ECDH_C", 
                                "name": "MBEDTLS_ECDH_C", 
                                "range": null, 
                                "title": "Elliptic Curve Diffie-Hellman (ECDH)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP192R1 Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_SECP192R1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_SECP192R1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP192R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP224R1 Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_SECP224R1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_SECP224R1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP224R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP256R1 Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_SECP256R1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_SECP256R1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP256R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP384R1 Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_SECP384R1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_SECP384R1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP384R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP521R1 Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_SECP521R1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_SECP521R1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP521R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP192K1 Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_SECP192K1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_SECP192K1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP192K1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP224K1 Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_SECP224K1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_SECP224K1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP224K1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP256K1 Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_SECP256K1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_SECP256K1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP256K1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "support for DP Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_BP256R1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_BP256R1_ENABLED", 
                                "range": null, 
                                "title": "Enable BP256R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "support for DP Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_BP384R1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_BP384R1_ENABLED", 
                                "range": null, 
                                "title": "Enable BP384R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "support for DP Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_BP512R1_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_BP512R1_ENABLED", 
                                "range": null, 
                                "title": "Enable BP512R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for CURVE25519 Elliptic Curve.\n", 
                                "id": "MBEDTLS_ECP_DP_CURVE25519_ENABLED", 
                                "name": "MBEDTLS_ECP_DP_CURVE25519_ENABLED", 
                                "range": null, 
                                "title": "Enable CURVE25519 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "NIST 'modulo p' optimisations increase Elliptic Curve operation performance.\n\nDisabling this option saves some code size.\n\n# end of Elliptic Curve options\n", 
                                "id": "MBEDTLS_ECP_NIST_OPTIM", 
                                "name": "MBEDTLS_ECP_NIST_OPTIM", 
                                "range": null, 
                                "title": "NIST 'modulo p' optimisations", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "MBEDTLS_ECP_C", 
                        "is_menuconfig": true, 
                        "name": "MBEDTLS_ECP_C", 
                        "range": null, 
                        "title": "Elliptic Curve Ciphers", 
                        "type": "menu"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-mbedtls", 
                "title": "mbedTLS", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "FLASH_ENCRYPTION_ENABLED", 
                        "help": "This option enables encryption for NVS. When enabled, AES-XTS is used to encrypt\nthe complete NVS data, except the page headers. It requires XTS encryption keys\nto be stored in an encrypted partition. This means enabling flash encryption is\na pre-requisite for this feature.\n", 
                        "id": "NVS_ENCRYPTION", 
                        "name": "NVS_ENCRYPTION", 
                        "range": null, 
                        "title": "Enable NVS encryption", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-nvs", 
                "title": "NVS", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Priority used to create new tasks with default pthread parameters.\n", 
                        "id": "ESP32_PTHREAD_TASK_PRIO_DEFAULT", 
                        "name": "ESP32_PTHREAD_TASK_PRIO_DEFAULT", 
                        "range": [
                            0, 
                            255
                        ], 
                        "title": "Default task priority", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Stack size used to create new tasks with default pthread parameters.\n", 
                        "id": "ESP32_PTHREAD_TASK_STACK_SIZE_DEFAULT", 
                        "name": "ESP32_PTHREAD_TASK_STACK_SIZE_DEFAULT", 
                        "range": null, 
                        "title": "Default task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Minimum allowed pthread stack size set in attributes passed to pthread_create\n", 
                        "id": "PTHREAD_STACK_MIN", 
                        "name": "PTHREAD_STACK_MIN", 
                        "range": null, 
                        "title": "Minimum allowed pthread stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_PTHREAD_TASK_CORE_DEFAULT>", 
                                "help": null, 
                                "id": "ESP32_DEFAULT_PTHREAD_CORE_NO_AFFINITY", 
                                "name": "ESP32_DEFAULT_PTHREAD_CORE_NO_AFFINITY", 
                                "range": null, 
                                "title": "No affinity", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_PTHREAD_TASK_CORE_DEFAULT>", 
                                "help": null, 
                                "id": "ESP32_DEFAULT_PTHREAD_CORE_0", 
                                "name": "ESP32_DEFAULT_PTHREAD_CORE_0", 
                                "range": null, 
                                "title": "Core 0", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_PTHREAD_TASK_CORE_DEFAULT>", 
                                "help": null, 
                                "id": "ESP32_DEFAULT_PTHREAD_CORE_1", 
                                "name": "ESP32_DEFAULT_PTHREAD_CORE_1", 
                                "range": null, 
                                "title": "Core 1", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "!FREERTOS_UNICORE", 
                        "help": "The default core to which pthreads are pinned.\n", 
                        "id": "component-config-pthreads-default-pthread-core-affinity", 
                        "name": "ESP32_PTHREAD_TASK_CORE_DEFAULT", 
                        "title": "Default pthread core affinity", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "id": "ESP32_PTHREAD_TASK_CORE_DEFAULT", 
                        "name": "ESP32_PTHREAD_TASK_CORE_DEFAULT", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The default name of pthreads.\n", 
                        "id": "ESP32_PTHREAD_TASK_NAME_DEFAULT", 
                        "name": "ESP32_PTHREAD_TASK_NAME_DEFAULT", 
                        "range": null, 
                        "title": "Default name of pthreads", 
                        "type": "string"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-pthreads", 
                "title": "PThreads", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "SPI_FLASH_VERIFY_WRITE", 
                                "help": "If this option is enabled, if SPI flash write verification fails then a log error line\nwill be written with the address, expected & actual values. This can be useful when\ndebugging hardware SPI flash problems.\n", 
                                "id": "SPI_FLASH_LOG_FAILED_WRITE", 
                                "name": "SPI_FLASH_LOG_FAILED_WRITE", 
                                "range": null, 
                                "title": "Log errors if verification fails", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "SPI_FLASH_VERIFY_WRITE", 
                                "help": "If this option is enabled, any SPI flash write which tries to set zero bits in the flash to\nones will log a warning. Such writes will not result in the requested data appearing identically\nin flash once written, as SPI NOR flash can only set bits to one when an entire sector is erased.\nAfter erasing, individual bits can only be written from one to zero.\n\nNote that some software (such as SPIFFS) which is aware of SPI NOR flash may write one bits as an\noptimisation, relying on the data in flash becoming a bitwise AND of the new data and any existing data.\nSuch software will log spurious warnings if this option is enabled.\n", 
                                "id": "SPI_FLASH_WARN_SETTING_ZERO_TO_ONE", 
                                "name": "SPI_FLASH_WARN_SETTING_ZERO_TO_ONE", 
                                "range": null, 
                                "title": "Log warning if writing zero bits to ones", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If this option is enabled, any time SPI flash is written then the data will be read\nback and verified. This can catch hardware problems with SPI flash, or flash which\nwas not erased before verification.\n", 
                        "id": "SPI_FLASH_VERIFY_WRITE", 
                        "name": "SPI_FLASH_VERIFY_WRITE", 
                        "range": null, 
                        "title": "Verify SPI flash writes", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This option enables the following APIs:\n\n- spi_flash_reset_counters\n- spi_flash_dump_counters\n- spi_flash_get_counters\n\nThese APIs may be used to collect performance data for spi_flash APIs\nand to help understand behaviour of libraries which use SPI flash.\n", 
                        "id": "SPI_FLASH_ENABLE_COUNTERS", 
                        "name": "SPI_FLASH_ENABLE_COUNTERS", 
                        "range": null, 
                        "title": "Enable operation counters", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable this flag to use patched versions of SPI flash ROM driver functions.\nThis option is needed to write to flash on ESP32-D2WD, and any configuration\nwhere external SPI flash is connected to non-default pins.\n", 
                        "id": "SPI_FLASH_ROM_DRIVER_PATCH", 
                        "name": "SPI_FLASH_ROM_DRIVER_PATCH", 
                        "range": null, 
                        "title": "Enable SPI flash ROM driver patched functions", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice SPI_FLASH_WRITING_DANGEROUS_REGIONS>", 
                                "help": null, 
                                "id": "SPI_FLASH_WRITING_DANGEROUS_REGIONS_ABORTS", 
                                "name": "SPI_FLASH_WRITING_DANGEROUS_REGIONS_ABORTS", 
                                "range": null, 
                                "title": "Aborts", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice SPI_FLASH_WRITING_DANGEROUS_REGIONS>", 
                                "help": null, 
                                "id": "SPI_FLASH_WRITING_DANGEROUS_REGIONS_FAILS", 
                                "name": "SPI_FLASH_WRITING_DANGEROUS_REGIONS_FAILS", 
                                "range": null, 
                                "title": "Fails", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice SPI_FLASH_WRITING_DANGEROUS_REGIONS>", 
                                "help": null, 
                                "id": "SPI_FLASH_WRITING_DANGEROUS_REGIONS_ALLOWED", 
                                "name": "SPI_FLASH_WRITING_DANGEROUS_REGIONS_ALLOWED", 
                                "range": null, 
                                "title": "Allowed", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "SPI flash APIs can optionally abort or return a failure code\nif erasing or writing addresses that fall at the beginning\nof flash (covering the bootloader and partition table) or that\noverlap the app partition that contains the running app.\n\nIt is not recommended to ever write to these regions from an IDF app,\nand this check prevents logic errors or corrupted firmware memory from\ndamaging these regions.\n\nNote that this feature *does not* check calls to the esp_rom_xxx SPI flash\nROM functions. These functions should not be called directly from IDF\napplications.\n", 
                        "id": "component-config-spi-flash-driver-writing-to-dangerous-flash-regions", 
                        "name": "SPI_FLASH_WRITING_DANGEROUS_REGIONS", 
                        "title": "Writing to dangerous flash regions", 
                        "type": "choice"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "SPI_FLASH_YIELD_DURING_ERASE", 
                                "help": "If a duration of one erase command is large\nthen it will yield CPUs after finishing a current command.\n", 
                                "id": "SPI_FLASH_ERASE_YIELD_DURATION_MS", 
                                "name": "SPI_FLASH_ERASE_YIELD_DURATION_MS", 
                                "range": null, 
                                "title": "Duration of erasing to yield CPUs (ms)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "SPI_FLASH_YIELD_DURING_ERASE", 
                                "help": "Defines how many ticks will be before returning to continue a erasing.\n", 
                                "id": "SPI_FLASH_ERASE_YIELD_TICKS", 
                                "name": "SPI_FLASH_ERASE_YIELD_TICKS", 
                                "range": null, 
                                "title": "CPU release time (tick)", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This allows to yield the CPUs between erase commands.\nPrevents starvation of other tasks.\n", 
                        "id": "SPI_FLASH_YIELD_DURING_ERASE", 
                        "name": "SPI_FLASH_YIELD_DURING_ERASE", 
                        "range": null, 
                        "title": "Enables yield operation during flash erase", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-spi-flash-driver", 
                "title": "SPI Flash driver", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The value of 0 indicates the IP lost timer is disabled, otherwise the timer is enabled.\n\nThe IP address may be lost because of some reasons, e.g. when the station disconnects\nfrom soft-AP, or when DHCP IP renew fails etc. If the IP lost timer is enabled, it will\nbe started everytime the IP is lost. Event SYSTEM_EVENT_STA_LOST_IP will be raised if\nthe timer expires. The IP lost timer is stopped if the station get the IP again before\nthe timer expires.\n", 
                        "id": "IP_LOST_TIMER_INTERVAL", 
                        "name": "IP_LOST_TIMER_INTERVAL", 
                        "range": [
                            0, 
                            65535
                        ], 
                        "title": "IP Address lost timer interval (seconds)", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice USE_TCPIP_STACK_LIB>", 
                                "help": "lwIP is a small independent implementation of the TCP/IP protocol suite.\n", 
                                "id": "TCPIP_LWIP", 
                                "name": "TCPIP_LWIP", 
                                "range": null, 
                                "title": "LwIP", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Choose the TCP/IP Stack to work, for example, LwIP, uIP, etc.\n", 
                        "id": "component-config-tcp-ip-adapter-tcp-ip-stack-library", 
                        "name": "USE_TCPIP_STACK_LIB", 
                        "title": "TCP/IP Stack Library", 
                        "type": "choice"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-tcp-ip-adapter", 
                "title": "TCP/IP Adapter", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select() related functions might produce an unconveniently lot of\ndebug outputs when one sets the default log level to DEBUG or higher.\nIt is possible to suppress these debug outputs by enabling this\noption.\n", 
                        "id": "SUPPRESS_SELECT_DEBUG_OUTPUT", 
                        "name": "SUPPRESS_SELECT_DEBUG_OUTPUT", 
                        "range": null, 
                        "title": "Suppress select() related debug outputs", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Disabling this option can save memory when the support for termios.h is not required.\n", 
                        "id": "SUPPORT_TERMIOS", 
                        "name": "SUPPORT_TERMIOS", 
                        "range": null, 
                        "title": "Add support for termios.h", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "id": "component-config-virtual-file-system", 
                "title": "Virtual file system", 
                "type": "menu"
            }
        ], 
        "depends_on": null, 
        "id": "component-config", 
        "title": "Component config", 
        "type": "menu"
    }
]